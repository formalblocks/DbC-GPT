// Based on: https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/19c74140523e9af5a8489fe484456ca2adc87484/contracts/token/ERC20/ERC20.sol

contract Refinement {

    struct StateAbs {
        uint256  _totalSupply;
        mapping (address => uint256) _balances;
        mapping (address => mapping (address => uint256)) _allowed;
    }

    struct StateCon {
        uint256  _totalSupply;
        mapping (address => uint256) _balances;
        mapping (address => mapping (address => uint256)) _allowed;
    }
    
    StateAbs abs;
    StateAbs abs_old;
    StateCon con;
    StateCon con_old;

    function inv() public {}

    function cons_pre() public {}

    function cons_post() public {}

    $allowance
    function allowance_post(address _owner, address _spender, uint256 remaining) public view  returns (uint256) {}

    $balanceOf
    function balanceOf_post(address _owner, uint256 balance) public view returns (uint256){}

    $approve
    function approve_post(address _spender, uint256 _value, bool success) external returns (bool) {}
    
    $transfer
	function transfer_post(address _to, uint256 _value, bool success) external returns (bool) {}

    $transferFrom
    function transferFrom_post(address _from, address _to, uint256 _value, bool success) external returns (bool) {}
}