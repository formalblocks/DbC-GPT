run,time_taken,iterations,verified,annotated_contract,function_status,status
1,80.13410353660583,6,True,"pragma solidity >= 0.5.0;

contract ERC1155 {

    // Events
    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);
    event TransferBatch(address indexed operator, address indexed from, address indexed to, uint256[] ids, uint256[] values);
    event ApprovalForAll(address indexed account, address indexed operator, bool approved);
    event URI(string value, uint256 indexed id);

    // State Variables
    string private _uri;

    // Functions
    /**
    /// @notice postcondition balance == __verifier_old_uint(balance)
    /// @notice postcondition forall (uint x) !(x == _id) || balance == __verifier_old_uint(balance)
    function balanceOf(address _owner, uint256 _id) public view returns (uint256 balance);

    /**
    /// @notice postcondition forall (uint i) !(0 <= i && i < _owners.length) || batchBalances[i] == __verifier_old_uint(batchBalances[i])
    /// @notice postcondition forall (uint i) !(0 <= i && i < _owners.length) || (batchBalances[i] == __verifier_old_uint(batchBalances[i]) && _owners[i] == __verifier_old_address(_owners[i]))
    function balanceOfBatch(address[] memory _owners, uint256[] memory _ids) public view returns (uint256[] memory batchBalances);

    /**
    /// @notice postcondition isApprovedForAll(msg.sender, _operator) == _approved
    /// @notice postcondition forall (address op) !(op == _operator) || isApprovedForAll(msg.sender, op) == __verifier_old_bool(isApprovedForAll(msg.sender, op))
    function setApprovalForAll(address _operator, bool _approved) public;

    /**
    /// @notice postcondition approved == __verifier_old_bool(approved)
    /// @notice postcondition forall (address op) !(op == _operator) || approved == __verifier_old_bool(approved)
    function isApprovedForAll(address _owner, address _operator) public view returns (bool approved);

    /**
    /// @notice postcondition balanceOf(_to, _id) == __verifier_old_uint(balanceOf(_to, _id)) + _value
    /// @notice postcondition balanceOf(_from, _id) == __verifier_old_uint(balanceOf(_from, _id)) - _value
    /// @notice postcondition !(msg.sender == _from) || balanceOf(_from, _id) == __verifier_old_uint(balanceOf(_from, _id))
    function safeTransferFrom(address _from, address _to, uint256 _id, uint256 _value, bytes memory _data) public;

    /**
    /// @notice postcondition forall (uint i) !(0 <= i && i < _ids.length) || balanceOf(_to, _ids[i]) == __verifier_old_uint(balanceOf(_to, _ids[i])) + _values[i]
    /// @notice postcondition forall (uint i) !(0 <= i && i < _ids.length) || balanceOf(_from, _ids[i]) == __verifier_old_uint(balanceOf(_from, _ids[i])) - _values[i]
    /// @notice postcondition !(msg.sender == _from) || forall (uint i) !(0 <= i && i < _ids.length) || balanceOf(_from, _ids[i]) == __verifier_old_uint(balanceOf(_from, _ids[i]))
    function safeBatchTransferFrom(address _from, address _to, uint256[] memory _ids, uint256[] memory _values) public;

}
","{'balanceOf': 'Verified', 'balanceOfBatch': 'Verified', 'setApprovalForAll': 'Verified', 'isApprovedForAll': 'Verified', 'safeTransferFrom': 'Verified', 'safeBatchTransferFrom': 'Verified'}",[]
2,76.82327795028687,6,True,"pragma solidity >= 0.5.0;

contract ERC1155 {

    // Events
    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);
    event TransferBatch(address indexed operator, address indexed from, address indexed to, uint256[] ids, uint256[] values);
    event ApprovalForAll(address indexed account, address indexed operator, bool approved);
    event URI(string value, uint256 indexed id);

    // State Variables
    string private _uri;

    // Functions
    /**
    /// @notice postcondition balance == __verifier_old_uint(balance)
    /// @notice postcondition forall (uint x) !(x == _id) || balance == __verifier_old_uint(balance)
    function balanceOf(address _owner, uint256 _id) public view returns (uint256 balance);

    /**
    /// @notice postcondition forall (uint i) !(0 <= i && i < _owners.length) || batchBalances[i] == __verifier_old_uint(batchBalances[i])
    /// @notice postcondition forall (uint i) !(0 <= i && i < _owners.length) || (0 <= i && i < _ids.length) && batchBalances[i] == __verifier_old_uint(batchBalances[i])
    function balanceOfBatch(address[] memory _owners, uint256[] memory _ids) public view returns (uint256[] memory batchBalances);

    /**
    /// @notice postcondition isApprovedForAll(msg.sender, _operator) == _approved
    /// @notice postcondition isApprovedForAll(msg.sender, _operator) == __verifier_old_bool(isApprovedForAll(msg.sender, _operator)) || _approved
    function setApprovalForAll(address _operator, bool _approved) public;

    /**
    /// @notice postcondition approved == __verifier_old_bool(approved)
    /// @notice postcondition approved == _owner == __verifier_old_bool(isApprovedForAll(_owner, _operator))
    function isApprovedForAll(address _owner, address _operator) public view returns (bool approved);

    /**
    /// @notice postcondition balanceOf(_to, _id) == __verifier_old_uint(balanceOf(_to, _id)) + _value
    /// @notice postcondition balanceOf(_from, _id) == __verifier_old_uint(balanceOf(_from, _id)) - _value
    function safeTransferFrom(address _from, address _to, uint256 _id, uint256 _value, bytes memory _data) public;

    /**
    /// @notice postcondition forall (uint i) !(0 <= i && i < _ids.length) || balanceOf(_to, _ids[i]) == __verifier_old_uint(balanceOf(_to, _ids[i])) + _values[i]
    /// @notice postcondition forall (uint i) !(0 <= i && i < _ids.length) || balanceOf(_from, _ids[i]) == __verifier_old_uint(balanceOf(_from, _ids[i])) - _values[i]
    function safeBatchTransferFrom(address _from, address _to, uint256[] memory _ids, uint256[] memory _values) public;

}
","{'balanceOf': 'Verified', 'balanceOfBatch': 'Verified', 'setApprovalForAll': 'Verified', 'isApprovedForAll': 'Verified', 'safeTransferFrom': 'Verified', 'safeBatchTransferFrom': 'Verified'}",[]
3,68.77923965454102,6,True,"pragma solidity >= 0.5.0;

contract ERC1155 {

    // Events
    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);
    event TransferBatch(address indexed operator, address indexed from, address indexed to, uint256[] ids, uint256[] values);
    event ApprovalForAll(address indexed account, address indexed operator, bool approved);
    event URI(string value, uint256 indexed id);

    // State Variables
    string private _uri;

    // Functions
    /**
    /// @notice postcondition balance == __verifier_old_uint(balance)
    /// @notice postcondition forall (uint x) !(x == _id) || balance == __verifier_old_uint(balance)
    function balanceOf(address _owner, uint256 _id) public view returns (uint256 balance);

    /**
    /// @notice postcondition forall (uint i) !(0 <= i && i < _owners.length) || batchBalances[i] == __verifier_old_uint(batchBalances[i])
    /// @notice postcondition forall (uint i) !(0 <= i && i < _owners.length) || !(0 <= i && i < _ids.length) || batchBalances[i] == __verifier_old_uint(batchBalances[i])
    function balanceOfBatch(address[] memory _owners, uint256[] memory _ids) public view returns (uint256[] memory batchBalances);

    /**
    /// @notice postcondition isApprovedForAll(msg.sender, _operator) == _approved
    function setApprovalForAll(address _operator, bool _approved) public;

    /**
    /// @notice postcondition approved == isApprovedForAll(_owner, _operator)
    function isApprovedForAll(address _owner, address _operator) public view returns (bool approved);

    /**
    /// @notice postcondition balanceOf(_to, _id) == __verifier_old_uint(balanceOf(_to, _id)) + _value
    /// @notice postcondition balanceOf(_from, _id) == __verifier_old_uint(balanceOf(_from, _id)) - _value
    function safeTransferFrom(address _from, address _to, uint256 _id, uint256 _value, bytes memory _data) public;

    /**
    /// @notice postcondition forall (uint i) !(0 <= i && i < _ids.length) || balanceOf(_to, _ids[i]) == __verifier_old_uint(balanceOf(_to, _ids[i])) + _values[i]
    /// @notice postcondition forall (uint i) !(0 <= i && i < _ids.length) || balanceOf(_from, _ids[i]) == __verifier_old_uint(balanceOf(_from, _ids[i])) - _values[i]
    function safeBatchTransferFrom(address _from, address _to, uint256[] memory _ids, uint256[] memory _values) public;

}
","{'balanceOf': 'Verified', 'balanceOfBatch': 'Verified', 'setApprovalForAll': 'Verified', 'isApprovedForAll': 'Verified', 'safeTransferFrom': 'Verified', 'safeBatchTransferFrom': 'Verified'}",[]
4,80.07386326789856,6,True,"pragma solidity >= 0.5.0;

contract ERC1155 {

    // Events
    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);
    event TransferBatch(address indexed operator, address indexed from, address indexed to, uint256[] ids, uint256[] values);
    event ApprovalForAll(address indexed account, address indexed operator, bool approved);
    event URI(string value, uint256 indexed id);

    // State Variables
    string private _uri;

    // Functions
    /**
    /// @notice postcondition balance == __verifier_old_uint(balance)
    /// @notice postcondition forall (uint x) !(x == _id) || balance == __verifier_old_uint(balance)
    function balanceOf(address _owner, uint256 _id) public view returns (uint256 balance);

    /**
    /// @notice postcondition forall (uint i) !(0 <= i && i < _owners.length) || batchBalances[i] == __verifier_old_uint(batchBalances[i])
    /// @notice postcondition forall (uint i) !(0 <= i && i < _owners.length) || (0 <= i && i < _ids.length) ==> batchBalances[i] == __verifier_old_uint(batchBalances[i])
    function balanceOfBatch(address[] memory _owners, uint256[] memory _ids) public view returns (uint256[] memory batchBalances);

    /**
    /// @notice postcondition isApprovedForAll(msg.sender, _operator) == _approved
    /// @notice postcondition forall (address op) !(op == _operator) || isApprovedForAll(msg.sender, op) == __verifier_old_bool(isApprovedForAll(msg.sender, op))
    function setApprovalForAll(address _operator, bool _approved) public;

    /**
    /// @notice postcondition approved == __verifier_old_bool(approved)
    /// @notice postcondition forall (address op) !(op == _operator) || approved == __verifier_old_bool(approved)
    function isApprovedForAll(address _owner, address _operator) public view returns (bool approved);

    /**
    /// @notice postcondition balanceOf(_to, _id) == __verifier_old_uint(balanceOf(_to, _id)) + _value
    /// @notice postcondition balanceOf(_from, _id) == __verifier_old_uint(balanceOf(_from, _id)) - _value
    /// @notice postcondition !(msg.sender == _from) || balanceOf(_from, _id) == __verifier_old_uint(balanceOf(_from, _id))
    function safeTransferFrom(address _from, address _to, uint256 _id, uint256 _value, bytes memory _data) public;

    /**
    /// @notice postcondition forall (uint i) !(0 <= i && i < _ids.length) || balanceOf(_to, _ids[i]) == __verifier_old_uint(balanceOf(_to, _ids[i])) + _values[i]
    /// @notice postcondition forall (uint i) !(0 <= i && i < _ids.length) || balanceOf(_from, _ids[i]) == __verifier_old_uint(balanceOf(_from, _ids[i])) - _values[i]
    /// @notice postcondition !(msg.sender == _from) || forall (uint i) !(0 <= i && i < _ids.length) || balanceOf(_from, _ids[i]) == __verifier_old_uint(balanceOf(_from, _ids[i]))
    function safeBatchTransferFrom(address _from, address _to, uint256[] memory _ids, uint256[] memory _values) public;

}
","{'balanceOf': 'Verified', 'balanceOfBatch': 'Verified', 'setApprovalForAll': 'Verified', 'isApprovedForAll': 'Verified', 'safeTransferFrom': 'Verified', 'safeBatchTransferFrom': 'Verified'}",[]
5,89.13887548446655,6,True,"pragma solidity >= 0.5.0;

contract ERC1155 {

    // Events
    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);
    event TransferBatch(address indexed operator, address indexed from, address indexed to, uint256[] ids, uint256[] values);
    event ApprovalForAll(address indexed account, address indexed operator, bool approved);
    event URI(string value, uint256 indexed id);

    // State Variables
    string private _uri;

    // Functions
    /**
    /// @notice postcondition balance == __verifier_old_uint(balance)
    /// @notice postcondition forall (uint x) !(x == _id) || balance == __verifier_old_uint(balance)
    function balanceOf(address _owner, uint256 _id) public view returns (uint256 balance);

    /**
    /// @notice postcondition forall (uint i) !(0 <= i && i < _owners.length) || batchBalances[i] == __verifier_old_uint(batchBalances[i])
    /// @notice postcondition forall (uint i) !(0 <= i && i < _owners.length) || (0 <= i && i < _ids.length) ==> batchBalances[i] == __verifier_old_uint(batchBalances[i])
    function balanceOfBatch(address[] memory _owners, uint256[] memory _ids) public view returns (uint256[] memory batchBalances);

    /**
    /// @notice postcondition isApprovedForAll(msg.sender, _operator) == _approved
    /// @notice postcondition forall (address op) !(op == _operator) || isApprovedForAll(msg.sender, op) == __verifier_old_bool(isApprovedForAll(msg.sender, op))
    function setApprovalForAll(address _operator, bool _approved) public;

    /**
    /// @notice postcondition approved == __verifier_old_bool(approved)
    /// @notice postcondition forall (address op) !(op == _operator) || approved == __verifier_old_bool(approved)
    function isApprovedForAll(address _owner, address _operator) public view returns (bool approved);

    /**
    /// @notice postcondition balanceOf(_to, _id) == __verifier_old_uint(balanceOf(_to, _id)) + _value
    /// @notice postcondition balanceOf(_from, _id) == __verifier_old_uint(balanceOf(_from, _id)) - _value
    function safeTransferFrom(address _from, address _to, uint256 _id, uint256 _value, bytes memory _data) public;

    /**
    /// @notice postcondition forall (uint i) !(0 <= i && i < _ids.length) || balanceOf(_to, _ids[i]) == __verifier_old_uint(balanceOf(_to, _ids[i])) + _values[i]
    /// @notice postcondition forall (uint i) !(0 <= i && i < _ids.length) || balanceOf(_from, _ids[i]) == __verifier_old_uint(balanceOf(_from, _ids[i])) - _values[i]
    function safeBatchTransferFrom(address _from, address _to, uint256[] memory _ids, uint256[] memory _values) public;

}
","{'balanceOf': 'Verified', 'balanceOfBatch': 'Verified', 'setApprovalForAll': 'Verified', 'isApprovedForAll': 'Verified', 'safeTransferFrom': 'Verified', 'safeBatchTransferFrom': 'Verified'}",[]
6,71.77508807182312,6,True,"pragma solidity >= 0.5.0;

contract ERC1155 {

    // Events
    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);
    event TransferBatch(address indexed operator, address indexed from, address indexed to, uint256[] ids, uint256[] values);
    event ApprovalForAll(address indexed account, address indexed operator, bool approved);
    event URI(string value, uint256 indexed id);

    // State Variables
    string private _uri;

    // Functions
    /**
    /// @notice postcondition balance == __verifier_old_uint(balance)
    /// @notice postcondition forall (uint x) !(x == _id) || balance == __verifier_old_uint(balance)
    function balanceOf(address _owner, uint256 _id) public view returns (uint256 balance);

    /**
    /// @notice postcondition forall (uint i) !(0 <= i && i < _owners.length) || batchBalances[i] == __verifier_old_uint(batchBalances[i])
    /// @notice postcondition forall (uint i) !(0 <= i && i < _owners.length) || (0 <= i && i < _ids.length) && batchBalances[i] == __verifier_old_uint(batchBalances[i])
    function balanceOfBatch(address[] memory _owners, uint256[] memory _ids) public view returns (uint256[] memory batchBalances);

    /**
    /// @notice postcondition isApprovedForAll(msg.sender, _operator) == _approved
    /// @notice postcondition forall (address op) !(op == _operator) || isApprovedForAll(msg.sender, op) == __verifier_old_bool(isApprovedForAll(msg.sender, op))
    function setApprovalForAll(address _operator, bool _approved) public;

    /**
    /// @notice postcondition approved == __verifier_old_bool(approved)
    /// @notice postcondition forall (address op) !(op == _operator) || approved == __verifier_old_bool(approved)
    function isApprovedForAll(address _owner, address _operator) public view returns (bool approved);

    /**
    /// @notice postcondition balanceOf(_to, _id) == __verifier_old_uint(balanceOf(_to, _id)) + _value
    /// @notice postcondition balanceOf(_from, _id) == __verifier_old_uint(balanceOf(_from, _id)) - _value
    /// @notice postcondition !(msg.sender == _from) || balanceOf(_from, _id) == __verifier_old_uint(balanceOf(_from, _id))
    function safeTransferFrom(address _from, address _to, uint256 _id, uint256 _value, bytes memory _data) public;

    /**
    /// @notice postcondition forall (uint i) !(0 <= i && i < _ids.length) || balanceOf(_to, _ids[i]) == __verifier_old_uint(balanceOf(_to, _ids[i])) + _values[i]
    /// @notice postcondition forall (uint i) !(0 <= i && i < _ids.length) || balanceOf(_from, _ids[i]) == __verifier_old_uint(balanceOf(_from, _ids[i])) - _values[i]
    /// @notice postcondition !(msg.sender == _from) || forall (uint i) !(0 <= i && i < _ids.length) || balanceOf(_from, _ids[i]) == __verifier_old_uint(balanceOf(_from, _ids[i]))
    function safeBatchTransferFrom(address _from, address _to, uint256[] memory _ids, uint256[] memory _values) public;

}
","{'balanceOf': 'Verified', 'balanceOfBatch': 'Verified', 'setApprovalForAll': 'Verified', 'isApprovedForAll': 'Verified', 'safeTransferFrom': 'Verified', 'safeBatchTransferFrom': 'Verified'}",[]
7,60.42864394187927,6,True,"pragma solidity >= 0.5.0;

contract ERC1155 {

    // Events
    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);
    event TransferBatch(address indexed operator, address indexed from, address indexed to, uint256[] ids, uint256[] values);
    event ApprovalForAll(address indexed account, address indexed operator, bool approved);
    event URI(string value, uint256 indexed id);

    // State Variables
    string private _uri;

    // Functions
    /**
    /// @notice postcondition balance == __verifier_old_uint(balance)
    /// @notice postcondition forall (uint x) !(x == _id) || balance == __verifier_old_uint(balance)
    function balanceOf(address _owner, uint256 _id) public view returns (uint256 balance);

    /**
    /// @notice postcondition forall (uint i) !(0 <= i && i < _owners.length) || batchBalances[i] == __verifier_old_uint(batchBalances[i])
    /// @notice postcondition forall (uint i) !(0 <= i && i < _owners.length) || (0 <= i && i < _ids.length) && batchBalances[i] == __verifier_old_uint(batchBalances[i])
    function balanceOfBatch(address[] memory _owners, uint256[] memory _ids) public view returns (uint256[] memory batchBalances);

    /**
    /// @notice postcondition isApprovedForAll(msg.sender, _operator) == _approved
    function setApprovalForAll(address _operator, bool _approved) public;

    /**
    /// @notice postcondition approved == isApprovedForAll(_owner, _operator)
    function isApprovedForAll(address _owner, address _operator) public view returns (bool approved);

    /**
    /// @notice postcondition balanceOf(_to, _id) == __verifier_old_uint(balanceOf(_to, _id)) + _value
    /// @notice postcondition balanceOf(_from, _id) == __verifier_old_uint(balanceOf(_from, _id)) - _value
    function safeTransferFrom(address _from, address _to, uint256 _id, uint256 _value, bytes memory _data) public;

    /**
    /// @notice postcondition forall (uint i) !(0 <= i && i < _ids.length) || balanceOf(_to, _ids[i]) == __verifier_old_uint(balanceOf(_to, _ids[i])) + _values[i]
    /// @notice postcondition forall (uint i) !(0 <= i && i < _ids.length) || balanceOf(_from, _ids[i]) == __verifier_old_uint(balanceOf(_from, _ids[i])) - _values[i]
    function safeBatchTransferFrom(address _from, address _to, uint256[] memory _ids, uint256[] memory _values) public;

}
","{'balanceOf': 'Verified', 'balanceOfBatch': 'Verified', 'setApprovalForAll': 'Verified', 'isApprovedForAll': 'Verified', 'safeTransferFrom': 'Verified', 'safeBatchTransferFrom': 'Verified'}",[]
8,68.77124857902527,6,True,"pragma solidity >= 0.5.0;

contract ERC1155 {

    // Events
    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);
    event TransferBatch(address indexed operator, address indexed from, address indexed to, uint256[] ids, uint256[] values);
    event ApprovalForAll(address indexed account, address indexed operator, bool approved);
    event URI(string value, uint256 indexed id);

    // State Variables
    string private _uri;

    // Functions
    /**
    /// @notice postcondition balance == __verifier_old_uint(balance)
    /// @notice postcondition forall (uint x) !(x == _id) || balance == __verifier_old_uint(balance)
    function balanceOf(address _owner, uint256 _id) public view returns (uint256 balance);

    /**
    /// @notice postcondition forall (uint i) !(0 <= i && i < _owners.length) || batchBalances[i] == __verifier_old_uint(batchBalances[i])
    /// @notice postcondition forall (uint i) !(0 <= i && i < _owners.length) || (0 <= i && i < _ids.length) ==> batchBalances[i] == __verifier_old_uint(batchBalances[i])
    function balanceOfBatch(address[] memory _owners, uint256[] memory _ids) public view returns (uint256[] memory batchBalances);

    /**
    /// @notice postcondition isApprovedForAll(msg.sender, _operator) == _approved
    /// @notice postcondition forall (address op) !(op == _operator) || isApprovedForAll(msg.sender, op) == __verifier_old_bool(isApprovedForAll(msg.sender, op))
    function setApprovalForAll(address _operator, bool _approved) public;

    /**
    /// @notice postcondition approved == __verifier_old_bool(approved)
    /// @notice postcondition forall (address op) !(op == _operator) || approved == __verifier_old_bool(approved)
    function isApprovedForAll(address _owner, address _operator) public view returns (bool approved);

    /**
    /// @notice postcondition balanceOf(_to, _id) == __verifier_old_uint(balanceOf(_to, _id)) + _value
    /// @notice postcondition balanceOf(_from, _id) == __verifier_old_uint(balanceOf(_from, _id)) - _value
    /// @notice postcondition !(msg.sender == _from) || balanceOf(_from, _id) == __verifier_old_uint(balanceOf(_from, _id))
    function safeTransferFrom(address _from, address _to, uint256 _id, uint256 _value, bytes memory _data) public;

    /**
    /// @notice postcondition forall (uint i) !(0 <= i && i < _ids.length) || balanceOf(_to, _ids[i]) == __verifier_old_uint(balanceOf(_to, _ids[i])) + _values[i]
    /// @notice postcondition forall (uint i) !(0 <= i && i < _ids.length) || balanceOf(_from, _ids[i]) == __verifier_old_uint(balanceOf(_from, _ids[i])) - _values[i]
    /// @notice postcondition !(msg.sender == _from) || forall (uint i) !(0 <= i && i < _ids.length) || balanceOf(_from, _ids[i]) == __verifier_old_uint(balanceOf(_from, _ids[i]))
    function safeBatchTransferFrom(address _from, address _to, uint256[] memory _ids, uint256[] memory _values) public;

}
","{'balanceOf': 'Verified', 'balanceOfBatch': 'Verified', 'setApprovalForAll': 'Verified', 'isApprovedForAll': 'Verified', 'safeTransferFrom': 'Verified', 'safeBatchTransferFrom': 'Verified'}",[]
9,74.48466467857361,6,True,"pragma solidity >= 0.5.0;

contract ERC1155 {

    // Events
    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);
    event TransferBatch(address indexed operator, address indexed from, address indexed to, uint256[] ids, uint256[] values);
    event ApprovalForAll(address indexed account, address indexed operator, bool approved);
    event URI(string value, uint256 indexed id);

    // State Variables
    string private _uri;

    // Functions
    /**
    /// @notice postcondition balance == __verifier_old_uint(balance)
    /// @notice postcondition forall (uint x) !(x == _id) || balance == __verifier_old_uint(balance)
    function balanceOf(address _owner, uint256 _id) public view returns (uint256 balance);

    /**
    /// @notice postcondition forall (uint i) !(0 <= i && i < _owners.length) || batchBalances[i] == __verifier_old_uint(batchBalances[i])
    /// @notice postcondition forall (uint i) !(0 <= i && i < _owners.length) || (0 <= i && i < _ids.length) && batchBalances[i] == __verifier_old_uint(batchBalances[i])
    function balanceOfBatch(address[] memory _owners, uint256[] memory _ids) public view returns (uint256[] memory batchBalances);

    /**
    /// @notice postcondition isApprovedForAll(msg.sender, _operator) == _approved
    function setApprovalForAll(address _operator, bool _approved) public;

    /**
    /// @notice postcondition approved == __verifier_old_bool(approved)
    function isApprovedForAll(address _owner, address _operator) public view returns (bool approved);

    /**
    /// @notice postcondition balanceOf(_to, _id) == __verifier_old_uint(balanceOf(_to, _id)) + _value
    /// @notice postcondition balanceOf(_from, _id) == __verifier_old_uint(balanceOf(_from, _id)) - _value
    function safeTransferFrom(address _from, address _to, uint256 _id, uint256 _value, bytes memory _data) public;

    /**
    /// @notice postcondition forall (uint i) !(0 <= i && i < _ids.length) || balanceOf(_to, _ids[i]) == __verifier_old_uint(balanceOf(_to, _ids[i])) + _values[i]
    /// @notice postcondition forall (uint i) !(0 <= i && i < _ids.length) || balanceOf(_from, _ids[i]) == __verifier_old_uint(balanceOf(_from, _ids[i])) - _values[i]
    function safeBatchTransferFrom(address _from, address _to, uint256[] memory _ids, uint256[] memory _values) public;

}
","{'balanceOf': 'Verified', 'balanceOfBatch': 'Verified', 'setApprovalForAll': 'Verified', 'isApprovedForAll': 'Verified', 'safeTransferFrom': 'Verified', 'safeBatchTransferFrom': 'Verified'}",[]
10,85.52602291107178,6,True,"pragma solidity >= 0.5.0;

contract ERC1155 {

    // Events
    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);
    event TransferBatch(address indexed operator, address indexed from, address indexed to, uint256[] ids, uint256[] values);
    event ApprovalForAll(address indexed account, address indexed operator, bool approved);
    event URI(string value, uint256 indexed id);

    // State Variables
    string private _uri;

    // Functions
    /**
    /// @notice postcondition balance == __verifier_old_uint(balance)
    /// @notice postcondition forall (uint x) !(x == _id) || balance == __verifier_old_uint(balance)
    function balanceOf(address _owner, uint256 _id) public view returns (uint256 balance);

    /**
    /// @notice postcondition forall (uint i) !(0 <= i && i < _owners.length) || batchBalances[i] == __verifier_old_uint(batchBalances[i])
    /// @notice postcondition forall (uint i) !(0 <= i && i < _owners.length) || (batchBalances[i] == __verifier_old_uint(batchBalances[i]) && _owners[i] == _owners[i])
    function balanceOfBatch(address[] memory _owners, uint256[] memory _ids) public view returns (uint256[] memory batchBalances);

    /**
    /// @notice postcondition isApprovedForAll(msg.sender, _operator) == _approved
    /// @notice postcondition forall (address op) !(op == _operator) || isApprovedForAll(msg.sender, op) == __verifier_old_bool(isApprovedForAll(msg.sender, op))
    function setApprovalForAll(address _operator, bool _approved) public;

    /**
    /// @notice postcondition approved == __verifier_old_bool(approved)
    /// @notice postcondition forall (address op) !(op == _operator) || approved == __verifier_old_bool(approved)
    function isApprovedForAll(address _owner, address _operator) public view returns (bool approved);

    /**
    /// @notice postcondition balanceOf(_to, _id) == __verifier_old_uint(balanceOf(_to, _id)) + _value
    /// @notice postcondition balanceOf(_from, _id) == __verifier_old_uint(balanceOf(_from, _id)) - _value
    /// @notice postcondition !(msg.sender == _from) || (balanceOf(_from, _id) == __verifier_old_uint(balanceOf(_from, _id)))
    function safeTransferFrom(address _from, address _to, uint256 _id, uint256 _value, bytes memory _data) public;

    /**
    /// @notice postcondition forall (uint i) !(0 <= i && i < _ids.length) || balanceOf(_to, _ids[i]) == __verifier_old_uint(balanceOf(_to, _ids[i])) + _values[i]
    /// @notice postcondition forall (uint i) !(0 <= i && i < _ids.length) || balanceOf(_from, _ids[i]) == __verifier_old_uint(balanceOf(_from, _ids[i])) - _values[i]
    /// @notice postcondition !(msg.sender == _from) || (forall (uint i) !(0 <= i && i < _ids.length) || balanceOf(_from, _ids[i]) == __verifier_old_uint(balanceOf(_from, _ids[i])))
    function safeBatchTransferFrom(address _from, address _to, uint256[] memory _ids, uint256[] memory _values) public;

}
","{'balanceOf': 'Verified', 'balanceOfBatch': 'Verified', 'setApprovalForAll': 'Verified', 'isApprovedForAll': 'Verified', 'safeTransferFrom': 'Verified', 'safeBatchTransferFrom': 'Verified'}",[]
