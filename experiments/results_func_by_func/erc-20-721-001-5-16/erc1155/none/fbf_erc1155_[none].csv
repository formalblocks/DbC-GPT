run,time_taken,iterations,verified,annotated_contract,function_status,status,threads
1,328.9881489276886,15,False,"pragma solidity >= 0.5.0;

contract ERC1155 {

    // Events
    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);
    event TransferBatch(address indexed operator, address indexed from, address indexed to, uint256[] ids, uint256[] values);
    event ApprovalForAll(address indexed account, address indexed operator, bool approved);
    event URI(string value, uint256 indexed id);

    // State Variables
    string private _uri;

    // Functions
    /// @notice postcondition balance == _balances[_id][_owner]
    function balanceOf(address _owner, uint256 _id) public view returns (uint256 balance);

    /// @notice postcondition forall (uint i) !(0 <= i && i < _owners.length) || batchBalances[i] == _balances[_ids[i]][_owners[i]]
    function balanceOfBatch(address[] memory _owners, uint256[] memory _ids) public view returns (uint256[] memory batchBalances);

    /// @notice postcondition _operator == __verifier_old_address(_operator) || _operator == _operator
    /// @notice postcondition _approved == __verifier_old_bool(_approved) || _operator == _operator
    function setApprovalForAll(address _operator, bool _approved) public;

    /// @notice postcondition approved == _operatorApprovals[_owner][_operator]
    function isApprovedForAll(address _owner, address _operator) public view returns (bool approved);

    /// @notice postcondition true
    function safeTransferFrom(address _from, address _to, uint256 _id, uint256 _value, bytes memory _data) public;

    /// @notice postcondition forall (uint i) !(0 <= i && i < _ids.length) || _balances[_ids[i]][_to] == __verifier_old_uint(_balances[_ids[i]][_to]) + _values[i]
    /// @notice postcondition forall (uint j) !(0 <= j && j < _ids.length) || _balances[_ids[j]][_from] == __verifier_old_uint(_balances[_ids[j]][_from]) - _values[j]
    function safeBatchTransferFrom(address _from, address _to, uint256[] memory _ids, uint256[] memory _values) public;

}
","{'balanceOf': 'Verified', 'balanceOfBatch': 'Verified', 'setApprovalForAll': 'Verified', 'isApprovedForAll': 'Verified', 'safeTransferFrom': 'Failed', 'safeBatchTransferFrom': 'Verified'}",[],"['thread_VUtdK9lavwLUUx7adRCUir93', 'thread_5tmLWpXDwoRAIZ8AvWRHRfd6', 'thread_LT1uqeSFrJSpQWGK7h84d7RQ', 'thread_TgbiMhSWVZTEWpj9lP7WuTNA', 'thread_WKv1kXx69DHZoWPbAFqkPcWI', 'thread_r5f1pCQrmdk6Q4SXFlVolC6s']"
2,362.9621796607971,17,False,"pragma solidity >= 0.5.0;

contract ERC1155 {

    // Events
    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);
    event TransferBatch(address indexed operator, address indexed from, address indexed to, uint256[] ids, uint256[] values);
    event ApprovalForAll(address indexed account, address indexed operator, bool approved);
    event URI(string value, uint256 indexed id);

    // State Variables
    string private _uri;

    // Functions
    /// @notice postcondition balance == _balances[_id][_owner]
    function balanceOf(address _owner, uint256 _id) public view returns (uint256 balance);

    /// @notice postcondition forall (uint i) !(0 <= i && i < _owners.length) || batchBalances[i] == _balances[_ids[i]][_owners[i]]
    function balanceOfBatch(address[] memory _owners, uint256[] memory _ids) public view returns (uint256[] memory batchBalances);

    /// @notice postcondition true
    function setApprovalForAll(address _operator, bool _approved) public;

    /// @notice postcondition approved == _operatorApprovals[_owner][_operator]
    function isApprovedForAll(address _owner, address _operator) public view returns (bool approved);

    /// @notice postcondition _to != address(0)
    /// @notice postcondition forall (uint256 x) !(x == _id && _from == _to) || _balances[x][_from] == __verifier_old_uint(_balances[x][_from])
    /// @notice postcondition _balances[_id][_from] == __verifier_old_uint(_balances[_id][_from]) - _value || _from == _to
    /// @notice postcondition _balances[_id][_to] == __verifier_old_uint(_balances[_id][_to]) + _value || _from == _to
    function safeTransferFrom(address _from, address _to, uint256 _id, uint256 _value, bytes memory _data) public;

    /// @notice postcondition forall (uint i) !(0 <= i && i < _ids.length) || _balances[_ids[i]][_to] == __verifier_old_uint(_balances[_ids[i]][_to]) + _values[i]
    /// @notice postcondition forall (uint j) !(0 <= j && j < _ids.length) || _balances[_ids[j]][_from] == __verifier_old_uint(_balances[_ids[j]][_from]) - _values[j]
    function safeBatchTransferFrom(address _from, address _to, uint256[] memory _ids, uint256[] memory _values) public;

}
","{'balanceOf': 'Verified', 'balanceOfBatch': 'Verified', 'setApprovalForAll': 'Failed', 'isApprovedForAll': 'Verified', 'safeTransferFrom': 'Verified', 'safeBatchTransferFrom': 'Verified'}",[],"['thread_uVsXOassPlpKK0srUjxVSW03', 'thread_Y76mrug0vXIt07Q8GuKJ6UfN', 'thread_2rUjH9qS3xdFz3tcwXg3VdeO', 'thread_92OrpxxWxsPWghO7pAwv03O7', 'thread_mo9tEYaqNApKrptAgCVTXZ6J', 'thread_MOqupY8N7RGE6kV05ofYAd8o']"
3,169.73854541778564,8,True,"pragma solidity >= 0.5.0;

contract ERC1155 {

    // Events
    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);
    event TransferBatch(address indexed operator, address indexed from, address indexed to, uint256[] ids, uint256[] values);
    event ApprovalForAll(address indexed account, address indexed operator, bool approved);
    event URI(string value, uint256 indexed id);

    // State Variables
    string private _uri;

    // Functions
    /// @notice postcondition balance == _balances[_id][_owner]
    function balanceOf(address _owner, uint256 _id) public view returns (uint256 balance);

    /// @notice postcondition forall (uint i) !(0 <= i && i < _owners.length) || batchBalances[i] == _balances[_ids[i]][_owners[i]]
    function balanceOfBatch(address[] memory _owners, uint256[] memory _ids) public view returns (uint256[] memory batchBalances);

    /// @notice postcondition _operator == __verifier_old_address(_operator) || _operator == _operator
    /// @notice postcondition forall (address addr) !(addr == _operator) || _operatorApprovals[__verifier_old_address(msg.sender)][addr] == _operatorApprovals[msg.sender][addr]
    /// @notice postcondition _approved == __verifier_old_bool(_approved) || _operatorApprovals[msg.sender][_operator] == _approved
    function setApprovalForAll(address _operator, bool _approved) public;

    /// @notice postcondition approved == _operatorApprovals[_owner][_operator]
    function isApprovedForAll(address _owner, address _operator) public view returns (bool approved);

    /// @notice postcondition _to != address(0)
    /// @notice postcondition forall (uint256 x) (_from == _to || x == _id || _balances[x][_from] == __verifier_old_uint(_balances[x][_from]))
    /// @notice postcondition _balances[_id][_from] == __verifier_old_uint(_balances[_id][_from]) - _value || _from == _to
    /// @notice postcondition _balances[_id][_to] == __verifier_old_uint(_balances[_id][_to]) + _value || _from == _to
    function safeTransferFrom(address _from, address _to, uint256 _id, uint256 _value, bytes memory _data) public;

    /// @notice postcondition forall (uint i) !(0 <= i && i < _ids.length) || _balances[_ids[i]][_to] == __verifier_old_uint(_balances[_ids[i]][_to]) + _values[i]
    /// @notice postcondition forall (uint j) !(0 <= j && j < _ids.length) || _balances[_ids[j]][_from] == __verifier_old_uint(_balances[_ids[j]][_from]) - _values[j]
    function safeBatchTransferFrom(address _from, address _to, uint256[] memory _ids, uint256[] memory _values) public;

}
","{'balanceOf': 'Verified', 'balanceOfBatch': 'Verified', 'setApprovalForAll': 'Verified', 'isApprovedForAll': 'Verified', 'safeTransferFrom': 'Verified', 'safeBatchTransferFrom': 'Verified'}",[],"['thread_HJQrq3sDBoeCGDNEw14YOjXM', 'thread_v4cEr8pkYiUTtbuzmiIoSWIV', 'thread_Kezr9y5EC6o1Q86yk2cZmxB4', 'thread_FaDbZwpIw0VqZKfXI2Qk7WcN', 'thread_IX7pL1ts5tAmZJYxNwd3JPoR', 'thread_bpYD5tObb4q9ZrsTUhSMvaML']"
4,986.0281999111176,17,False,"pragma solidity >= 0.5.0;

contract ERC1155 {

    // Events
    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);
    event TransferBatch(address indexed operator, address indexed from, address indexed to, uint256[] ids, uint256[] values);
    event ApprovalForAll(address indexed account, address indexed operator, bool approved);
    event URI(string value, uint256 indexed id);

    // State Variables
    string private _uri;

    // Functions
    /// @notice postcondition balance == _balances[_id][_owner]
    function balanceOf(address _owner, uint256 _id) public view returns (uint256 balance);

    /// @notice postcondition true
    function balanceOfBatch(address[] memory _owners, uint256[] memory _ids) public view returns (uint256[] memory batchBalances);

    /// @notice postcondition _operator == __verifier_old_address(_operator) || _operator == _operator
    /// @notice postcondition _approved == __verifier_old_bool(_approved) || _operator == _operator
    function setApprovalForAll(address _operator, bool _approved) public;

    /// @notice postcondition approved == _operatorApprovals[_owner][_operator]
    function isApprovedForAll(address _owner, address _operator) public view returns (bool approved);

    /// @notice postcondition _to != address(0)
    /// @notice postcondition forall (uint256 x) (_from == _to || x == _id || _balances[x][_from] == __verifier_old_uint(_balances[x][_from]))
    /// @notice postcondition _balances[_id][_from] == __verifier_old_uint(_balances[_id][_from]) - _value || _from == _to
    /// @notice postcondition _balances[_id][_to] == __verifier_old_uint(_balances[_id][_to]) + _value || _from == _to
    function safeTransferFrom(address _from, address _to, uint256 _id, uint256 _value, bytes memory _data) public;

    /// @notice postcondition forall (uint i) !(0 <= i && i < _ids.length) || _balances[_ids[i]][_to] == __verifier_old_uint(_balances[_ids[i]][_to]) + _values[i]
    /// @notice postcondition forall (uint j) !(0 <= j && j < _ids.length) || _balances[_ids[j]][_from] == __verifier_old_uint(_balances[_ids[j]][_from]) - _values[j]
    function safeBatchTransferFrom(address _from, address _to, uint256[] memory _ids, uint256[] memory _values) public;

}
","{'balanceOf': 'Verified', 'balanceOfBatch': 'Failed', 'setApprovalForAll': 'Verified', 'isApprovedForAll': 'Verified', 'safeTransferFrom': 'Verified', 'safeBatchTransferFrom': 'Verified'}",[],"['thread_bH7EXb20xctN3k5aMN8ZoVbs', 'thread_8G73mQryPfSFZvK1IRF7gfai', 'thread_2mx7t5gOcZ8FWgSsdRqC4USK', 'thread_suAZZGHdVnqd3iXMMF4NxtMc', 'thread_VatnmepAbEasCfbr4KVEmhAr', 'thread_mS4BPM4C89MiW3WD5CuuHZ3J']"
5,322.2323842048645,14,True,"pragma solidity >= 0.5.0;

contract ERC1155 {

    // Events
    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);
    event TransferBatch(address indexed operator, address indexed from, address indexed to, uint256[] ids, uint256[] values);
    event ApprovalForAll(address indexed account, address indexed operator, bool approved);
    event URI(string value, uint256 indexed id);

    // State Variables
    string private _uri;

    // Functions
    /// @notice postcondition balance == _balances[_id][_owner]
    function balanceOf(address _owner, uint256 _id) public view returns (uint256 balance);

    /// @notice postcondition forall (uint i) !(0 <= i && i < _owners.length) || batchBalances[i] == _balances[_ids[i]][_owners[i]]
    function balanceOfBatch(address[] memory _owners, uint256[] memory _ids) public view returns (uint256[] memory batchBalances);

    /// @notice postcondition _operator == __verifier_old_address(_operator) || _operator == _operator
    /// @notice postcondition _approved == __verifier_old_bool(_approved) || _operator == _operator
    function setApprovalForAll(address _operator, bool _approved) public;

    /// @notice postcondition approved == _operatorApprovals[_owner][_operator]
    function isApprovedForAll(address _owner, address _operator) public view returns (bool approved);

    /// @notice postcondition _to != address(0)
    /// @notice postcondition _from == _to || _balances[_id][_from] == __verifier_old_uint(_balances[_id][_from]) - _value
    /// @notice postcondition forall (address account) _from != account || account == _from || _balances[_id][account] == __verifier_old_uint(_balances[_id][account])
    /// @notice postcondition forall (address account) _to != account || _balances[_id][account] == __verifier_old_uint(_balances[_id][account]) + (_from == account ? 0 : _value) - (_to == account ? 0 : _value)
    /// @notice postcondition _from == _to || (_to == _from ? _balances[_id][_to] == __verifier_old_uint(_balances[_id][_to]) : _balances[_id][_to] == __verifier_old_uint(_balances[_id][_to]) + _value)
    function safeTransferFrom(address _from, address _to, uint256 _id, uint256 _value, bytes memory _data) public;

    /// @notice postcondition forall (uint i) !(0 <= i && i < _ids.length) || _balances[_ids[i]][_to] == __verifier_old_uint(_balances[_ids[i]][_to]) + _values[i]
    /// @notice postcondition forall (uint j) !(0 <= j && j < _ids.length) || _balances[_ids[j]][_from] == __verifier_old_uint(_balances[_ids[j]][_from]) - _values[j]
    function safeBatchTransferFrom(address _from, address _to, uint256[] memory _ids, uint256[] memory _values) public;

}
","{'balanceOf': 'Verified', 'balanceOfBatch': 'Verified', 'setApprovalForAll': 'Verified', 'isApprovedForAll': 'Verified', 'safeTransferFrom': 'Verified', 'safeBatchTransferFrom': 'Verified'}",[],"['thread_BMzvNOZAQLpcZOUzwR3dg6WZ', 'thread_U3l3HbwAv16EwJZYtizo8943', 'thread_ZUFumP2H1PjwZCYJak5V0UrC', 'thread_Xkx6EGACTrAuUKZnmFkPAFNc', 'thread_6oY6Oi6oFjKpLn2Marm3FVv0', 'thread_nORKkfG2SZsYasWwj4vHUtGX']"
6,154.23485827445984,7,True,"pragma solidity >= 0.5.0;

contract ERC1155 {

    // Events
    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);
    event TransferBatch(address indexed operator, address indexed from, address indexed to, uint256[] ids, uint256[] values);
    event ApprovalForAll(address indexed account, address indexed operator, bool approved);
    event URI(string value, uint256 indexed id);

    // State Variables
    string private _uri;

    // Functions
    /// @notice postcondition balance == _balances[_id][_owner]
    function balanceOf(address _owner, uint256 _id) public view returns (uint256 balance);

    /// @notice postcondition forall (uint i) !(0 <= i && i < _owners.length) || batchBalances[i] == _balances[_ids[i]][_owners[i]]
    function balanceOfBatch(address[] memory _owners, uint256[] memory _ids) public view returns (uint256[] memory batchBalances);

    /// @notice postcondition _operator == __verifier_old_address(_operator) || _operator == _operator
    /// @notice postcondition _approved == __verifier_old_bool(_approved) || _operator == _operator
    function setApprovalForAll(address _operator, bool _approved) public;

    /// @notice postcondition approved == _operatorApprovals[_owner][_operator]
    function isApprovedForAll(address _owner, address _operator) public view returns (bool approved);

    /// @notice postcondition _to != address(0)
    /// @notice postcondition _value <= __verifier_old_uint(_balances[_id][_from])
    /// @notice postcondition _balances[_id][_from] == __verifier_old_uint(_balances[_id][_from]) - _value || _from == _to
    /// @notice postcondition _balances[_id][_to] == __verifier_old_uint(_balances[_id][_to]) + _value || _from == _to
    function safeTransferFrom(address _from, address _to, uint256 _id, uint256 _value, bytes memory _data) public;

    /// @notice postcondition forall (uint i) !(0 <= i && i < _ids.length) || _balances[_ids[i]][_to] == __verifier_old_uint(_balances[_ids[i]][_to]) + _values[i]
    /// @notice postcondition forall (uint j) !(0 <= j && j < _ids.length) || _balances[_ids[j]][_from] == __verifier_old_uint(_balances[_ids[j]][_from]) - _values[j]
    function safeBatchTransferFrom(address _from, address _to, uint256[] memory _ids, uint256[] memory _values) public;

}
","{'balanceOf': 'Verified', 'balanceOfBatch': 'Verified', 'setApprovalForAll': 'Verified', 'isApprovedForAll': 'Verified', 'safeTransferFrom': 'Verified', 'safeBatchTransferFrom': 'Verified'}",[],"['thread_meztI4FTAqj7vljpeHnlTXRR', 'thread_dD42htX2UEXa3hgx72QfFz6y', 'thread_t1BQBuMtQpwEq7HvoNk2bOPg', 'thread_fDm1NpfBrEEpR7ygDe3cS11u', 'thread_FCVr0hzGuQSc9DmOsemaFedy', 'thread_gBKdgOATsvMeiGGcZnLZTMU3']"
7,257.17543029785156,14,True,"pragma solidity >= 0.5.0;

contract ERC1155 {

    // Events
    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);
    event TransferBatch(address indexed operator, address indexed from, address indexed to, uint256[] ids, uint256[] values);
    event ApprovalForAll(address indexed account, address indexed operator, bool approved);
    event URI(string value, uint256 indexed id);

    // State Variables
    string private _uri;

    // Functions
    /// @notice postcondition balance == _balances[_id][_owner]
    function balanceOf(address _owner, uint256 _id) public view returns (uint256 balance);

    /// @notice postcondition forall (uint i) !(0 <= i && i < _owners.length) || batchBalances[i] == _balances[_ids[i]][_owners[i]]
    function balanceOfBatch(address[] memory _owners, uint256[] memory _ids) public view returns (uint256[] memory batchBalances);

    /// @notice postcondition _operatorApprovals[msg.sender][_operator] == _approved
    /// @notice postcondition forall (address addr) !(addr == msg.sender) || _operatorApprovals[addr][_operator] == __verifier_old_bool(_operatorApprovals[addr][_operator]) || (addr == msg.sender && _operatorApprovals[addr][_operator] == _approved)
    function setApprovalForAll(address _operator, bool _approved) public;

    /// @notice postcondition approved == _operatorApprovals[_owner][_operator]
    function isApprovedForAll(address _owner, address _operator) public view returns (bool approved);

    /// @notice postcondition _to != address(0)
    /// @notice postcondition _value <= __verifier_old_uint(_balances[_id][_from])
    /// @notice postcondition _balances[_id][_from] == __verifier_old_uint(_balances[_id][_from]) - _value || _from == _to
    /// @notice postcondition _balances[_id][_to] == __verifier_old_uint(_balances[_id][_to]) + _value || _from == _to
    function safeTransferFrom(address _from, address _to, uint256 _id, uint256 _value, bytes memory _data) public;

    /// @notice postcondition forall (uint i) !(0 <= i && i < _ids.length) || _balances[_ids[i]][_to] == __verifier_old_uint(_balances[_ids[i]][_to]) + _values[i]
    /// @notice postcondition forall (uint j) !(0 <= j && j < _ids.length) || _balances[_ids[j]][_from] == __verifier_old_uint(_balances[_ids[j]][_from]) - _values[j]
    function safeBatchTransferFrom(address _from, address _to, uint256[] memory _ids, uint256[] memory _values) public;

}
","{'balanceOf': 'Verified', 'balanceOfBatch': 'Verified', 'setApprovalForAll': 'Verified', 'isApprovedForAll': 'Verified', 'safeTransferFrom': 'Verified', 'safeBatchTransferFrom': 'Verified'}",[],"['thread_zMnnuYNO1UYIOBpcxONhsiXn', 'thread_N2rDTAMwi4cbLf0YY74mLOFe', 'thread_VPgNmTHnJih0IMTtymIb8HWp', 'thread_B56Nr546jpDOkW4ICu20XtWI', 'thread_8dxu9Phj1FTE2yapfEcTHfrI', 'thread_MyLKDGykWsKgaUd06GB7rWr2']"
8,341.8934586048126,16,True,"pragma solidity >= 0.5.0;

contract ERC1155 {

    // Events
    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);
    event TransferBatch(address indexed operator, address indexed from, address indexed to, uint256[] ids, uint256[] values);
    event ApprovalForAll(address indexed account, address indexed operator, bool approved);
    event URI(string value, uint256 indexed id);

    // State Variables
    string private _uri;

    // Functions
    /// @notice postcondition balance == _balances[_id][_owner]
    function balanceOf(address _owner, uint256 _id) public view returns (uint256 balance);

    /// @notice postcondition forall (uint i) !(0 <= i && i < _owners.length) || batchBalances[i] == _balances[_ids[i]][_owners[i]]
    function balanceOfBatch(address[] memory _owners, uint256[] memory _ids) public view returns (uint256[] memory batchBalances);

    /// @notice postcondition _operator == __verifier_old_address(_operator) || _operatorApprovals[msg.sender][_operator] == _approved
    /// @notice postcondition forall (address addr) !(addr == _operator) || _operatorApprovals[msg.sender][addr] == __verifier_old_bool(_operatorApprovals[msg.sender][addr]) || (addr == _operator && _operatorApprovals[msg.sender][addr] == _approved)
    function setApprovalForAll(address _operator, bool _approved) public;

    /// @notice postcondition approved == _operatorApprovals[_owner][_operator]
    function isApprovedForAll(address _owner, address _operator) public view returns (bool approved);

    /// @notice postcondition _to != address(0)
    /// @notice postcondition _value <= __verifier_old_uint(_balances[_id][_from])
    /// @notice postcondition _balances[_id][_from] == __verifier_old_uint(_balances[_id][_from]) - _value || _from == _to
    /// @notice postcondition _balances[_id][_to] == __verifier_old_uint(_balances[_id][_to]) + _value || _from == _to
    function safeTransferFrom(address _from, address _to, uint256 _id, uint256 _value, bytes memory _data) public;

    /// @notice postcondition forall (uint i) !(0 <= i && i < _ids.length) || _balances[_ids[i]][_to] == __verifier_old_uint(_balances[_ids[i]][_to]) + _values[i]
    /// @notice postcondition forall (uint j) !(0 <= j && j < _ids.length) || _balances[_ids[j]][_from] == __verifier_old_uint(_balances[_ids[j]][_from]) - _values[j]
    function safeBatchTransferFrom(address _from, address _to, uint256[] memory _ids, uint256[] memory _values) public;

}
","{'balanceOf': 'Verified', 'balanceOfBatch': 'Verified', 'setApprovalForAll': 'Verified', 'isApprovedForAll': 'Verified', 'safeTransferFrom': 'Verified', 'safeBatchTransferFrom': 'Verified'}",[],"['thread_88O7SB3jFsAFlqCYy2b6yOI6', 'thread_wcBg4dJ3SfdBZaci2Nzo2uGt', 'thread_hdbSIuCmfR5T8REJt5gixh1g', 'thread_Vbrex1YnMIMdgGw4sxrzn5lq', 'thread_Z0Zurk1EykCix0X2SwgzIBPh', 'thread_XsS2JBVpiqKQyTk79fdt3HmO']"
9,551.2938179969788,24,False,"pragma solidity >= 0.5.0;

contract ERC1155 {

    // Events
    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);
    event TransferBatch(address indexed operator, address indexed from, address indexed to, uint256[] ids, uint256[] values);
    event ApprovalForAll(address indexed account, address indexed operator, bool approved);
    event URI(string value, uint256 indexed id);

    // State Variables
    string private _uri;

    // Functions
    /// @notice postcondition balance == _balances[_id][_owner]
    function balanceOf(address _owner, uint256 _id) public view returns (uint256 balance);

    /// @notice postcondition forall (uint i) !(0 <= i && i < _owners.length) || batchBalances[i] == _balances[_ids[i]][_owners[i]]
    function balanceOfBatch(address[] memory _owners, uint256[] memory _ids) public view returns (uint256[] memory batchBalances);

    /// @notice postcondition true
    function setApprovalForAll(address _operator, bool _approved) public;

    /// @notice postcondition approved == _operatorApprovals[_owner][_operator]
    function isApprovedForAll(address _owner, address _operator) public view returns (bool approved);

    /// @notice postcondition true
    function safeTransferFrom(address _from, address _to, uint256 _id, uint256 _value, bytes memory _data) public;

    /// @notice postcondition forall (uint i) !(0 <= i && i < _ids.length) || _balances[_ids[i]][_to] == __verifier_old_uint(_balances[_ids[i]][_to]) + _values[i]
    /// @notice postcondition forall (uint j) !(0 <= j && j < _ids.length) || _balances[_ids[j]][_from] == __verifier_old_uint(_balances[_ids[j]][_from]) - _values[j]
    function safeBatchTransferFrom(address _from, address _to, uint256[] memory _ids, uint256[] memory _values) public;

}
","{'balanceOf': 'Verified', 'balanceOfBatch': 'Verified', 'setApprovalForAll': 'Failed', 'isApprovedForAll': 'Verified', 'safeTransferFrom': 'Failed', 'safeBatchTransferFrom': 'Verified'}",[],"['thread_LSAfUCYUNceI4qD3P2bboznL', 'thread_G62DaN9QhzU9XJb5SEMlhH3s', 'thread_ulBU88GATYsGs8Xe0UvxcM9A', 'thread_5T3SI73jI59zuiC7sduSKk9p', 'thread_znBc9ToITvfcERH117vborx4', 'thread_RTCcXQZEXdpCfoBx6dh3twBU']"
10,349.241902589798,16,False,"pragma solidity >= 0.5.0;

contract ERC1155 {

    // Events
    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);
    event TransferBatch(address indexed operator, address indexed from, address indexed to, uint256[] ids, uint256[] values);
    event ApprovalForAll(address indexed account, address indexed operator, bool approved);
    event URI(string value, uint256 indexed id);

    // State Variables
    string private _uri;

    // Functions
    /// @notice postcondition balance == _balances[_id][_owner]
    function balanceOf(address _owner, uint256 _id) public view returns (uint256 balance);

    /// @notice postcondition forall (uint i) !(0 <= i && i < _owners.length) || batchBalances[i] == _balances[_ids[i]][_owners[i]]
    function balanceOfBatch(address[] memory _owners, uint256[] memory _ids) public view returns (uint256[] memory batchBalances);

    /// @notice postcondition true
    function setApprovalForAll(address _operator, bool _approved) public;

    /// @notice postcondition approved == _operatorApprovals[_owner][_operator]
    function isApprovedForAll(address _owner, address _operator) public view returns (bool approved);

    /// @notice postcondition _to != address(0)
    /// @notice postcondition _value <= __verifier_old_uint(_balances[_id][_from])
    /// @notice postcondition _balances[_id][_from] == __verifier_old_uint(_balances[_id][_from]) - _value || _from == _to
    /// @notice postcondition _balances[_id][_to] == __verifier_old_uint(_balances[_id][_to]) + _value || _from == _to
    function safeTransferFrom(address _from, address _to, uint256 _id, uint256 _value, bytes memory _data) public;

    /// @notice postcondition forall (uint i) !(0 <= i && i < _ids.length) || _balances[_ids[i]][_to] == __verifier_old_uint(_balances[_ids[i]][_to]) + _values[i]
    /// @notice postcondition forall (uint i) !(0 <= i && i < _ids.length) || _balances[_ids[i]][_from] == __verifier_old_uint(_balances[_ids[i]][_from]) - _values[i]
    function safeBatchTransferFrom(address _from, address _to, uint256[] memory _ids, uint256[] memory _values) public;

}
","{'balanceOf': 'Verified', 'balanceOfBatch': 'Verified', 'setApprovalForAll': 'Failed', 'isApprovedForAll': 'Verified', 'safeTransferFrom': 'Verified', 'safeBatchTransferFrom': 'Verified'}",[],"['thread_NklXpMjT55sX62unFVJ9W5y9', 'thread_J5BcOq728e1HNlH6ZE2nL8n0', 'thread_WM3J29LCWoijBdjlGDC2oIky', 'thread_nOb5kHGGFn2vZeIyL5jEkWJN', 'thread_PQ3tLX62NCLp718093yh6tOu', 'thread_S59C6A9VWERvRhe7fDAQt9n6']"
