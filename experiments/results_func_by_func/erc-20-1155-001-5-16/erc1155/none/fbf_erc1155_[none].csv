run,time_taken,iterations,verified,annotated_contract,function_status,status,threads
1,300.47642064094543,7,True,"pragma solidity >= 0.5.0;

contract ERC1155 {

    // Events
    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);
    event TransferBatch(address indexed operator, address indexed from, address indexed to, uint256[] ids, uint256[] values);
    event ApprovalForAll(address indexed account, address indexed operator, bool approved);
    event URI(string value, uint256 indexed id);

    // State Variables
    string private _uri;

    // Functions
    /// @notice postcondition balance == _balances[_id][_owner]
    function balanceOf(address _owner, uint256 _id) public view returns (uint256 balance);

    /// @notice postcondition forall (uint i) !(0 <= i && i < _owners.length && 0 <= i && i < _ids.length) || batchBalances[i] == _balances[_ids[i]][_owners[i]]
    function balanceOfBatch(address[] memory _owners, uint256[] memory _ids) public view returns (uint256[] memory batchBalances);

    /// @notice postcondition _operator == __verifier_old_address(_operator) || _operator == _operator
    /// @notice postcondition _approved == __verifier_old_bool(_approved) || _approved == _approved
    function setApprovalForAll(address _operator, bool _approved) public;

    /// @notice postcondition approved == _operatorApprovals[_owner][_operator]
    function isApprovedForAll(address _owner, address _operator) public view returns (bool approved);

    /// @notice postcondition _to != address(0) || __verifier_old_uint(_balances[_id][_from]) == _balances[_id][_from]
    /// @notice postcondition _to != address(0) || __verifier_old_uint(_balances[_id][_to]) + _value == _balances[_id][_to]
    /// @notice postcondition _to != address(0) || __verifier_old_uint(_balances[_id][_from]) - _value == _balances[_id][_from]
    function safeTransferFrom(address _from, address _to, uint256 _id, uint256 _value, bytes memory _data) public;

    /// @notice postcondition forall (uint i) !(0 <= i && i < _ids.length) || _balances[_ids[i]][_to] == __verifier_old_uint(_balances[_ids[i]][_to]) + _values[i]
    /// @notice postcondition forall (uint i) !(0 <= i && i < _ids.length) || _balances[_ids[i]][_from] == __verifier_old_uint(_balances[_ids[i]][_from]) - _values[i]
    function safeBatchTransferFrom(address _from, address _to, uint256[] memory _ids, uint256[] memory _values) public;

}
","{'balanceOf': 'Verified', 'balanceOfBatch': 'Verified', 'setApprovalForAll': 'Verified', 'isApprovedForAll': 'Verified', 'safeTransferFrom': 'Verified', 'safeBatchTransferFrom': 'Verified'}",[],"['thread_jmus7eluVYQJnYQeWYz19bcz', 'thread_tKWFgYmbyPhqaMrJnWSV742D', 'thread_ecsjCUXAyaSiAMlJjtf0sze7', 'thread_iFTrgVlSmrcb4FPivSP6ltZv', 'thread_ZvBorz2DUdR4P4PL0v7AfVgX', 'thread_j6xqZ4Lj3g7fipBHDPI57Jaq']"
2,651.48255443573,20,False,"pragma solidity >= 0.5.0;

contract ERC1155 {

    // Events
    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);
    event TransferBatch(address indexed operator, address indexed from, address indexed to, uint256[] ids, uint256[] values);
    event ApprovalForAll(address indexed account, address indexed operator, bool approved);
    event URI(string value, uint256 indexed id);

    // State Variables
    string private _uri;

    // Functions
    /// @notice postcondition balance == _balances[_id][_owner]
    function balanceOf(address _owner, uint256 _id) public view returns (uint256 balance);

    /// @notice postcondition forall (uint i) !(0 <= i && i < _owners.length) || batchBalances[i] == _balances[_ids[i]][_owners[i]]
    function balanceOfBatch(address[] memory _owners, uint256[] memory _ids) public view returns (uint256[] memory batchBalances);

    /// @notice postcondition _operatorApprovals[msg.sender][_operator] == _approved
    /// @notice postcondition forall (address operator) !(operator == _operator) || _operatorApprovals[msg.sender][operator] == __verifier_old_bool(_operatorApprovals[msg.sender][operator]) || (operator == _operator && _operatorApprovals[msg.sender][operator] == _approved)
    function setApprovalForAll(address _operator, bool _approved) public;

    /// @notice postcondition approved == _operatorApprovals[_owner][_operator]
    function isApprovedForAll(address _owner, address _operator) public view returns (bool approved);

    /// @notice postcondition true
    function safeTransferFrom(address _from, address _to, uint256 _id, uint256 _value, bytes memory _data) public;

    /// @notice postcondition forall (uint i) !(0 <= i && i < _ids.length) || _balances[_ids[i]][_to] == __verifier_old_uint(_balances[_ids[i]][_to]) + _values[i]
    /// @notice postcondition forall (uint i) !(0 <= i && i < _ids.length) || _balances[_ids[i]][_from] == __verifier_old_uint(_balances[_ids[i]][_from]) - _values[i]
    function safeBatchTransferFrom(address _from, address _to, uint256[] memory _ids, uint256[] memory _values) public;

}
","{'balanceOf': 'Verified', 'balanceOfBatch': 'Verified', 'setApprovalForAll': 'Verified', 'isApprovedForAll': 'Verified', 'safeTransferFrom': 'Failed', 'safeBatchTransferFrom': 'Verified'}",[],"['thread_ErTplUMc4h5h6W45LNuW1itf', 'thread_zpHYV1amAXVzrwono515W8bb', 'thread_HSiGEi9jqdOvMn46Huh6DLjq', 'thread_sNU8rp0LgSTIqPY7Ul4fUSeH', 'thread_Ydhu1cxljHkXBa5zYhK7Opcl', 'thread_tUANQ1ZEDNC2fp2gTjDiNdvr']"
3,153.54416012763977,6,True,"pragma solidity >= 0.5.0;

contract ERC1155 {

    // Events
    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);
    event TransferBatch(address indexed operator, address indexed from, address indexed to, uint256[] ids, uint256[] values);
    event ApprovalForAll(address indexed account, address indexed operator, bool approved);
    event URI(string value, uint256 indexed id);

    // State Variables
    string private _uri;

    // Functions
    /// @notice postcondition balance == _balances[_id][_owner]
    function balanceOf(address _owner, uint256 _id) public view returns (uint256 balance);

    /// @notice postcondition forall (uint i) !(0 <= i && i < _owners.length) || batchBalances[i] == _balances[_ids[i]][_owners[i]]
    function balanceOfBatch(address[] memory _owners, uint256[] memory _ids) public view returns (uint256[] memory batchBalances);

    /// @notice postcondition _operator == __verifier_old_address(_operator) || _operator == _operator
    /// @notice postcondition _approved == __verifier_old_bool(_approved) || _approved == _approved
    function setApprovalForAll(address _operator, bool _approved) public;

    /// @notice postcondition approved == _operatorApprovals[_owner][_operator]
    function isApprovedForAll(address _owner, address _operator) public view returns (bool approved);

    /// @notice postcondition _to != address(0) || __verifier_old_uint(_balances[_id][_from]) == _balances[_id][_from]
    /// @notice postcondition _to != address(0) || __verifier_old_uint(_balances[_id][_to]) == _balances[_id][_to]
    /// @notice postcondition _to != address(0) || __verifier_old_uint(_balances[_id][_from]) - _value == _balances[_id][_from]
    /// @notice postcondition _to != address(0) || __verifier_old_uint(_balances[_id][_to]) + _value == _balances[_id][_to]
    function safeTransferFrom(address _from, address _to, uint256 _id, uint256 _value, bytes memory _data) public;

    /// @notice postcondition forall (uint i) !(0 <= i && i < _ids.length) || _balances[_ids[i]][_to] == __verifier_old_uint(_balances[_ids[i]][_to]) + _values[i]
    /// @notice postcondition forall (uint i) !(0 <= i && i < _ids.length) || _balances[_ids[i]][_from] == __verifier_old_uint(_balances[_ids[i]][_from]) - _values[i]
    function safeBatchTransferFrom(address _from, address _to, uint256[] memory _ids, uint256[] memory _values) public;

}
","{'balanceOf': 'Verified', 'balanceOfBatch': 'Verified', 'setApprovalForAll': 'Verified', 'isApprovedForAll': 'Verified', 'safeTransferFrom': 'Verified', 'safeBatchTransferFrom': 'Verified'}",[],"['thread_rKmOsX0s7sCJIS4ZuJK7BDus', 'thread_VVkZxpzPLInLLJPUDfG7ob4f', 'thread_PCcqS4P77EQXg7U8g5umItYc', 'thread_wdFQuQGQvyPFBzZIDNB3o9LV', 'thread_87B9jBl4SWPTC2fZLeXGrKy4', 'thread_3ob6TDkCNIrtTOy7ISMVjR4v']"
4,201.2312731742859,8,True,"pragma solidity >= 0.5.0;

contract ERC1155 {

    // Events
    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);
    event TransferBatch(address indexed operator, address indexed from, address indexed to, uint256[] ids, uint256[] values);
    event ApprovalForAll(address indexed account, address indexed operator, bool approved);
    event URI(string value, uint256 indexed id);

    // State Variables
    string private _uri;

    // Functions
    /// @notice postcondition balance == _balances[_id][_owner]
    function balanceOf(address _owner, uint256 _id) public view returns (uint256 balance);

    /// @notice postcondition forall (uint i) !(0 <= i && i < _owners.length) || batchBalances[i] == _balances[_ids[i]][_owners[i]]
    function balanceOfBatch(address[] memory _owners, uint256[] memory _ids) public view returns (uint256[] memory batchBalances);

    /// @notice postcondition _operatorApprovals[msg.sender][_operator] == _approved
    /// @notice postcondition forall (address operator) operator != _operator || _operatorApprovals[msg.sender][operator] == __verifier_old_bool(_operatorApprovals[msg.sender][operator]) || _operatorApprovals[msg.sender][operator] == _approved
    function setApprovalForAll(address _operator, bool _approved) public;

    /// @notice postcondition approved == _operatorApprovals[_owner][_operator]
    function isApprovedForAll(address _owner, address _operator) public view returns (bool approved);

    /// @notice postcondition _to != address(0)
    /// @notice postcondition _balances[_id][_from] == __verifier_old_uint(_balances[_id][_from]) - _value || _from == _to
    /// @notice postcondition _balances[_id][_to] == __verifier_old_uint(_balances[_id][_to]) + _value || _from == _to
    function safeTransferFrom(address _from, address _to, uint256 _id, uint256 _value, bytes memory _data) public;

    /// @notice postcondition forall (uint i) !(0 <= i && i < _ids.length) || _balances[_ids[i]][_to] == __verifier_old_uint(_balances[_ids[i]][_to]) + _values[i]
    /// @notice postcondition forall (uint i) !(0 <= i && i < _ids.length) || _balances[_ids[i]][_from] == __verifier_old_uint(_balances[_ids[i]][_from]) - _values[i]
    function safeBatchTransferFrom(address _from, address _to, uint256[] memory _ids, uint256[] memory _values) public;

}
","{'balanceOf': 'Verified', 'balanceOfBatch': 'Verified', 'setApprovalForAll': 'Verified', 'isApprovedForAll': 'Verified', 'safeTransferFrom': 'Verified', 'safeBatchTransferFrom': 'Verified'}",[],"['thread_ooD3ZXb1HPI3lDpc9Q0cm1iX', 'thread_DBRAUGseftrATyQjylMhqajH', 'thread_n5xcn1YpIJxTCwNPxoIjbjLO', 'thread_xJ2hYbPZ0UiO4AeysrXLMbpd', 'thread_O5p5cZNrD041UHaJTJ0nS2DE', 'thread_bZWPZ3Px2hz9Y9CQvSIX5kVD']"
5,262.1440804004669,8,True,"pragma solidity >= 0.5.0;

contract ERC1155 {

    // Events
    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);
    event TransferBatch(address indexed operator, address indexed from, address indexed to, uint256[] ids, uint256[] values);
    event ApprovalForAll(address indexed account, address indexed operator, bool approved);
    event URI(string value, uint256 indexed id);

    // State Variables
    string private _uri;

    // Functions
    /// @notice postcondition balance == _balances[_id][_owner]
    function balanceOf(address _owner, uint256 _id) public view returns (uint256 balance);

    /// @notice postcondition forall (uint i) !(0 <= i && i < _owners.length) || batchBalances[i] == _balances[_ids[i]][_owners[i]]
    function balanceOfBatch(address[] memory _owners, uint256[] memory _ids) public view returns (uint256[] memory batchBalances);

    /// @notice postcondition _operator == __verifier_old_address(_operator) || _operatorApprovals[msg.sender][_operator] == _approved
    /// @notice postcondition forall (address operator) !(operator == _operator) || _operatorApprovals[msg.sender][operator] == __verifier_old_bool(_operatorApprovals[msg.sender][operator]) || (operator == _operator && _operatorApprovals[msg.sender][operator] == _approved)
    function setApprovalForAll(address _operator, bool _approved) public;

    /// @notice postcondition approved == _operatorApprovals[_owner][_operator]
    function isApprovedForAll(address _owner, address _operator) public view returns (bool approved);

    /// @notice postcondition _to != address(0) || __verifier_old_uint(_balances[_id][_from]) == _balances[_id][_from]
    /// @notice postcondition _to != address(0) || __verifier_old_uint(_balances[_id][_to]) == _balances[_id][_to]
    /// @notice postcondition _to != address(0) || __verifier_old_uint(_balances[_id][_from]) - _value == _balances[_id][_from]
    /// @notice postcondition _to != address(0) || __verifier_old_uint(_balances[_id][_to]) + _value == _balances[_id][_to]
    function safeTransferFrom(address _from, address _to, uint256 _id, uint256 _value, bytes memory _data) public;

    /// @notice postcondition forall (uint i) !(0 <= i && i < _ids.length) || _balances[_ids[i]][_to] == __verifier_old_uint(_balances[_ids[i]][_to]) + _values[i]
    /// @notice postcondition forall (uint i) !(0 <= i && i < _ids.length) || _balances[_ids[i]][_from] == __verifier_old_uint(_balances[_ids[i]][_from]) - _values[i]
    function safeBatchTransferFrom(address _from, address _to, uint256[] memory _ids, uint256[] memory _values) public;

}
","{'balanceOf': 'Verified', 'balanceOfBatch': 'Verified', 'setApprovalForAll': 'Verified', 'isApprovedForAll': 'Verified', 'safeTransferFrom': 'Verified', 'safeBatchTransferFrom': 'Verified'}",[],"['thread_mH1ScFsZNSF0Sp78lG5TMQ6f', 'thread_6DSGpKfY1JuQNVLBJhCDT14K', 'thread_AAvNWqbPY7lakBuUcDFe0L1C', 'thread_10aUllIWdxd7DEyTjx77FOSq', 'thread_LG886Z1LKHaMqMeeUjVmn1nt', 'thread_MiWsroDMHvLKos4mQaqGJGlF']"
6,370.50222516059875,14,True,"pragma solidity >= 0.5.0;

contract ERC1155 {

    // Events
    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);
    event TransferBatch(address indexed operator, address indexed from, address indexed to, uint256[] ids, uint256[] values);
    event ApprovalForAll(address indexed account, address indexed operator, bool approved);
    event URI(string value, uint256 indexed id);

    // State Variables
    string private _uri;

    // Functions
    /// @notice postcondition balance == __verifier_old_uint(_balances[_id][_owner])
    function balanceOf(address _owner, uint256 _id) public view returns (uint256 balance);

    /// @notice postcondition forall (uint i) !(0 <= i && i < _owners.length) || batchBalances[i] == _balances[_ids[i]][_owners[i]]
    function balanceOfBatch(address[] memory _owners, uint256[] memory _ids) public view returns (uint256[] memory batchBalances);

    /// @notice postcondition _operatorApprovals[msg.sender][_operator] == _approved
    /// @notice postcondition forall (address operator) !(operator == msg.sender) || _operatorApprovals[msg.sender][operator] == __verifier_old_bool(_operatorApprovals[msg.sender][operator])
    function setApprovalForAll(address _operator, bool _approved) public;

    /// @notice postcondition approved == _operatorApprovals[_owner][_operator]
    function isApprovedForAll(address _owner, address _operator) public view returns (bool approved);

    /// @notice postcondition _to != address(0)
    /// @notice postcondition _balances[_id][_to] == __verifier_old_uint(_balances[_id][_to]) + (_to != _from ? _value : 0)
    /// @notice postcondition _balances[_id][_from] == __verifier_old_uint(_balances[_id][_from]) - (_from != _to ? _value : 0)
    function safeTransferFrom(address _from, address _to, uint256 _id, uint256 _value, bytes memory _data) public;

    /// @notice postcondition forall (uint i) !(0 <= i && i < _ids.length) || _balances[_ids[i]][_to] == __verifier_old_uint(_balances[_ids[i]][_to]) + _values[i]
    /// @notice postcondition forall (uint i) !(0 <= i && i < _ids.length) || _balances[_ids[i]][_from] == __verifier_old_uint(_balances[_ids[i]][_from]) - _values[i]
    function safeBatchTransferFrom(address _from, address _to, uint256[] memory _ids, uint256[] memory _values) public;

}
","{'balanceOf': 'Verified', 'balanceOfBatch': 'Verified', 'setApprovalForAll': 'Verified', 'isApprovedForAll': 'Verified', 'safeTransferFrom': 'Verified', 'safeBatchTransferFrom': 'Verified'}",[],"['thread_IHCRPAK5Qy1Ev1y0KNrFEKRo', 'thread_1kR8O9z7NFlo26RfslT9M1DI', 'thread_5i0bLyngGjOAyVanqHfdhqAe', 'thread_8Gp4IfQnMLNoRh9ogIEjYgZo', 'thread_IQahPfoDVpRRzFwJa6zfV6QQ', 'thread_XIlgGGCb3aDGphgdPv9oW9E8']"
7,179.89578342437744,6,True,"pragma solidity >= 0.5.0;

contract ERC1155 {

    // Events
    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);
    event TransferBatch(address indexed operator, address indexed from, address indexed to, uint256[] ids, uint256[] values);
    event ApprovalForAll(address indexed account, address indexed operator, bool approved);
    event URI(string value, uint256 indexed id);

    // State Variables
    string private _uri;

    // Functions
    /// @notice postcondition balance == _balances[_id][_owner]
    function balanceOf(address _owner, uint256 _id) public view returns (uint256 balance);

    /// @notice postcondition forall (uint i) !(0 <= i && i < _owners.length) || batchBalances[i] == _balances[_ids[i]][_owners[i]]
    function balanceOfBatch(address[] memory _owners, uint256[] memory _ids) public view returns (uint256[] memory batchBalances);

    /// @notice postcondition _operator == __verifier_old_address(_operator) || _operator == _operator
    /// @notice postcondition _approved == __verifier_old_bool(_approved) || _approved == _approved
    function setApprovalForAll(address _operator, bool _approved) public;

    /// @notice postcondition approved == _operatorApprovals[_owner][_operator]
    function isApprovedForAll(address _owner, address _operator) public view returns (bool approved);

    /// @notice postcondition _to != address(0) || __verifier_old_uint(_balances[_id][_from]) == _balances[_id][_from]
    /// @notice postcondition _to != address(0) || __verifier_old_uint(_balances[_id][_to]) == _balances[_id][_to]
    /// @notice postcondition _to != address(0) || __verifier_old_uint(_balances[_id][_from]) - _value == _balances[_id][_from]
    /// @notice postcondition _to != address(0) || __verifier_old_uint(_balances[_id][_to]) + _value == _balances[_id][_to]
    function safeTransferFrom(address _from, address _to, uint256 _id, uint256 _value, bytes memory _data) public;

    /// @notice postcondition forall (uint i) !(0 <= i && i < _ids.length) || _balances[_ids[i]][_to] == __verifier_old_uint(_balances[_ids[i]][_to]) + _values[i]
    /// @notice postcondition forall (uint i) !(0 <= i && i < _ids.length) || _balances[_ids[i]][_from] == __verifier_old_uint(_balances[_ids[i]][_from]) - _values[i]
    function safeBatchTransferFrom(address _from, address _to, uint256[] memory _ids, uint256[] memory _values) public;

}
","{'balanceOf': 'Verified', 'balanceOfBatch': 'Verified', 'setApprovalForAll': 'Verified', 'isApprovedForAll': 'Verified', 'safeTransferFrom': 'Verified', 'safeBatchTransferFrom': 'Verified'}",[],"['thread_ZkWa3LLzbWZySRWJ8O5CcsuV', 'thread_B8PAuq3nPwTBooMnluv3qCUM', 'thread_NpgxoIJ2csY0FQHqk4oDaj8b', 'thread_LmEyP9HNHmd3uXFNxe1xzbrM', 'thread_IgIqmJbpbfWX2k5oCFGUhH1O', 'thread_BlPtm84hIhxTXPKB8n1KS829']"
8,194.0544605255127,7,True,"pragma solidity >= 0.5.0;

contract ERC1155 {

    // Events
    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);
    event TransferBatch(address indexed operator, address indexed from, address indexed to, uint256[] ids, uint256[] values);
    event ApprovalForAll(address indexed account, address indexed operator, bool approved);
    event URI(string value, uint256 indexed id);

    // State Variables
    string private _uri;

    // Functions
    /// @notice postcondition balance == _balances[_id][_owner]
    function balanceOf(address _owner, uint256 _id) public view returns (uint256 balance);

    /// @notice postcondition forall (uint i) !(0 <= i && i < _owners.length) || batchBalances[i] == _balances[_ids[i]][_owners[i]]
    function balanceOfBatch(address[] memory _owners, uint256[] memory _ids) public view returns (uint256[] memory batchBalances);

    /// @notice postcondition _operator == __verifier_old_address(_operator) || _operator == _operator
    /// @notice postcondition _approved == __verifier_old_bool(_approved) || _approved == _approved
    function setApprovalForAll(address _operator, bool _approved) public;

    /// @notice postcondition approved == _operatorApprovals[_owner][_operator]
    function isApprovedForAll(address _owner, address _operator) public view returns (bool approved);

    /// @notice postcondition _to != address(0)
    /// @notice postcondition _from == _to || _balances[_id][_to] == __verifier_old_uint(_balances[_id][_to]) + (_from == _from ? _value : 0)
    /// @notice postcondition _from == _to || _balances[_id][_from] == __verifier_old_uint(_balances[_id][_from]) - (_from == _from ? _value : 0)
    function safeTransferFrom(address _from, address _to, uint256 _id, uint256 _value, bytes memory _data) public;

    /// @notice postcondition forall (uint i) !(0 <= i && i < _ids.length) || _balances[_ids[i]][_to] == __verifier_old_uint(_balances[_ids[i]][_to]) + _values[i]
    /// @notice postcondition forall (uint i) !(0 <= i && i < _ids.length) || _balances[_ids[i]][_from] == __verifier_old_uint(_balances[_ids[i]][_from]) - _values[i]
    function safeBatchTransferFrom(address _from, address _to, uint256[] memory _ids, uint256[] memory _values) public;

}
","{'balanceOf': 'Verified', 'balanceOfBatch': 'Verified', 'setApprovalForAll': 'Verified', 'isApprovedForAll': 'Verified', 'safeTransferFrom': 'Verified', 'safeBatchTransferFrom': 'Verified'}",[],"['thread_gJ4bJIRQUiT7podoilFBs1VP', 'thread_9v9sMhayEv89sv5VBhJR87Ap', 'thread_BGTtZ7BR0WOgAGtjmm9g6hER', 'thread_HJp2Qq9mzAnvTZ3ewwhhd0Re', 'thread_wYxRqhw3qSS4f2AM7wNwFPLS', 'thread_tf9vGsBG4ntxBR1hgTVClxA4']"
9,214.77786350250244,7,True,"pragma solidity >= 0.5.0;

contract ERC1155 {

    // Events
    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);
    event TransferBatch(address indexed operator, address indexed from, address indexed to, uint256[] ids, uint256[] values);
    event ApprovalForAll(address indexed account, address indexed operator, bool approved);
    event URI(string value, uint256 indexed id);

    // State Variables
    string private _uri;

    // Functions
    /// @notice postcondition balance == _balances[_id][_owner]
    function balanceOf(address _owner, uint256 _id) public view returns (uint256 balance);

    /// @notice postcondition forall (uint i) !(0 <= i && i < _owners.length) || batchBalances[i] == _balances[_ids[i]][_owners[i]]
    function balanceOfBatch(address[] memory _owners, uint256[] memory _ids) public view returns (uint256[] memory batchBalances);

    /// @notice postcondition _operator == __verifier_old_address(_operator) || _operator == _operator
    /// @notice postcondition forall (address operator) _operator == operator || _operatorApprovals[msg.sender][operator] == __verifier_old_bool(_operatorApprovals[msg.sender][operator])
    /// @notice postcondition _approved == __verifier_old_bool(_approved) || _operatorApprovals[msg.sender][_operator] == _approved
    function setApprovalForAll(address _operator, bool _approved) public;

    /// @notice postcondition approved == _operatorApprovals[_owner][_operator]
    function isApprovedForAll(address _owner, address _operator) public view returns (bool approved);

    /// @notice postcondition _to == _from || _balances[_id][_from] == __verifier_old_uint(_balances[_id][_from]) - _value
    /// @notice postcondition _to == _from || _balances[_id][_to] == __verifier_old_uint(_balances[_id][_to]) + _value
    function safeTransferFrom(address _from, address _to, uint256 _id, uint256 _value, bytes memory _data) public;

    /// @notice postcondition forall (uint i) !(0 <= i && i < _ids.length) || _balances[_ids[i]][_to] == __verifier_old_uint(_balances[_ids[i]][_to]) + _values[i]
    /// @notice postcondition forall (uint i) !(0 <= i && i < _ids.length) || _balances[_ids[i]][_from] == __verifier_old_uint(_balances[_ids[i]][_from]) - _values[i]
    function safeBatchTransferFrom(address _from, address _to, uint256[] memory _ids, uint256[] memory _values) public;

}
","{'balanceOf': 'Verified', 'balanceOfBatch': 'Verified', 'setApprovalForAll': 'Verified', 'isApprovedForAll': 'Verified', 'safeTransferFrom': 'Verified', 'safeBatchTransferFrom': 'Verified'}",[],"['thread_8LAclfbunslx4faMaiTyMBRR', 'thread_enVpOa5qyqw5oSOb6bbrJWTs', 'thread_LnIK8zMHZPHjMhvJyYoNHf3R', 'thread_77OH96WjcLEzAJZefvsrDpzC', 'thread_8syqA4jbGxrWZv5gsiaOf7oX', 'thread_KkRP2ahgFSMxcIfctotRdmWp']"
10,421.8361291885376,16,False,"pragma solidity >= 0.5.0;

contract ERC1155 {

    // Events
    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);
    event TransferBatch(address indexed operator, address indexed from, address indexed to, uint256[] ids, uint256[] values);
    event ApprovalForAll(address indexed account, address indexed operator, bool approved);
    event URI(string value, uint256 indexed id);

    // State Variables
    string private _uri;

    // Functions
    /// @notice postcondition balance == _balances[_id][_owner]
    function balanceOf(address _owner, uint256 _id) public view returns (uint256 balance);

    /// @notice postcondition forall (uint i) !(0 <= i && i < _owners.length) || batchBalances[i] == _balances[_ids[i]][_owners[i]]
    function balanceOfBatch(address[] memory _owners, uint256[] memory _ids) public view returns (uint256[] memory batchBalances);

    /// @notice postcondition true
    function setApprovalForAll(address _operator, bool _approved) public;

    /// @notice postcondition approved == _operatorApprovals[_owner][_operator]
    function isApprovedForAll(address _owner, address _operator) public view returns (bool approved);

    /// @notice postcondition _to == _from || _balances[_id][_from] == __verifier_old_uint(_balances[_id][_from]) - _value
    /// @notice postcondition _to == _from || _balances[_id][_to] == __verifier_old_uint(_balances[_id][_to]) + _value
    function safeTransferFrom(address _from, address _to, uint256 _id, uint256 _value, bytes memory _data) public;

    /// @notice postcondition forall (uint i) !(0 <= i && i < _ids.length) || _balances[_ids[i]][_to] == __verifier_old_uint(_balances[_ids[i]][_to]) + _values[i]
    /// @notice postcondition forall (uint i) !(0 <= i && i < _ids.length) || _balances[_ids[i]][_from] == __verifier_old_uint(_balances[_ids[i]][_from]) - _values[i]
    function safeBatchTransferFrom(address _from, address _to, uint256[] memory _ids, uint256[] memory _values) public;

}
","{'balanceOf': 'Verified', 'balanceOfBatch': 'Verified', 'setApprovalForAll': 'Failed', 'isApprovedForAll': 'Verified', 'safeTransferFrom': 'Verified', 'safeBatchTransferFrom': 'Verified'}",[],"['thread_R1CpJeIg50VZHwEM3nS96Eg7', 'thread_qDg7sYQJHj6m9XXhBQbqueCj', 'thread_A2ZbMiQW9BEzpK8dvkarHvRY', 'thread_EtETNPsptrqXhSkf7O49E4cE', 'thread_MlnkH6rbAeB4BfGIlFn3zg0k', 'thread_Rd4Q5LaauES0el7GItXvTUYg']"
