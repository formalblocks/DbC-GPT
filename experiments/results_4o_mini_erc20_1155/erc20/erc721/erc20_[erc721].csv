run,time_taken,iterations,verified,annotated_contract,status
1,291.1762607097626,10,False,,[]
2,303.8473262786865,10,False,,"[""Interaction: 1\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:72:5: Postcondition '(success && _value > 0) || !success' might not hold at end of function.\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:72:5: Postcondition '_balances[_to] == __verifier_old_uint(_balances[_to]) + _value' might not hold at end of function.\nERC20::approve: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:89:5: Postcondition '(success && _value > 0) || !success' might not hold at end of function.\nERC20::transferFrom: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:107:5: Postcondition '(success && _value > 0) || !success' might not hold at end of function.\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:107:5: Postcondition '_balances[_to] == __verifier_old_uint(_balances[_to]) + _value' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n""]"
3,298.8082127571106,10,False,,"[""Interaction: 2\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:71:5: Postcondition '(success && _balances[_to] == __verifier_old_uint(_balances[_to]) + _value) || (success == false && _balances[_to] == __verifier_old_uint(_balances[_to]))' might not hold at end of function.\nERC20::approve: OK\nERC20::transferFrom: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:104:5: Postcondition '(success && _balances[_to] == __verifier_old_uint(_balances[_to]) + _value) || (success == false && _balances[_to] == __verifier_old_uint(_balances[_to]))' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n""]"
4,303.6439745426178,10,False,,[]
5,277.5220150947571,10,False,,[]
6,320.73453974723816,10,False,,"[""Interaction: 2\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: OK\nERC20::approve: OK\nERC20::transferFrom: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:101:5: Postcondition '(success && _from != _to) ? (_balances[_from] == __verifier_old_uint(_balances[_from]) - _value && _balances[_to] == __verifier_old_uint(_balances[_to]) + _value && _allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) - _value) : (_balances[_from] == __verifier_old_uint(_balances[_from]) && _balances[_to] == __verifier_old_uint(_balances[_to]) && _allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]))' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 4\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: OK\nERC20::approve: OK\nERC20::transferFrom: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:113:5: Postcondition '(success && _from != _to) ?          (_balances[_from] == __verifier_old_uint(_balances[_from]) - _value &&           _balances[_to] == __verifier_old_uint(_balances[_to]) + _value &&           _allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) - _value) :          (_balances[_from] == __verifier_old_uint(_balances[_from]) &&           _balances[_to] == __verifier_old_uint(_balances[_to]) &&           _allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]))' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 5\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: OK\nERC20::approve: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:92:5: Postcondition '(success ?          _allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]) + _value :          _allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]))' might not hold at end of function.\nERC20::transferFrom: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:113:5: Postcondition '(success && _from != _to) ?          (_balances[_from] == __verifier_old_uint(_balances[_from]) - _value &&           _balances[_to] == __verifier_old_uint(_balances[_to]) + _value &&           _allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) - _value) :          (_balances[_from] == __verifier_old_uint(_balances[_from]) &&           _balances[_to] == __verifier_old_uint(_balances[_to]) &&           _allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]))' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 6\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: OK\nERC20::approve: OK\nERC20::transferFrom: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:113:5: Postcondition '(success && _from != _to) ?          (_balances[_from] == __verifier_old_uint(_balances[_from]) - _value &&           _balances[_to] == __verifier_old_uint(_balances[_to]) + _value &&           _allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) - _value) :          (_balances[_from] == __verifier_old_uint(_balances[_from]) &&           _balances[_to] == __verifier_old_uint(_balances[_to]) &&           _allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]))' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 7\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: OK\nERC20::approve: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:92:5: Postcondition '(success ?          _allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]) + _value :          _allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]))' might not hold at end of function.\nERC20::transferFrom: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:113:5: Postcondition '(success && _from != _to) ?          (_balances[_from] == __verifier_old_uint(_balances[_from]) - _value &&           _balances[_to] == __verifier_old_uint(_balances[_to]) + _value &&           _allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) - _value) :          (_balances[_from] == __verifier_old_uint(_balances[_from]) &&           _balances[_to] == __verifier_old_uint(_balances[_to]) &&           _allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]))' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 8\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: OK\nERC20::approve: OK\nERC20::transferFrom: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:113:5: Postcondition '(success && _from != _to) ?          (_balances[_from] == __verifier_old_uint(_balances[_from]) - _value &&           _balances[_to] == __verifier_old_uint(_balances[_to]) + _value &&           _allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) - _value) :          (_balances[_from] == __verifier_old_uint(_balances[_from]) &&           _balances[_to] == __verifier_old_uint(_balances[_to]) &&           _allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]))' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 9\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: OK\nERC20::approve: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:92:5: Postcondition '(success ?          _allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]) + _value :          _allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]))' might not hold at end of function.\nERC20::transferFrom: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:113:5: Postcondition '(success && _from != _to) ?          (_balances[_from] == __verifier_old_uint(_balances[_from]) - _value &&           _balances[_to] == __verifier_old_uint(_balances[_to]) + _value &&           _allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) - _value) :          (_balances[_from] == __verifier_old_uint(_balances[_from]) &&           _balances[_to] == __verifier_old_uint(_balances[_to]) &&           _allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]))' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 10\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: OK\nERC20::approve: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:92:5: Postcondition '(success ?          _allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]) + _value :          _allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]))' might not hold at end of function.\nERC20::transferFrom: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:113:5: Postcondition '(success && _from != _to) ?          (_balances[_from] == __verifier_old_uint(_balances[_from]) - _value &&           _balances[_to] == __verifier_old_uint(_balances[_to]) + _value &&           _allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) - _value) :          (_balances[_from] == __verifier_old_uint(_balances[_from]) &&           _balances[_to] == __verifier_old_uint(_balances[_to]) &&           _allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]))' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n""]"
7,298.08694553375244,10,False,,[]
8,295.41939330101013,10,False,,[]
9,31.88537049293518,0,True,"pragma solidity >=0.5.0;

contract ERC20 {

    mapping (address => uint) _balances;
    mapping (address => mapping (address => uint)) _allowed;
    uint public _totalSupply;

    /**
    * Returns the total token supply.
    */
    /// @notice postcondition supply == _totalSupply
    function totalSupply() public view returns (uint256 supply);

    /**
    * Transfers `_value` amount of tokens to address `_to`, and MUST fire the `Transfer` event.
    * The function SHOULD `throw` if the message caller's account balance does not have enough tokens to spend.
    * *Note* Transfers of 0 values MUST be treated as normal transfers and fire the `Transfer` event.
    */
    /// @notice postcondition (success && _to != msg.sender) ? (_balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) - _value && _balances[_to] == __verifier_old_uint(_balances[_to]) + _value) : true
    /// @notice postcondition (success && _to == msg.sender) ? (_balances[msg.sender] == __verifier_old_uint(_balances[msg.sender])) : true
    /// @notice postcondition (success) ? _balances[msg.sender] >= 0 : true
    function transfer(address _to, uint256 _value) public returns (bool success);

    /**
    * Transfers `_value` amount of tokens from address `_from` to address `_to`, and MUST fire the `Transfer` event.
    * The `transferFrom` method is used for a withdraw workflow, allowing contracts to transfer tokens on your behalf.
    * The function SHOULD `throw` unless the `_from` account has deliberately authorized the sender of the message via some mechanism.
    * *Note* Transfers of 0 values MUST be treated as normal transfers and fire the `Transfer` event.
    */
    /// @notice postcondition (success && _from != _to) ? (_balances[_from] == __verifier_old_uint(_balances[_from]) - _value && _balances[_to] == __verifier_old_uint(_balances[_to]) + _value && _allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) - _value) : true
    /// @notice postcondition (success && _from == _to) ? (_balances[_from] == __verifier_old_uint(_balances[_from])) : true
    /// @notice postcondition (success) ? _balances[_from] >= 0 : true
    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);

    /**
    * Allows `_spender` to withdraw from your account multiple times, up to the `_value` amount. If this function is called again it overwrites the current allowance with `_value`.
    */
    /// @notice postcondition (success) ? _allowed[msg.sender][_spender] == _value : _allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender])
    function approve(address _spender, uint256 _value) public returns (bool success);

    /**
    * Returns the account balance of another account with address `_owner`.
    */
    /// @notice postcondition balance == _balances[_owner]
    function balanceOf(address _owner) public view returns (uint256 balance);

    /**
    * Returns the amount which `_spender` is still allowed to withdraw from `_owner`.
    */
    /// @notice postcondition remaining == _allowed[_owner][_spender]
    function allowance(address _owner, address _spender) public view returns (uint256 remaining);
}
",[]
10,338.20376467704773,10,False,,[]
