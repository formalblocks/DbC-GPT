run,time_taken,iterations,verified,annotated_contract,status
1,10.036270141601562,0,False,,[]
2,11.251760244369507,0,False,,[]
3,133.55105710029602,10,False,,[]
4,53.03861474990845,2,True,"pragma solidity >=0.5.0;

contract ERC20 {

    mapping (address => uint) _balances;
    mapping (address => mapping (address => uint)) _allowed;
    uint public _totalSupply;

    /// @notice postcondition _totalSupply == __verifier_old_uint(_totalSupply)
    function totalSupply() public view returns (uint256 supply);

    /// @notice postcondition _balances[_to] == __verifier_old_uint(_balances[_to]) + _value
    /// @notice postcondition _balances[_from] == __verifier_old_uint(_balances[_from]) - _value
    function transfer(address _to, uint256 _value) public returns (bool success);

    /// @notice postcondition _balances[_to] == __verifier_old_uint(_balances[_to]) + _value
    /// @notice postcondition _balances[_from] == __verifier_old_uint(_balances[_from]) - _value
    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);

    /// @notice postcondition _allowed[_owner][_spender] == __verifier_old_uint(_allowed[_owner][_spender]) + _value
    function approve(address _spender, uint256 _value) public returns (bool success);

    /// @notice postcondition _balances[_owner] == __verifier_old_uint(_balances[_owner])
    function balanceOf(address _owner) public view returns (uint256 balance);

    /// @notice postcondition _allowed[_owner][_spender] == __verifier_old_uint(_allowed[_owner][_spender]) - _value
    function allowance(address _owner, address _spender) public view returns (uint256 remaining);
}
",[]
5,11.599658727645874,0,False,,[]
6,10.32752537727356,0,False,,[]
7,10.012972593307495,0,False,,[]
8,10.699145317077637,0,False,,[]
9,10.602073431015015,0,False,,[]
10,169.0026273727417,10,False,,[]
