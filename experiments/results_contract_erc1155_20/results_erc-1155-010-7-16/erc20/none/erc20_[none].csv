run,time_taken,iterations,verified,annotated_contract,status
1,276.8827905654907,10,False,,"[""Interaction: 2\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: OK\nERC20::approve: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:92:5: Postcondition '_allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]) + _value || _spender == msg.sender' might not hold at end of function.\nERC20::transferFrom: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:112:5: Postcondition '_from != msg.sender || _balances[_from] == __verifier_old_uint(_balances[_from])' might not hold at end of function.\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:112:5: Postcondition '_from != _to' might not hold at end of function.\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:112:5: Postcondition '_from == msg.sender || _balances[_from] == __verifier_old_uint(_balances[_from]) - _value' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 3\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: OK\nERC20::approve: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:93:5: Postcondition '_allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]) + _value || _spender == msg.sender' might not hold at end of function.\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:93:5: Postcondition '_spender != msg.sender || _allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender])' might not hold at end of function.\nERC20::transferFrom: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:113:5: Postcondition '_from != msg.sender || _balances[_from] == __verifier_old_uint(_balances[_from])' might not hold at end of function.\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:113:5: Postcondition '_from != _to' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 4\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: OK\nERC20::approve: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:92:5: Postcondition '_spender == msg.sender || _allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender])' might not hold at end of function.\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:92:5: Postcondition '_allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]) + _value || _spender == msg.sender' might not hold at end of function.\nERC20::transferFrom: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:112:5: Postcondition '_from != msg.sender || _balances[_from] == __verifier_old_uint(_balances[_from])' might not hold at end of function.\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:112:5: Postcondition '_from != _to' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 5\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: OK\nERC20::approve: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:94:5: Postcondition '_spender == msg.sender || _allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender])' might not hold at end of function.\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:94:5: Postcondition '_allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]) + _value || _spender == msg.sender' might not hold at end of function.\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:94:5: Postcondition '_spender != msg.sender || _allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender])' might not hold at end of function.\nERC20::transferFrom: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:114:5: Postcondition '_from != msg.sender || _balances[_from] == __verifier_old_uint(_balances[_from])' might not hold at end of function.\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:114:5: Postcondition '_from != _to' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 6\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: OK\nERC20::approve: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:93:5: Postcondition '_allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]) || _spender == msg.sender' might not hold at end of function.\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:93:5: Postcondition '_allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]) + _value || _spender == msg.sender' might not hold at end of function.\nERC20::transferFrom: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:113:5: Postcondition '_from != msg.sender || _balances[_from] == __verifier_old_uint(_balances[_from])' might not hold at end of function.\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:113:5: Postcondition '_from != _to' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 7\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: OK\nERC20::approve: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:93:5: Postcondition '_spender == msg.sender || _allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender])' might not hold at end of function.\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:93:5: Postcondition '_allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]) + _value || _spender == msg.sender' might not hold at end of function.\nERC20::transferFrom: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:113:5: Postcondition '_from != msg.sender || _balances[_from] == __verifier_old_uint(_balances[_from])' might not hold at end of function.\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:113:5: Postcondition '_from != _to' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 8\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: OK\nERC20::approve: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:93:5: Postcondition '_spender == msg.sender || _allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender])' might not hold at end of function.\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:93:5: Postcondition '_allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]) + _value || _spender == msg.sender' might not hold at end of function.\nERC20::transferFrom: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:113:5: Postcondition '_from != msg.sender || _balances[_from] == __verifier_old_uint(_balances[_from])' might not hold at end of function.\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:113:5: Postcondition '_from != _to' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 9\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: OK\nERC20::approve: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:93:5: Postcondition '_spender != msg.sender || _allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender])' might not hold at end of function.\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:93:5: Postcondition '_allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]) + _value || _spender == msg.sender' might not hold at end of function.\nERC20::transferFrom: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:113:5: Postcondition '_from != msg.sender || _balances[_from] == __verifier_old_uint(_balances[_from])' might not hold at end of function.\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:113:5: Postcondition '_from != _to' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 10\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: OK\nERC20::approve: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:93:5: Postcondition '_spender == msg.sender || _allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender])' might not hold at end of function.\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:93:5: Postcondition '_allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]) + _value || _spender == msg.sender' might not hold at end of function.\nERC20::transferFrom: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:113:5: Postcondition '_from != msg.sender || _balances[_from] == __verifier_old_uint(_balances[_from])' might not hold at end of function.\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:113:5: Postcondition '_from != _to' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n""]"
2,78.89677166938782,2,True,"pragma solidity >=0.5.0;

contract ERC20 {

    mapping (address => uint) _balances;
    mapping (address => mapping (address => uint)) _allowed;
    uint public _totalSupply;

    /**
    * Returns the total token supply.
    */
    /// @notice postcondition supply == _totalSupply
    function totalSupply() public view returns (uint256 supply);

    /**
    * Transfers `_value` amount of tokens to address `_to`, and MUST fire the `Transfer` event.
    * The function SHOULD `throw` if the message caller's account balance does not have enough tokens to spend.

    * *Note* Transfers of 0 values MUST be treated as normal transfers and fire the `Transfer` event.
    */
    /// @notice postcondition _to != address(0)
    /// @notice postcondition success == true
    /// @notice postcondition _balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) - _value || _balances[msg.sender] == __verifier_old_uint(_balances[msg.sender])
    /// @notice postcondition _balances[_to] == __verifier_old_uint(_balances[_to]) + _value || _balances[_to] == __verifier_old_uint(_balances[_to])
    /// @notice postcondition !(success) || (_value > 0 || _balances[_to] == __verifier_old_uint(_balances[_to]))

    function transfer(address _to, uint256 _value) public returns (bool success);

    /**
    * Transfers `_value` amount of tokens from address `_from` to address `_to`, and MUST fire the `Transfer` event.
    * The `transferFrom` method is used for a withdraw workflow, allowing contracts to transfer tokens on your behalf.
    * This can be used for example to allow a contract to transfer tokens on your behalf and/or to charge fees in sub-currencies.
    * The function SHOULD `throw` unless the `_from` account has deliberately authorized the sender of the message via some mechanism.
    * *Note* Transfers of 0 values MUST be treated as normal transfers and fire the `Transfer` event.
    */
    /// @notice postcondition _from != address(0)
    /// @notice postcondition success == true
    /// @notice postcondition _allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) - _value || _allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender])
    /// @notice postcondition _balances[_from] == __verifier_old_uint(_balances[_from]) - _value || _balances[_from] == __verifier_old_uint(_balances[_from])
    /// @notice postcondition _balances[_to] == __verifier_old_uint(_balances[_to]) + _value || _balances[_to] == __verifier_old_uint(_balances[_to])
    /// @notice postcondition !(success) || (_value > 0 || _balances[_to] == __verifier_old_uint(_balances[_to]))

    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);

    /**
    * Allows `_spender` to withdraw from your account multiple times, up to the `_value` amount. If this function is called again it overwrites the current allowance with `_value`.
    */
    /// @notice postcondition success == true
    /// @notice postcondition _spender != msg.sender
    /// @notice postcondition _allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]) || _allowed[msg.sender][_spender] == _value
    /// @notice postcondition _value == 0 || __verifier_old_uint(_allowed[msg.sender][_spender]) > 0

    function approve(address _spender, uint256 _value) public returns (bool success);

    /**
    * Returns the account balance of another account with address `_owner`.
    */
    /// @notice postcondition balance == _balances[_owner]

    function balanceOf(address _owner) public view returns (uint256 balance);

    /**
    * Returns the amount which `_spender` is still allowed to withdraw from `_owner`.
    */
    /// @notice postcondition remaining == _allowed[_owner][_spender]

    function allowance(address _owner, address _spender) public view returns (uint256 remaining);
}
","[""Interaction: 2\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: OK\nERC20::approve: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:93:5: Postcondition '_spender != msg.sender' might not hold at end of function.\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:93:5: Postcondition '_value == 0 || __verifier_old_uint(_allowed[msg.sender][_spender]) > 0' might not hold at end of function.\nERC20::transferFrom: OK\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n""]"
3,314.11357164382935,10,False,,"[""Interaction: 2\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:74:5: Postcondition '_value == 0 || _balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) - _value' might not hold at end of function.\nERC20::approve: OK\nERC20::transferFrom: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:110:5: Postcondition '_value == 0 || _balances[_from] == __verifier_old_uint(_balances[_from]) - _value' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 3\nError while running verifier, details:\n----- Verifier output -----\nParsing /tmp/tmpwk7wh0km/ERC20_merge.sol.bpl\nCoalescing blocks...\nInlining...\n\nRunning abstract interpretation...\n  [0.0948227 s]\n[TRACE] Using prover: /usr/local/bin/z3\nUnhandled exception. System.AggregateException: One or more errors occurred. (Broken pipe) (Broken pipe)\n ---> System.IO.IOException: Broken pipe\n   at System.IO.FileStream.WriteNative(ReadOnlySpan`1 source)\n   at System.IO.FileStream.FlushWriteBuffer()\n   at System.IO.FileStream.FlushInternalBuffer()\n   at System.IO.FileStream.Flush(Boolean flushToDisk)\n   at System.IO.FileStream.Flush()\n   at System.IO.StreamWriter.Flush(Boolean flushStream, Boolean flushEncoder)\n   at System.IO.StreamWriter.WriteLine(String value)\n   at Microsoft.Boogie.SMTLib.SMTLibProcess.Send(String cmd) in /home/travis/build/boogie-org/boogie/Source/Provers/SMTLib/SMTLibProcess.cs:line 102\n   at Microsoft.Boogie.SMTLib.SMTLibProcessTheoremProver.Send(String s, Boolean isCommon) in /home/travis/build/boogie-org/boogie/Source/Provers/SMTLib/ProverInterface.cs:line 227\n   at Microsoft.Boogie.SMTLib.SMTLibProcessTheoremProver.SendThisVC(String s) in /home/travis/build/boogie-org/boogie/Source/Provers/SMTLib/ProverInterface.cs:line 216\n   at Microsoft.Boogie.SMTLib.SMTLibProcessTheoremProver.Reset(VCExpressionGenerator gen) in /home/travis/build/boogie-org/boogie/Source/Provers/SMTLib/ProverInterface.cs:line 592\n   at Microsoft.Boogie.Checker.BeginCheck(String descriptiveName, VCExpr vc, ErrorHandler handler) in /home/travis/build/boogie-org/boogie/Source/VCGeneration/Check.cs:line 384\n   at VC.VCGen.Split.BeginCheck(Checker checker, VerifierCallback callback, ModelViewInfo mvInfo, Int32 no, Int32 timeout) in /home/travis/build/boogie-org/boogie/Source/VCGeneration/VC.cs:line 1408\n   at VC.VCGen.VerifyImplementation(Implementation impl, VerifierCallback callback) in /home/travis/build/boogie-org/boogie/Source/VCGeneration/VC.cs:line 1808\n   at VC.ConditionGeneration.VerifyImplementation(Implementation impl, List`1& errors, String requestId) in /home/travis/build/boogie-org/boogie/Source/VCGeneration/ConditionGeneration.cs:line 664\n   at Microsoft.Boogie.ExecutionEngine.VerifyImplementation(Program program, PipelineStatistics stats, ErrorReporterDelegate er, String requestId, Dictionary`2 extractLoopMappingInfo, Implementation[] stablePrioritizedImpls, Int32 index, OutputCollector outputCollector, List`1 checkers, String programId) in /home/travis/build/boogie-org/boogie/Source/ExecutionEngine/ExecutionEngine.cs:line 1154\n   at Microsoft.Boogie.ExecutionEngine.<>c__DisplayClass27_2.<InferAndVerify>b__5(Object dummy) in /home/travis/build/boogie-org/boogie/Source/ExecutionEngine/ExecutionEngine.cs:line 951\n   at System.Threading.Tasks.Task.InnerInvoke()\n   at System.Threading.Tasks.Task.<>c.<.cctor>b__274_0(Object obj)\n   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\n   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)\n   --- End of inner exception stack trace ---\n   at System.AggregateException.Handle(Func`2 predicate)\n   at Microsoft.Boogie.ExecutionEngine.InferAndVerify(Program program, PipelineStatistics stats, String programId, ErrorReporterDelegate er, String requestId) in /home/travis/build/boogie-org/boogie/Source/ExecutionEngine/ExecutionEngine.cs:line 982\n   at Microsoft.Boogie.ExecutionEngine.ProcessFiles(List`1 fileNames, Boolean lookForSnapshots, String programId) in /home/travis/build/boogie-org/boogie/Source/ExecutionEngine/ExecutionEngine.cs:line 526\n   at Microsoft.Boogie.OnlyBoogie.Main(String[] args) in /home/travis/build/boogie-org/boogie/Source/BoogieDriver/BoogieDriver.cs:line 93\nAborted\n\n---------------------------\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:75:5: Postcondition '_balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) || _value == 0' might not hold at end of function.\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:75:5: Postcondition '_balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) - _value || _value == 0' might not hold at end of function.\nERC20::approve: OK\nERC20::transferFrom: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:112:5: Postcondition '_balances[_from] == __verifier_old_uint(_balances[_from]) || _value == 0' might not hold at end of function.\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:112:5: Postcondition '_balances[_from] == __verifier_old_uint(_balances[_from]) - _value || _value == 0' might not hold at end of function.\nERC20::increaseAllowance: ERROR\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 4\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:74:5: Postcondition '_value == 0 || _balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) - _value' might not hold at end of function.\nERC20::approve: OK\nERC20::transferFrom: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:110:5: Postcondition '_value == 0 || _balances[_from] == __verifier_old_uint(_balances[_from]) - _value' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 5\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:75:5: Postcondition '_balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) || _value == 0' might not hold at end of function.\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:75:5: Postcondition '_value == 0 || _balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) - _value' might not hold at end of function.\nERC20::approve: OK\nERC20::transferFrom: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:112:5: Postcondition '_balances[_from] == __verifier_old_uint(_balances[_from]) || _value == 0' might not hold at end of function.\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:112:5: Postcondition '_value == 0 || _balances[_from] == __verifier_old_uint(_balances[_from]) - _value' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 6\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:74:5: Postcondition '_balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) - _value || _value == 0' might not hold at end of function.\nERC20::approve: OK\nERC20::transferFrom: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:110:5: Postcondition '_balances[_from] == __verifier_old_uint(_balances[_from]) - _value || _value == 0' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 7\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:74:5: Postcondition '_value == 0 || _balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) - _value' might not hold at end of function.\nERC20::approve: OK\nERC20::transferFrom: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:110:5: Postcondition '_value == 0 || _balances[_from] == __verifier_old_uint(_balances[_from]) - _value' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 8\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:74:5: Postcondition '_value == 0 || _balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) - _value' might not hold at end of function.\nERC20::approve: OK\nERC20::transferFrom: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:110:5: Postcondition '_value == 0 || _balances[_from] == __verifier_old_uint(_balances[_from]) - _value' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 9\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:75:5: Postcondition '_balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) + _value || _value == 0' might not hold at end of function.\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:75:5: Postcondition '_value == 0 || _balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) - _value' might not hold at end of function.\nERC20::approve: OK\nERC20::transferFrom: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:112:5: Postcondition '_value == 0 || _balances[_from] == __verifier_old_uint(_balances[_from]) - _value' might not hold at end of function.\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:112:5: Postcondition '_balances[_from] == __verifier_old_uint(_balances[_from]) + _value || _value == 0' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 10\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:74:5: Postcondition '_value == 0 || _balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) - _value' might not hold at end of function.\nERC20::approve: OK\nERC20::transferFrom: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:110:5: Postcondition '_value == 0 || _balances[_from] == __verifier_old_uint(_balances[_from]) - _value' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n""]"
4,304.9376721382141,10,False,,"[""Interaction: 2\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: OK\nERC20::approve: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:91:5: Postcondition '_value == 0 || _allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]) + _value' might not hold at end of function.\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:91:5: Postcondition '_value != 0 || _allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender])' might not hold at end of function.\nERC20::transferFrom: OK\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 3\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: OK\nERC20::approve: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:91:5: Postcondition '_value == 0 || _allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]) + _value' might not hold at end of function.\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:91:5: Postcondition '_spender != msg.sender || _allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender])' might not hold at end of function.\nERC20::transferFrom: OK\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 4\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: OK\nERC20::approve: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:91:5: Postcondition '_value == 0 || _allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]) + _value' might not hold at end of function.\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:91:5: Postcondition '_value == 0 || _spender != msg.sender || _allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender])' might not hold at end of function.\nERC20::transferFrom: OK\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 5\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: OK\nERC20::approve: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:91:5: Postcondition '_allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]) || _value == 0' might not hold at end of function.\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:91:5: Postcondition '_value == 0 || _allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]) + _value' might not hold at end of function.\nERC20::transferFrom: OK\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 6\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: OK\nERC20::approve: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:91:5: Postcondition '_value == 0 || _allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]) + _value' might not hold at end of function.\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:91:5: Postcondition '_spender != msg.sender || _allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]) || _value == 0' might not hold at end of function.\nERC20::transferFrom: OK\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 7\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: OK\nERC20::approve: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:91:5: Postcondition '_value == 0 || _allowed[msg.sender][_spender] + _value == __verifier_old_uint(_allowed[msg.sender][_spender])' might not hold at end of function.\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:91:5: Postcondition '_spender == msg.sender || _allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]) || _value == 0' might not hold at end of function.\nERC20::transferFrom: OK\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 8\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: OK\nERC20::approve: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:91:5: Postcondition '_value == 0 || _allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]) + _value' might not hold at end of function.\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:91:5: Postcondition '_spender == msg.sender || _allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender])' might not hold at end of function.\nERC20::transferFrom: OK\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 9\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: OK\nERC20::approve: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:91:5: Postcondition '_value == 0 || _allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]) + _value' might not hold at end of function.\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:91:5: Postcondition '_spender == msg.sender || _allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender])' might not hold at end of function.\nERC20::transferFrom: OK\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 10\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: OK\nERC20::approve: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:91:5: Postcondition '_value == 0 || _allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]) || _allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]) + _value' might not hold at end of function.\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:91:5: Postcondition '_spender != msg.sender || _allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]) || _value == 0' might not hold at end of function.\nERC20::transferFrom: OK\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n""]"
5,232.34906482696533,10,False,,[]
6,19.30607318878174,0,False,,[]
7,238.7150273323059,10,False,,"[""Interaction: 2\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: OK\nERC20::approve: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:92:5: Postcondition 'msg.sender != _spender' might not hold at end of function.\nERC20::transferFrom: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:112:5: Postcondition '_from != _to' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 3\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: OK\nERC20::approve: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:92:5: Postcondition 'msg.sender != _spender' might not hold at end of function.\nERC20::transferFrom: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:112:5: Postcondition '!(_from == _to)' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 4\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: OK\nERC20::approve: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:92:5: Postcondition '!(msg.sender == _spender)' might not hold at end of function.\nERC20::transferFrom: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:112:5: Postcondition '_from != _to' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 5\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: OK\nERC20::approve: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:92:5: Postcondition '!(msg.sender == _spender)' might not hold at end of function.\nERC20::transferFrom: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:112:5: Postcondition '_from != _to' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 6\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: OK\nERC20::approve: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:92:5: Postcondition '_spender != msg.sender' might not hold at end of function.\nERC20::transferFrom: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:112:5: Postcondition '_from != _to' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 7\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: OK\nERC20::approve: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:92:5: Postcondition '_spender != msg.sender' might not hold at end of function.\nERC20::transferFrom: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:112:5: Postcondition '_from != _to' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 8\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: OK\nERC20::approve: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:92:5: Postcondition '_spender == msg.sender || __verifier_old_uint(_allowed[msg.sender][_spender]) == _allowed[msg.sender][_spender]' might not hold at end of function.\nERC20::transferFrom: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:112:5: Postcondition '_from != _to' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 9\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: OK\nERC20::approve: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:92:5: Postcondition '!(msg.sender == _spender)' might not hold at end of function.\nERC20::transferFrom: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:112:5: Postcondition '_from != _to' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 10\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: OK\nERC20::approve: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:92:5: Postcondition '_spender != msg.sender' might not hold at end of function.\nERC20::transferFrom: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:112:5: Postcondition '_from != _to' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n""]"
8,282.45639204978943,10,False,,"[""Interaction: 2\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:75:5: Postcondition ' _value == 0 || _balances[_to] == __verifier_old_uint(_balances[_to]) + _value' might not hold at end of function.\nERC20::approve: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:92:5: Postcondition '_allowed[msg.sender][_spender] == _value + __verifier_old_uint(_allowed[msg.sender][_spender]) || (__verifier_old_uint(_allowed[msg.sender][_spender]) == _allowed[msg.sender][_spender] && _value == 0)' might not hold at end of function.\nERC20::transferFrom: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:112:5: Postcondition '_value == 0 || _balances[_to] == __verifier_old_uint(_balances[_to]) + _value' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 3\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:75:5: Postcondition ' _value == 0 || _balances[_to] == __verifier_old_uint(_balances[_to]) + _value' might not hold at end of function.\nERC20::approve: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:92:5: Postcondition '_allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]) + _value || _value == 0' might not hold at end of function.\nERC20::transferFrom: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:112:5: Postcondition '_value == 0 || _balances[_to] == __verifier_old_uint(_balances[_to]) + _value' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 4\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:75:5: Postcondition ' _value == 0 || _balances[_to] == __verifier_old_uint(_balances[_to]) + _value' might not hold at end of function.\nERC20::approve: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:93:5: Postcondition '__verifier_old_uint(_allowed[msg.sender][_spender]) >= _value || _value == 0' might not hold at end of function.\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:93:5: Postcondition '_allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]) + _value || _value == 0' might not hold at end of function.\nERC20::transferFrom: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:113:5: Postcondition '_value == 0 || _balances[_to] == __verifier_old_uint(_balances[_to]) + _value' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 5\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:75:5: Postcondition '_value == 0 || _to != msg.sender' might not hold at end of function.\nERC20::approve: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:93:5: Postcondition '_allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]) + _value || _value == 0' might not hold at end of function.\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:93:5: Postcondition '__verifier_old_uint(_allowed[msg.sender][_spender]) >= _value || _value == 0' might not hold at end of function.\nERC20::transferFrom: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:113:5: Postcondition '_value == 0 || _balances[_to] == __verifier_old_uint(_balances[_to]) + _value' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 6\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:75:5: Postcondition '_value == 0 || _to != msg.sender' might not hold at end of function.\nERC20::approve: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:93:5: Postcondition '_value == 0 || __verifier_old_uint(_allowed[msg.sender][_spender]) >= _value' might not hold at end of function.\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:93:5: Postcondition '_allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]) + _value || _value == 0' might not hold at end of function.\nERC20::transferFrom: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:113:5: Postcondition '_value == 0 || _balances[_to] == __verifier_old_uint(_balances[_to]) + _value' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 7\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:75:5: Postcondition '_value == 0 || _to != msg.sender' might not hold at end of function.\nERC20::approve: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:93:5: Postcondition '_value == 0 || _allowed[msg.sender][_spender] >= __verifier_old_uint(_allowed[msg.sender][_spender])' might not hold at end of function.\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:93:5: Postcondition '_allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]) + _value || _value == 0' might not hold at end of function.\nERC20::transferFrom: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:113:5: Postcondition '_value == 0 || _balances[_to] == __verifier_old_uint(_balances[_to]) + _value' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 8\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:75:5: Postcondition '_value == 0 || _to != msg.sender' might not hold at end of function.\nERC20::approve: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:93:5: Postcondition '_value == 0 || __verifier_old_uint(_allowed[msg.sender][_spender]) >= _value' might not hold at end of function.\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:93:5: Postcondition '_allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]) + _value || _value == 0' might not hold at end of function.\nERC20::transferFrom: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:113:5: Postcondition '_value == 0 || _balances[_to] == __verifier_old_uint(_balances[_to]) + _value' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 9\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:75:5: Postcondition '_value == 0 || _to != msg.sender' might not hold at end of function.\nERC20::approve: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:93:5: Postcondition '_value == 0 || _allowed[msg.sender][_spender] >= __verifier_old_uint(_allowed[msg.sender][_spender])' might not hold at end of function.\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:93:5: Postcondition '_allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]) + _value || _value == 0' might not hold at end of function.\nERC20::transferFrom: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:113:5: Postcondition '_value == 0 || _balances[_to] == __verifier_old_uint(_balances[_to]) + _value' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 10\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:75:5: Postcondition '_value == 0 || _to != msg.sender' might not hold at end of function.\nERC20::approve: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:93:5: Postcondition '_value == 0 || __verifier_old_uint(_allowed[msg.sender][_spender]) >= _value' might not hold at end of function.\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:93:5: Postcondition '_allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]) + _value || _value == 0' might not hold at end of function.\nERC20::transferFrom: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:113:5: Postcondition '_value == 0 || _balances[_to] == __verifier_old_uint(_balances[_to]) + _value' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n""]"
9,103.23762702941895,3,True,"pragma solidity >=0.5.0;

contract ERC20 {

    mapping (address => uint) _balances;
    mapping (address => mapping (address => uint)) _allowed;
    uint public _totalSupply;

    /**
    * Returns the total token supply.
    */
    /// @notice postcondition supply == _totalSupply
    function totalSupply() public view returns (uint256 supply);

    /**
    * Transfers `_value` amount of tokens to address `_to`, and MUST fire the `Transfer` event.
    * The function SHOULD `throw` if the message caller's account balance does not have enough tokens to spend.

    * *Note* Transfers of 0 values MUST be treated as normal transfers and fire the `Transfer` event.
    */
    /// @notice postcondition _to != msg.sender || _balances[_to] == __verifier_old_uint(_balances[_to])
    /// @notice postcondition success == true
    /// @notice postcondition msg.sender == _to || _balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) - _value
    /// @notice postcondition _balances[_to] == __verifier_old_uint(_balances[_to]) + _value || _to == msg.sender

    function transfer(address _to, uint256 _value) public returns (bool success);

    /**
    * Transfers `_value` amount of tokens from address `_from` to address `_to`, and MUST fire the `Transfer` event.
    * The `transferFrom` method is used for a withdraw workflow, allowing contracts to transfer tokens on your behalf.
    * This can be used for example to allow a contract to transfer tokens on your behalf and/or to charge fees in sub-currencies.
    * The function SHOULD `throw` unless the `_from` account has deliberately authorized the sender of the message via some mechanism.
    * *Note* Transfers of 0 values MUST be treated as normal transfers and fire the `Transfer` event.
    */
    /// @notice postcondition _from != _to || _balances[_from] == __verifier_old_uint(_balances[_from])
    /// @notice postcondition success == true
    /// @notice postcondition _balances[_from] == __verifier_old_uint(_balances[_from]) - _value || _from == _to
    /// @notice postcondition _balances[_to] == __verifier_old_uint(_balances[_to]) + _value || _from == _to

    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);

    /**
    * Allows `_spender` to withdraw from your account multiple times, up to the `_value` amount. If this function is called again it overwrites the current allowance with `_value`.
    */
    /// @notice postcondition _allowed[msg.sender][_spender] == _value || _allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender])
    /// @notice postcondition success == true

    function approve(address _spender, uint256 _value) public returns (bool success);

    /**
    * Returns the account balance of another account with address `_owner`.
    */
    /// @notice postcondition balance == _balances[_owner]

    function balanceOf(address _owner) public view returns (uint256 balance);

    /**
    * Returns the amount which `_spender` is still allowed to withdraw from `_owner`.
    */
    /// @notice postcondition remaining == _allowed[_owner][_spender]

    function allowance(address _owner, address _spender) public view returns (uint256 remaining);
}
","[""Interaction: 2\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:75:5: Postcondition '!( _value > _balances[msg.sender] ) ' might not hold at end of function.\nERC20::approve: OK\nERC20::transferFrom: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:112:5: Postcondition '!( _value > _balances[_from] ) ' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 3\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:74:5: Postcondition '_value <= _balances[msg.sender] ' might not hold at end of function.\nERC20::approve: OK\nERC20::transferFrom: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:110:5: Postcondition '_value <= _balances[_from] ' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n""]"
10,299.57391452789307,10,False,,"[""Interaction: 2\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:74:5: Postcondition '_balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) || _value == 0' might not hold at end of function.\nERC20::approve: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:92:5: Postcondition '_allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]) + _value || (msg.sender == _spender)' might not hold at end of function.\nERC20::transferFrom: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:112:5: Postcondition '__verifier_old_uint(_balances[_from]) - _value == _balances[_from] || _value == 0' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 3\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:74:5: Postcondition '_balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) - _value || _value == 0' might not hold at end of function.\nERC20::approve: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:92:5: Postcondition '(msg.sender != _spender) || (_allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]) + _value)' might not hold at end of function.\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:92:5: Postcondition '_allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]) + _value || (msg.sender == _spender)' might not hold at end of function.\nERC20::transferFrom: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:113:5: Postcondition '__verifier_old_uint(_balances[_from]) - _value == _balances[_from] || _value == 0' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 4\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:74:5: Postcondition '_value == 0 || _balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) - _value' might not hold at end of function.\nERC20::approve: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:92:5: Postcondition '(msg.sender == _spender) || (_allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]) + _value)' might not hold at end of function.\nERC20::transferFrom: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:113:5: Postcondition '__verifier_old_uint(_balances[_from]) - _value == _balances[_from] || _value == 0' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 5\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:74:5: Postcondition '_value == 0 || _balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) - _value' might not hold at end of function.\nERC20::approve: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:92:5: Postcondition '(msg.sender == _spender) || (_allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]) + _value)' might not hold at end of function.\nERC20::transferFrom: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:112:5: Postcondition '__verifier_old_uint(_balances[_from]) == _balances[_from] || _value == 0' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 6\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:74:5: Postcondition '_value == 0 || _balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) - _value' might not hold at end of function.\nERC20::approve: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:92:5: Postcondition '(msg.sender == _spender) || (_allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]) + _value)' might not hold at end of function.\nERC20::transferFrom: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:112:5: Postcondition '_balances[_from] == __verifier_old_uint(_balances[_from]) || _value == 0' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 7\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:74:5: Postcondition '_balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) || _value == 0' might not hold at end of function.\nERC20::approve: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:92:5: Postcondition '(msg.sender == _spender) || (_allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]) + _value)' might not hold at end of function.\nERC20::transferFrom: OK\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 8\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:74:5: Postcondition '_value == 0 || _balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) - _value' might not hold at end of function.\nERC20::approve: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:92:5: Postcondition '(msg.sender == _spender) || (_allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]) + _value)' might not hold at end of function.\nERC20::transferFrom: OK\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 9\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: OK\nERC20::approve: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:92:5: Postcondition '(msg.sender == _spender) || (_allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]) + _value)' might not hold at end of function.\nERC20::transferFrom: OK\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 10\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: OK\nERC20::approve: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:92:5: Postcondition '(msg.sender == _spender) || (_allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]) + _value) || (_allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]))' might not hold at end of function.\nERC20::transferFrom: OK\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n""]"
