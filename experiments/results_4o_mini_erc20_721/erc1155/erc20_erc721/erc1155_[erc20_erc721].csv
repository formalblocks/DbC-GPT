run,time_taken,iterations,verified,annotated_contract,status
1,269.86826252937317,10,False,,[]
2,263.3468773365021,10,False,,[]
3,222.57303142547607,10,False,,[]
4,289.11794996261597,10,False,,[]
5,288.41605377197266,10,False,,[]
6,256.7678179740906,10,False,,[]
7,257.61956667900085,9,True,"pragma solidity >= 0.5.0;

contract ERC1155 {

    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);
    event TransferBatch(address indexed operator, address indexed from, address indexed to, uint256[] ids, uint256[] values);
    event ApprovalForAll(address indexed account, address indexed operator, bool approved);
    event URI(string value, uint256 indexed id);

    mapping (uint256 => mapping(address => uint256)) private _balances;
    mapping (address => mapping(address => bool)) private _operatorApprovals;
    string private _uri;

    /// @notice postcondition _balances[_owner][_id] == balance
    function balanceOf(address _owner, uint256 _id) public view returns (uint256 balance);

    /// @notice postcondition _balances[_owners[i]][_ids[i]] == batchBalances[i]
    function balanceOfBatch(address[] memory _owners, uint256[] memory _ids) public view returns (uint256[] memory batchBalances);

    /// @notice postcondition _operatorApprovals[msg.sender][_operator] == _approved
    function setApprovalForAll(address _operator, bool _approved) public;

    /// @notice postcondition _operatorApprovals[_owner][_operator] == approved
    function isApprovedForAll(address _owner, address _operator) public view returns (bool approved);

    /// @notice postcondition ( _balances[_from][_id] == __verifier_old_uint(_balances[_from][_id]) - _value && _from != _to ) || (_from == _to)
    /// @notice postcondition ( _balances[_to][_id] == __verifier_old_uint(_balances[_to][_id]) + _value && _from != _to ) || (_from == _to)
    function safeTransferFrom(address _from, address _to, uint256 _id, uint256 _value, bytes memory _data) public;

    /// @notice postcondition ( ( _balances[_from][_ids[i]] == __verifier_old_uint(_balances[_from][_ids[i]]) - _values[i] && _from != _to ) || ( _from == _to ) )
    /// @notice postcondition ( ( _balances[_to][_ids[i]] == __verifier_old_uint(_balances[_to][_ids[i]]) + _values[i] && _from != _to ) || ( _from == _to ) )
    function safeBatchTransferFrom(address _from, address _to, uint256[] memory _ids, uint256[] memory _values, bytes memory _data) public;
}
",[]
8,253.49301171302795,10,False,,[]
9,210.5345139503479,10,False,,[]
10,165.3921115398407,10,False,,[]
