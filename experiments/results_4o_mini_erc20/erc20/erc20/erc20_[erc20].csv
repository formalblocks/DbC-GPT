run,time_taken,iterations,verified,annotated_contract,status
1,244.2106945514679,10,False,,"[""Interaction: 3\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: OK\nERC20::approve: OK\nERC20::transferFrom: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:105:5: Postcondition '( _allowed[_from][msg.sender] >= _value )' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 9\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: OK\nERC20::approve: OK\nERC20::transferFrom: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:105:5: Postcondition '_allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) && !success' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: TIMEOUT\nIERC20::[implicit_constructor]: TIMEOUT\nInconclusive results.\nErrors were found by the verifier.\n\n""]"
2,61.751898765563965,1,True,"// SPDX-License-Identifier: MIT
pragma solidity >=0.5.0;

contract ERC20 {

    mapping (address => uint) _balances;
    mapping (address => mapping (address => uint)) _allowed;
    uint public _totalSupply;

    /// @notice postcondition _totalSupply == supply
    function totalSupply() public view returns (uint256 supply);

    /// @notice  postcondition ( ( _balances[msg.sender] ==  __verifier_old_uint ( _balances[msg.sender] ) - _value  && msg.sender  != _to ) || ( _balances[msg.sender] ==  __verifier_old_uint ( _balances[msg.sender] ) && msg.sender  == _to ) )
    /// @notice  postcondition ( ( _balances[_to] ==  __verifier_old_uint ( _balances[_to] ) + _value  && msg.sender  != _to ) || ( _balances[_to] ==  __verifier_old_uint ( _balances[_to] ) && msg.sender  == _to ) )
    function transfer(address _to, uint256 _value) public returns (bool success);

    /// @notice  postcondition ( ( _balances[_from] ==  __verifier_old_uint ( _balances[_from] ) - _value  &&  _from  != _to ) || ( _from  == _to ) )
    /// @notice  postcondition ( ( _balances[_to] ==  __verifier_old_uint ( _balances[_to] ) + _value  &&  _from  != _to ) || ( _from  == _to ) )
    /// @notice  postcondition ( _allowed[_from][msg.sender] >= _value )
    /// @notice  postcondition  _allowed[_from][msg.sender] ==  __verifier_old_uint ( _allowed[_from][msg.sender] ) - _value
    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);

    /// @notice  postcondition ( _allowed[msg.sender][_spender] == _value )
    function approve(address _spender, uint256 _value) public returns (bool success);

    /// @notice postcondition _balances[_owner] == balance
    function balanceOf(address _owner) public view returns (uint256 balance);

    /// @notice postcondition _allowed[_owner][_spender] == remaining
    function allowance(address _owner, address _spender) public view returns (uint256 remaining);
}
","[""Interaction: 1\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: OK\nERC20::approve: OK\nERC20::transferFrom: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:105:5: Postcondition '( _allowed[_from][msg.sender] >= _value )' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n""]"
3,241.16283679008484,10,False,,"[""Interaction: 1\nERC20::totalSupply: OK\nERC20::balanceOf: TIMEOUT\nERC20::allowance: OK\nERC20::transfer: OK\nERC20::approve: OK\nERC20::transferFrom: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:105:5: Postcondition '( _allowed[_from][msg.sender] >= _value )' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nInconclusive results.\nErrors were found by the verifier.\n\n"", ""Interaction: 2\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: OK\nERC20::approve: OK\nERC20::transferFrom: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:105:5: Postcondition '( _allowed[_from][msg.sender] >= _value )' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 3\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: OK\nERC20::approve: OK\nERC20::transferFrom: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:105:5: Postcondition '( _allowed[_from][msg.sender] >= _value )' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 6\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: OK\nERC20::approve: OK\nERC20::transferFrom: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:105:5: Postcondition '( _allowed[_from][msg.sender] >= _value )' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: TIMEOUT\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nInconclusive results.\nErrors were found by the verifier.\n\n""]"
4,136.85386395454407,10,False,,[]
5,311.49566626548767,10,False,,"[""Interaction: 1\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: OK\nERC20::approve: OK\nERC20::transferFrom: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:105:5: Postcondition '( _allowed[_from][msg.sender] >= _value )' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 2\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: OK\nERC20::approve: OK\nERC20::transferFrom: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:105:5: Postcondition '( _allowed[_from][msg.sender] >= _value )' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 3\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: OK\nERC20::approve: OK\nERC20::transferFrom: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:105:5: Postcondition '( _allowed[_from][msg.sender] >= _value )' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 4\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: TIMEOUT\nERC20::transfer: OK\nERC20::approve: OK\nERC20::transferFrom: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:105:5: Postcondition '( _allowed[_from][msg.sender] >= _value )' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nInconclusive results.\nErrors were found by the verifier.\n\n"", ""Interaction: 5\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: OK\nERC20::approve: OK\nERC20::transferFrom: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:105:5: Postcondition '( _allowed[_from][msg.sender] >= _value )' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 6\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: OK\nERC20::approve: OK\nERC20::transferFrom: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:105:5: Postcondition '( _allowed[_from][msg.sender] >= _value )' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 7\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: OK\nERC20::approve: OK\nERC20::transferFrom: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:105:5: Postcondition '( _allowed[_from][msg.sender] >= _value )' might not hold at end of function.\nERC20::increaseAllowance: TIMEOUT\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: TIMEOUT\n[event] IERC20::Transfer: TIMEOUT\n[event] IERC20::Approval: TIMEOUT\nIERC20::[implicit_constructor]: TIMEOUT\nSafeMath::mul: TIMEOUT\nSafeMath::div: TIMEOUT\nInconclusive results.\nErrors were found by the verifier.\n\n"", ""Interaction: 9\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: OK\nERC20::approve: OK\nERC20::transferFrom: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:105:5: Postcondition '( _allowed[_from][msg.sender] >= _value )' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 10\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: OK\nERC20::approve: OK\nERC20::transferFrom: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:105:5: Postcondition '( _allowed[_from][msg.sender] >= _value )' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n""]"
6,44.67495942115784,1,True,"// SPDX-License-Identifier: MIT
pragma solidity >=0.5.0;

contract ERC20 {

    mapping (address => uint) _balances;
    mapping (address => mapping (address => uint)) _allowed;
    uint public _totalSupply;

    /// @notice postcondition _totalSupply == supply
    function totalSupply() public view returns (uint256 supply);

    /// @notice  postcondition ( ( _balances[msg.sender] ==  __verifier_old_uint ( _balances[msg.sender] ) - _value  && msg.sender  != _to ) || ( _balances[msg.sender] ==  __verifier_old_uint ( _balances[msg.sender] ) && msg.sender  == _to ) )
    /// @notice  postcondition ( ( _balances[_to] ==  __verifier_old_uint ( _balances[_to] ) + _value  && msg.sender  != _to ) || ( _balances[_to] ==  __verifier_old_uint ( _balances[_to] ) && msg.sender  == _to ) )
    function transfer(address _to, uint256 _value) public returns (bool success);

    /// @notice  postcondition ( ( _balances[_from] ==  __verifier_old_uint ( _balances[_from] ) - _value  &&  _from  != _to ) || ( _from  == _to ) )
    /// @notice  postcondition ( ( _balances[_to] ==  __verifier_old_uint ( _balances[_to] ) + _value  &&  _from  != _to ) || ( _from  == _to ) )
    /// @notice  postcondition ( _allowed[_from][msg.sender] >= _value )
    /// @notice  postcondition  _allowed[_from][msg.sender] ==  __verifier_old_uint ( _allowed[_from][msg.sender] ) - _value
    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);

    /// @notice  postcondition ( _allowed[msg.sender][_spender] == _value )
    function approve(address _spender, uint256 _value) public returns (bool success);

    /// @notice postcondition _balances[_owner] == balance
    function balanceOf(address _owner) public view returns (uint256 balance);

    /// @notice postcondition _allowed[_owner][_spender] == remaining
    function allowance(address _owner, address _spender) public view returns (uint256 remaining);
}
","[""Interaction: 1\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: OK\nERC20::approve: OK\nERC20::transferFrom: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:105:5: Postcondition '( _allowed[_from][msg.sender] >= _value )' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n""]"
7,140.08683609962463,10,False,,[]
8,178.60799980163574,10,False,,[]
9,23.278026342391968,0,True,"// SPDX-License-Identifier: MIT
pragma solidity >=0.5.0;

contract ERC20 {

    mapping (address => uint) _balances;
    mapping (address => mapping (address => uint)) _allowed;
    uint public _totalSupply;

    /// @notice postcondition _totalSupply == supply
    function totalSupply() public view returns (uint256 supply);

    /// @notice  postcondition ( ( _balances[msg.sender] ==  __verifier_old_uint ( _balances[msg.sender] ) - _value  && msg.sender  != _to ) || ( _balances[msg.sender] ==  __verifier_old_uint ( _balances[msg.sender] ) && msg.sender  == _to ) )
    /// @notice  postcondition ( ( _balances[_to] ==  __verifier_old_uint ( _balances[_to] ) + _value  && msg.sender  != _to ) || ( _balances[_to] ==  __verifier_old_uint ( _balances[_to] ) && msg.sender  == _to ) )
    function transfer(address _to, uint256 _value) public returns (bool success);

    /// @notice  postcondition ( ( _balances[_from] ==  __verifier_old_uint ( _balances[_from] ) - _value  &&  _from  != _to ) || ( _from  == _to ) )
    /// @notice  postcondition ( ( _balances[_to] ==  __verifier_old_uint ( _balances[_to] ) + _value  &&  _from  != _to ) || ( _from  == _to ) )
    /// @notice  postcondition ( _allowed[_from][msg.sender] ==  __verifier_old_uint ( _allowed[_from][msg.sender] ) - _value )
    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);

    /// @notice  postcondition ( _allowed[msg.sender][_spender] == _value )
    function approve(address _spender, uint256 _value) public returns (bool success);

    /// @notice postcondition _balances[_owner] == balance
    function balanceOf(address _owner) public view returns (uint256 balance);

    /// @notice postcondition _allowed[_owner][_spender] == remaining
    function allowance(address _owner, address _spender) public view returns (uint256 remaining);
}
",[]
10,19.1070454120636,0,False,,[]
