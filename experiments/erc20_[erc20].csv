run,time_taken,iterations,verified,annotated_contract,status
1,24.42579460144043,0,True,"pragma solidity >=0.5.0;

contract ERC20 {

    mapping (address => uint) _balances;
    mapping (address => mapping (address => uint)) _allowed;
    uint public _totalSupply;

    /// @notice postcondition supply == _totalSupply
    function totalSupply() public view returns (uint256 supply);

    /// @notice postcondition ( _balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) - _value && msg.sender != _to ) || ( _balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) && msg.sender == _to )
    /// @notice postcondition ( _balances[_to] == __verifier_old_uint(_balances[_to]) + _value && msg.sender != _to ) || ( _balances[_to] == __verifier_old_uint(_balances[_to]) && msg.sender == _to )
    function transfer(address _to, uint256 _value) public returns (bool success);

    /// @notice postcondition ( _balances[_from] == __verifier_old_uint(_balances[_from]) - _value && _from != _to ) || ( _balances[_from] == __verifier_old_uint(_balances[_from]) && _from == _to )
    /// @notice postcondition ( _balances[_to] == __verifier_old_uint(_balances[_to]) + _value && _from != _to ) || ( _balances[_to] == __verifier_old_uint(_balances[_to]) && _from == _to )
    /// @notice postcondition ( _allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) - _value && success ) || ( _allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) && !success )
    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);

    /// @notice postcondition _allowed[msg.sender][_spender] == _value
    function approve(address _spender, uint256 _value) public returns (bool success);

    /// @notice postcondition _balances[_owner] == balance
    function balanceOf(address _owner) public view returns (uint256 balance);

    /// @notice postcondition _allowed[_owner][_spender] == remaining
    function allowance(address _owner, address _spender) public view returns (uint256 remaining);
}
",[]
2,22.658782482147217,0,True,"pragma solidity >=0.5.0;

contract ERC20 {

    mapping (address => uint) _balances;
    mapping (address => mapping (address => uint)) _allowed;
    uint public _totalSupply;

    /// @notice postcondition supply == _totalSupply
    function totalSupply() public view returns (uint256 supply);

    /// @notice postcondition ( _balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) - _value && msg.sender != _to ) || ( _balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) && msg.sender == _to ) || !success
    /// @notice postcondition ( _balances[_to] == __verifier_old_uint(_balances[_to]) + _value && msg.sender != _to ) || ( _balances[_to] == __verifier_old_uint(_balances[_to]) && msg.sender == _to ) || !success
    function transfer(address _to, uint256 _value) public returns (bool success);

    /// @notice postcondition ( _balances[_from] == __verifier_old_uint(_balances[_from]) - _value && _from != _to ) || ( _balances[_from] == __verifier_old_uint(_balances[_from]) && _from == _to ) || !success
    /// @notice postcondition ( _balances[_to] == __verifier_old_uint(_balances[_to]) + _value && _from != _to ) || ( _balances[_to] == __verifier_old_uint(_balances[_to]) && _from == _to ) || !success
    /// @notice postcondition ( _allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) - _value && success ) || ( _allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) && !success ) || _from == msg.sender
    /// @notice postcondition _allowed[_from][msg.sender] <= __verifier_old_uint(_allowed[_from][msg.sender]) || _from == msg.sender
    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);

    /// @notice postcondition _allowed[msg.sender][_spender] == _value && success || _allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]) && !success
    function approve(address _spender, uint256 _value) public returns (bool success);

    /// @notice postcondition _balances[_owner] == balance
    function balanceOf(address _owner) public view returns (uint256 balance);

    /// @notice postcondition _allowed[_owner][_spender] == remaining
    function allowance(address _owner, address _spender) public view returns (uint256 remaining);
}
",[]
3,19.351405143737793,0,True,"pragma solidity >=0.5.0;

contract ERC20 {

    mapping (address => uint) _balances;
    mapping (address => mapping (address => uint)) _allowed;
    uint public _totalSupply;

    /// @notice postcondition supply == _totalSupply
    function totalSupply() public view returns (uint256 supply);

    /// @notice postcondition ( _balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) - _value && msg.sender != _to ) || ( _balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) && msg.sender == _to )
    /// @notice postcondition _balances[_to] == __verifier_old_uint(_balances[_to]) + _value || ( _balances[_to] == __verifier_old_uint(_balances[_to]) && msg.sender == _to )
    function transfer(address _to, uint256 _value) public returns (bool success);

    /// @notice postcondition ( _balances[_from] == __verifier_old_uint(_balances[_from]) - _value && _from != _to ) || ( _balances[_from] == __verifier_old_uint(_balances[_from]) && _from == _to )
    /// @notice postcondition _balances[_to] == __verifier_old_uint(_balances[_to]) + _value || ( _balances[_to] == __verifier_old_uint(_balances[_to]) && _from == _to )
    /// @notice postcondition _allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) - _value || ( _allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) && !success )
    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);

    /// @notice postcondition _allowed[msg.sender][_spender] == _value || ( _allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]) && !success )
    function approve(address _spender, uint256 _value) public returns (bool success);

    /// @notice postcondition _balances[_owner] == balance
    function balanceOf(address _owner) public view returns (uint256 balance);

    /// @notice postcondition _allowed[_owner][_spender] == remaining
    function allowance(address _owner, address _spender) public view returns (uint256 remaining);
}
",[]
4,227.58060550689697,10,False,,"[""Interaction: 1\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:71:5: Postcondition '( _balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) - _value && success ) || ( _balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) && !success )' might not hold at end of function.\nERC20::approve: OK\nERC20::transferFrom: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:104:5: Postcondition '( _balances[_from] == __verifier_old_uint(_balances[_from]) - _value && success ) || ( _balances[_from] == __verifier_old_uint(_balances[_from]) && !success )' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 2\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:72:5: Postcondition '( _balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) || _value == 0 )' might not hold at end of function.\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:72:5: Postcondition '( _balances[_to] == __verifier_old_uint(_balances[_to]) + _value || !success )' might not hold at end of function.\nERC20::approve: OK\nERC20::transferFrom: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:105:5: Postcondition '( _balances[_to] == __verifier_old_uint(_balances[_to]) + _value || !success )' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 3\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:72:5: Postcondition '( _balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) || _value == 0 )' might not hold at end of function.\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:72:5: Postcondition '( _balances[_to] == __verifier_old_uint(_balances[_to]) + _value || !success )' might not hold at end of function.\nERC20::approve: OK\nERC20::transferFrom: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:105:5: Postcondition '( _balances[_to] == __verifier_old_uint(_balances[_to]) + _value || !success )' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 4\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:72:5: Postcondition '( _balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) || _value == 0 )' might not hold at end of function.\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:72:5: Postcondition '( _balances[_to] == __verifier_old_uint(_balances[_to]) + _value || !success )' might not hold at end of function.\nERC20::approve: OK\nERC20::transferFrom: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:105:5: Postcondition '( _balances[_to] == __verifier_old_uint(_balances[_to]) + _value || !success )' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 5\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:72:5: Postcondition '( _value == 0 || _balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) )' might not hold at end of function.\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:72:5: Postcondition '( _balances[_to] == __verifier_old_uint(_balances[_to]) + _value || !success )' might not hold at end of function.\nERC20::approve: OK\nERC20::transferFrom: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:105:5: Postcondition '( _balances[_to] == __verifier_old_uint(_balances[_to]) + _value || !success )' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 6\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:72:5: Postcondition '( _value == 0 || _balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) )' might not hold at end of function.\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:72:5: Postcondition '( _balances[_to] == __verifier_old_uint(_balances[_to]) + _value || !success )' might not hold at end of function.\nERC20::approve: OK\nERC20::transferFrom: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:105:5: Postcondition '( _balances[_to] == __verifier_old_uint(_balances[_to]) + _value || !success )' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 7\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:72:5: Postcondition '( _value == 0 || _balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) )' might not hold at end of function.\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:72:5: Postcondition '( _balances[_to] == __verifier_old_uint(_balances[_to]) + _value || !success )' might not hold at end of function.\nERC20::approve: OK\nERC20::transferFrom: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:105:5: Postcondition '( _balances[_to] == __verifier_old_uint(_balances[_to]) + _value || !success )' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 8\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:72:5: Postcondition '( _value == 0 || _balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) )' might not hold at end of function.\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:72:5: Postcondition '( _balances[_to] == __verifier_old_uint(_balances[_to]) + _value || !success )' might not hold at end of function.\nERC20::approve: OK\nERC20::transferFrom: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:105:5: Postcondition '( _balances[_to] == __verifier_old_uint(_balances[_to]) + _value || !success )' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 9\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:72:5: Postcondition '( _value == 0 || _balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) )' might not hold at end of function.\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:72:5: Postcondition '( _balances[_to] == __verifier_old_uint(_balances[_to]) + _value || !success )' might not hold at end of function.\nERC20::approve: OK\nERC20::transferFrom: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:105:5: Postcondition '( _balances[_to] == __verifier_old_uint(_balances[_to]) + _value || !success )' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 10\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:72:5: Postcondition '( _value == 0 || _balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) )' might not hold at end of function.\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:72:5: Postcondition '( _balances[_to] == __verifier_old_uint(_balances[_to]) + _value || !success )' might not hold at end of function.\nERC20::approve: OK\nERC20::transferFrom: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:105:5: Postcondition '( _balances[_to] == __verifier_old_uint(_balances[_to]) + _value || !success )' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n""]"
5,228.07399463653564,10,False,,"[""Interaction: 1\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:72:5: Postcondition 'success == ( _balances[msg.sender] >= _value )' might not hold at end of function.\nERC20::approve: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:89:5: Postcondition '_allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]) || !success' might not hold at end of function.\nERC20::transferFrom: OK\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 2\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:72:5: Postcondition 'success == ( _balances[msg.sender] >= _value )' might not hold at end of function.\nERC20::approve: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:89:5: Postcondition '_allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]) || success == false' might not hold at end of function.\nERC20::transferFrom: OK\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 3\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: OK\nERC20::approve: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:89:5: Postcondition '_allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]) || success == false' might not hold at end of function.\nERC20::transferFrom: OK\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 4\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: OK\nERC20::approve: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:88:5: Postcondition '_allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]) || success == false' might not hold at end of function.\nERC20::transferFrom: OK\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 5\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: OK\nERC20::approve: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:88:5: Postcondition '_allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]) + _value || success == false' might not hold at end of function.\nERC20::transferFrom: OK\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 6\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: OK\nERC20::approve: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:88:5: Postcondition '_allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]) + _value || success == false' might not hold at end of function.\nERC20::transferFrom: OK\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 7\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: OK\nERC20::approve: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:88:5: Postcondition '_allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]) + _value || success == false' might not hold at end of function.\nERC20::transferFrom: OK\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 8\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: OK\nERC20::approve: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:88:5: Postcondition '_allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]) + _value || success == false' might not hold at end of function.\nERC20::transferFrom: OK\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 9\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: OK\nERC20::approve: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:88:5: Postcondition '_allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]) + _value || success == false' might not hold at end of function.\nERC20::transferFrom: OK\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 10\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: OK\nERC20::approve: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:88:5: Postcondition '_allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]) + _value || success == false' might not hold at end of function.\nERC20::transferFrom: OK\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n""]"
6,23.43752956390381,0,True,"pragma solidity >=0.5.0;

contract ERC20 {

    mapping (address => uint) _balances;
    mapping (address => mapping (address => uint)) _allowed;
    uint public _totalSupply;

    /// @notice postcondition supply == _totalSupply
    function totalSupply() public view returns (uint256 supply);

    /// @notice postcondition ( _balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) - _value && msg.sender != _to ) || ( _balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) && msg.sender == _to ) || !success
    /// @notice postcondition ( _balances[_to] == __verifier_old_uint(_balances[_to]) + _value && msg.sender != _to ) || ( _balances[_to] == __verifier_old_uint(_balances[_to]) && msg.sender == _to ) || !success
    function transfer(address _to, uint256 _value) public returns (bool success);

    /// @notice postcondition ( _balances[_from] == __verifier_old_uint(_balances[_from]) - _value && _from != _to ) || ( _balances[_from] == __verifier_old_uint(_balances[_from]) && _from == _to ) || !success
    /// @notice postcondition ( _balances[_to] == __verifier_old_uint(_balances[_to]) + _value && _from != _to ) || ( _balances[_to] == __verifier_old_uint(_balances[_to]) && _from == _to ) || !success
    /// @notice postcondition ( _allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) - _value && success ) || ( _allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) && !success ) || _from == msg.sender
    /// @notice postcondition _allowed[_from][msg.sender] <= __verifier_old_uint(_allowed[_from][msg.sender]) || _from == msg.sender
    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);

    /// @notice postcondition _allowed[msg.sender][_spender] == _value && success || _allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]) && !success
    function approve(address _spender, uint256 _value) public returns (bool success);

    /// @notice postcondition _balances[_owner] == balance
    function balanceOf(address _owner) public view returns (uint256 balance);

    /// @notice postcondition _allowed[_owner][_spender] == remaining
    function allowance(address _owner, address _spender) public view returns (uint256 remaining);
}
",[]
7,48.25144648551941,1,True,"pragma solidity >=0.5.0;

contract ERC20 {

    mapping (address => uint) _balances;
    mapping (address => mapping (address => uint)) _allowed;
    uint public _totalSupply;

    /// @notice postcondition supply == _totalSupply
    function totalSupply() public view returns (uint256 supply);
    
    /// @notice postcondition ( _balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) - _value && msg.sender != _to ) || ( _balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) && msg.sender == _to ) || !success
    /// @notice postcondition ( _balances[_to] == __verifier_old_uint(_balances[_to]) + _value && msg.sender != _to ) || ( _balances[_to] == __verifier_old_uint(_balances[_to]) && msg.sender == _to ) || !success
    function transfer(address _to, uint256 _value) public returns (bool success);

    /// @notice postcondition ( _balances[_from] == __verifier_old_uint(_balances[_from]) - _value && _from != _to ) || ( _balances[_from] == __verifier_old_uint(_balances[_from]) && _from == _to ) || !success
    /// @notice postcondition ( _balances[_to] == __verifier_old_uint(_balances[_to]) + _value && _from != _to ) || ( _balances[_to] == __verifier_old_uint(_balances[_to]) && _from == _to ) || !success
    /// @notice postcondition ( _allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) - _value && success) || ( _allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) && !success) || _from == msg.sender
    /// @notice postcondition _allowed[_from][msg.sender] <= __verifier_old_uint(_allowed[_from][msg.sender]) || _from == msg.sender
    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);

    /// @notice postcondition _allowed[msg.sender][_spender] == _value && success || _allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]) && !success
    function approve(address _spender, uint256 _value) public returns (bool success);

    /// @notice postcondition _balances[_owner] == balance
    function balanceOf(address _owner) public view returns (uint256 balance);

    /// @notice postcondition _allowed[_owner][_spender] == remaining
    function allowance(address _owner, address _spender) public view returns (uint256 remaining);
}
","['Interaction: 1\nError while running verifier, details:\n----- Verifier output -----\nIllegal instruction\n\n---------------------------\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: OK\nERC20::approve: OK\nERC20::transferFrom: OK\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::allowance: ERROR\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n']"
8,23.108765125274658,0,True,"pragma solidity >=0.5.0;

contract ERC20 {

    mapping (address => uint) _balances;
    mapping (address => mapping (address => uint)) _allowed;
    uint public _totalSupply;

    /// @notice postcondition supply == _totalSupply
    function totalSupply() public view returns (uint256 supply);

    /// @notice postcondition ( _balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) - _value && msg.sender != _to ) || ( _balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) && msg.sender == _to )
    /// @notice postcondition ( _balances[_to] == __verifier_old_uint(_balances[_to]) + _value && msg.sender != _to ) || ( _balances[_to] == __verifier_old_uint(_balances[_to]) && msg.sender == _to )
    function transfer(address _to, uint256 _value) public returns (bool success);

    /// @notice postcondition ( _balances[_from] == __verifier_old_uint(_balances[_from]) - _value && _from != _to ) || ( _balances[_from] == __verifier_old_uint(_balances[_from]) && _from == _to )
    /// @notice postcondition ( _balances[_to] == __verifier_old_uint(_balances[_to]) + _value && _from != _to ) || ( _balances[_to] == __verifier_old_uint(_balances[_to]) && _from == _to )
    /// @notice postcondition ( _allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) - _value && success ) || ( _allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) && !success )
    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);

    /// @notice postcondition _allowed[msg.sender][_spender] == _value && success || _allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]) && !success
    function approve(address _spender, uint256 _value) public returns (bool success);

    /// @notice postcondition _balances[_owner] == balance
    function balanceOf(address _owner) public view returns (uint256 balance);

    /// @notice postcondition _allowed[_owner][_spender] == remaining
    function allowance(address _owner, address _spender) public view returns (uint256 remaining);
}
",[]
9,25.950852632522583,0,True,"pragma solidity >=0.5.0;

contract ERC20 {

    mapping (address => uint) _balances;
    mapping (address => mapping (address => uint)) _allowed;
    uint public _totalSupply;

    /// @notice postcondition supply == _totalSupply
    function totalSupply() public view returns (uint256 supply);

    /// @notice postcondition ( _balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) - _value && msg.sender != _to ) || ( _balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) && msg.sender == _to )
    /// @notice postcondition ( _balances[_to] == __verifier_old_uint(_balances[_to]) + _value && msg.sender != _to ) || ( _balances[_to] == __verifier_old_uint(_balances[_to]) && msg.sender == _to )
    function transfer(address _to, uint256 _value) public returns (bool success);

    /// @notice postcondition ( _balances[_from] == __verifier_old_uint(_balances[_from]) - _value && _from != _to ) || ( _balances[_from] == __verifier_old_uint(_balances[_from]) && _from == _to )
    /// @notice postcondition ( _balances[_to] == __verifier_old_uint(_balances[_to]) + _value && _from != _to ) || ( _balances[_to] == __verifier_old_uint(_balances[_to]) && _from == _to )
    /// @notice postcondition ( _allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) - _value && success ) || ( _allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) && !success )
    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);

    /// @notice postcondition _allowed[msg.sender][_spender] == _value || ( _allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]) && !success )
    function approve(address _spender, uint256 _value) public returns (bool success);

    /// @notice postcondition _balances[_owner] == balance
    function balanceOf(address _owner) public view returns (uint256 balance);

    /// @notice postcondition _allowed[_owner][_spender] == remaining
    function allowance(address _owner, address _spender) public view returns (uint256 remaining);
}
",[]
10,20.798072814941406,0,True,"pragma solidity >=0.5.0;

contract ERC20 {

    mapping (address => uint) _balances;
    mapping (address => mapping (address => uint)) _allowed;
    uint public _totalSupply;

    /// @notice postcondition supply == _totalSupply
    function totalSupply() public view returns (uint256 supply);

    /// @notice postcondition ( _balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) - _value && msg.sender != _to ) || ( _balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) && msg.sender == _to )
    /// @notice postcondition ( _balances[_to] == __verifier_old_uint(_balances[_to]) + _value && msg.sender != _to ) || ( _balances[_to] == __verifier_old_uint(_balances[_to]) && msg.sender == _to )
    function transfer(address _to, uint256 _value) public returns (bool success);

    /// @notice postcondition ( _balances[_from] == __verifier_old_uint(_balances[_from]) - _value && _from != _to ) || ( _balances[_from] == __verifier_old_uint(_balances[_from]) && _from == _to )
    /// @notice postcondition ( _balances[_to] == __verifier_old_uint(_balances[_to]) + _value && _from != _to ) || ( _balances[_to] == __verifier_old_uint(_balances[_to]) && _from == _to )
    /// @notice postcondition ( _allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) - _value && success ) || ( _allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) && !success )
    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);

    /// @notice postcondition _allowed[msg.sender][_spender] == _value && success || _allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]) && !success
    function approve(address _spender, uint256 _value) public returns (bool success);

    /// @notice postcondition _balances[_owner] == balance
    function balanceOf(address _owner) public view returns (uint256 balance);

    /// @notice postcondition _allowed[_owner][_spender] == remaining
    function allowance(address _owner, address _spender) public view returns (uint256 remaining);
}
",[]
