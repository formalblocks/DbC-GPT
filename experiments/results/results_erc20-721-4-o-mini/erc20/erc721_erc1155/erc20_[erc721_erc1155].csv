run,time_taken,iterations,verified,annotated_contract,status
1,262.34036564826965,10,False,,"[""Interaction: 1\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: OK\nERC20::approve: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:87:5: Postcondition '(_allowed[msg.sender][_spender] == _value && _value != 0) || (_allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]) && _value == 0)' might not hold at end of function.\nERC20::transferFrom: OK\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 2\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: OK\nERC20::approve: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:87:5: Postcondition '(_allowed[msg.sender][_spender] == _value && _value != 0) || (_allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]) && _value == 0)' might not hold at end of function.\nERC20::transferFrom: OK\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 3\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: OK\nERC20::approve: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:87:5: Postcondition '(_allowed[msg.sender][_spender] == _value && _value != 0) || (_allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]) && _value == 0)' might not hold at end of function.\nERC20::transferFrom: OK\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 4\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: OK\nERC20::approve: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:87:5: Postcondition '(_allowed[msg.sender][_spender] == _value && _value != 0) || (_allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]) && _value == 0)' might not hold at end of function.\nERC20::transferFrom: OK\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 5\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: TIMEOUT\nERC20::approve: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:87:5: Postcondition '(_allowed[msg.sender][_spender] == _value && _value != 0) || (_allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]) && _value == 0)' might not hold at end of function.\nERC20::transferFrom: OK\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\n[event] IERC20::Approval: TIMEOUT\nIERC20::transfer: TIMEOUT\nIERC20::[implicit_constructor]: TIMEOUT\nSafeMath::sub: TIMEOUT\nInconclusive results.\nErrors were found by the verifier.\n\n"", ""Interaction: 6\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: OK\nERC20::approve: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:87:5: Postcondition '(_allowed[msg.sender][_spender] == _value && _value != 0) || (_allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]) && _value == 0)' might not hold at end of function.\nERC20::transferFrom: OK\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 7\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: OK\nERC20::approve: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:87:5: Postcondition '(_allowed[msg.sender][_spender] == _value && _value != 0) || (_allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]) && _value == 0)' might not hold at end of function.\nERC20::transferFrom: OK\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 8\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: OK\nERC20::approve: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:87:5: Postcondition '(_allowed[msg.sender][_spender] == _value && _value != 0) || (_allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]) && _value == 0)' might not hold at end of function.\nERC20::transferFrom: OK\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 9\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: OK\nERC20::approve: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:87:5: Postcondition '(_allowed[msg.sender][_spender] == _value && _value != 0) || (_allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]) && _value == 0)' might not hold at end of function.\nERC20::transferFrom: OK\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 10\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: OK\nERC20::approve: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:87:5: Postcondition '(_allowed[msg.sender][_spender] == _value && _value != 0) || (_allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]) && _value == 0)' might not hold at end of function.\nERC20::transferFrom: OK\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n""]"
2,165.89833045005798,10,False,,"[""Interaction: 5\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:71:5: Postcondition '_balances[_to] == __verifier_old_uint(_balances[_to]) + _value' might not hold at end of function.\nERC20::approve: OK\nERC20::transferFrom: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:104:5: Postcondition '_balances[_to] == __verifier_old_uint(_balances[_to]) + _value' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n""]"
3,30.452049493789673,0,True,"pragma solidity >=0.5.0;

contract ERC20 {

    mapping (address => uint) _balances;
    mapping (address => mapping (address => uint)) _allowed;
    uint public _totalSupply;

    /// @notice postcondition supply == _totalSupply
    function totalSupply() public view returns (uint256 supply);

    /// @notice postcondition ( _balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) - _value && msg.sender != _to ) || ( msg.sender == _to )
    /// @notice postcondition ( _balances[_to] == __verifier_old_uint(_balances[_to]) + _value && msg.sender != _to ) || ( msg.sender == _to )
    function transfer(address _to, uint256 _value) public returns (bool success);

    /// @notice postcondition ( _balances[_from] == __verifier_old_uint(_balances[_from]) - _value && _from != _to ) || (_from == _to)
    /// @notice postcondition ( _balances[_to] == __verifier_old_uint(_balances[_to]) + _value && _from != _to ) || (_from == _to)
    /// @notice postcondition _allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) - _value
    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);

    /// @notice postcondition (_allowed[msg.sender][_spender] == _value && success) || (_allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]) && !success)
    function approve(address _spender, uint256 _value) public returns (bool success);

    /// @notice postcondition _balances[_owner] == balance
    function balanceOf(address _owner) public view returns (uint256 balance);

    /// @notice postcondition remaining == _allowed[_owner][_spender]
    function allowance(address _owner, address _spender) public view returns (uint256 remaining);
}
",[]
4,228.5738182067871,10,False,,"[""Interaction: 1\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: OK\nERC20::approve: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:87:5: Postcondition '(_allowed[msg.sender][_spender] == _value && __verifier_old_uint(_allowed[msg.sender][_spender]) != _value) || (_allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]) && _value == 0)' might not hold at end of function.\nERC20::transferFrom: OK\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 4\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: OK\nERC20::approve: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:87:5: Postcondition '(_allowed[msg.sender][_spender] == _value && __verifier_old_uint(_allowed[msg.sender][_spender]) != _value) || (_allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]) && _value == 0)' might not hold at end of function.\nERC20::transferFrom: OK\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 5\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: OK\nERC20::approve: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:87:5: Postcondition '(_allowed[msg.sender][_spender] == _value && __verifier_old_uint(_allowed[msg.sender][_spender]) != _value) || (_allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]) && _value == 0)' might not hold at end of function.\nERC20::transferFrom: OK\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 6\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: OK\nERC20::approve: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:87:5: Postcondition '(_allowed[msg.sender][_spender] == _value && __verifier_old_uint(_allowed[msg.sender][_spender]) != _value) || (_allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]) && _value == 0)' might not hold at end of function.\nERC20::transferFrom: OK\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 7\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: OK\nERC20::approve: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:87:5: Postcondition '(_allowed[msg.sender][_spender] == _value && __verifier_old_uint(_allowed[msg.sender][_spender]) != _value) || (_allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]) && _value == 0)' might not hold at end of function.\nERC20::transferFrom: OK\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 8\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: OK\nERC20::approve: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:87:5: Postcondition '(_allowed[msg.sender][_spender] == _value && __verifier_old_uint(_allowed[msg.sender][_spender]) != _value) || (_allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]) && _value == 0)' might not hold at end of function.\nERC20::transferFrom: OK\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 9\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: OK\nERC20::approve: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:87:5: Postcondition '(_allowed[msg.sender][_spender] == _value && __verifier_old_uint(_allowed[msg.sender][_spender]) != _value) || (_allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]) && _value == 0)' might not hold at end of function.\nERC20::transferFrom: OK\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 10\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: OK\nERC20::approve: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:87:5: Postcondition '(_allowed[msg.sender][_spender] == _value && __verifier_old_uint(_allowed[msg.sender][_spender]) != _value) || (_allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]) && _value == 0)' might not hold at end of function.\nERC20::transferFrom: OK\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n""]"
5,29.710687398910522,0,True,"pragma solidity >=0.5.0;

contract ERC20 {

    mapping (address => uint) _balances;
    mapping (address => mapping (address => uint)) _allowed;
    uint public _totalSupply;

    /// @notice postcondition supply == _totalSupply
    function totalSupply() public view returns (uint256 supply);

    /// @notice postcondition ( _balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) - _value && msg.sender != _to ) || ( msg.sender == _to )
    /// @notice postcondition ( _balances[_to] == __verifier_old_uint(_balances[_to]) + _value && msg.sender != _to ) || ( msg.sender == _to )
    function transfer(address _to, uint256 _value) public returns (bool success);

    /// @notice postcondition ( _balances[_from] == __verifier_old_uint(_balances[_from]) - _value && _from != _to ) || (_from == _to)
    /// @notice postcondition ( _balances[_to] == __verifier_old_uint(_balances[_to]) + _value && _from != _to ) || (_from == _to)
    /// @notice postcondition _allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) - _value
    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);

    /// @notice postcondition (_allowed[msg.sender][_spender] == _value && success) || (_allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]) && !success)
    function approve(address _spender, uint256 _value) public returns (bool success);

    /// @notice postcondition _balances[_owner] == balance
    function balanceOf(address _owner) public view returns (uint256 balance);

    /// @notice postcondition remaining == _allowed[_owner][_spender]
    function allowance(address _owner, address _spender) public view returns (uint256 remaining);
}
",[]
6,258.0069992542267,10,False,,"[""Interaction: 1\nERC20::totalSupply: TIMEOUT\nERC20::balanceOf: TIMEOUT\nERC20::allowance: OK\nERC20::transfer: OK\nERC20::approve: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:87:5: Postcondition '(_allowed[msg.sender][_spender] == _value && __verifier_old_uint(_allowed[msg.sender][_spender]) != _value) || (_allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]) && _spender == msg.sender)' might not hold at end of function.\nERC20::transferFrom: OK\nERC20::increaseAllowance: TIMEOUT\nERC20::decreaseAllowance: OK\nERC20::_burnFrom: TIMEOUT\nERC20::[implicit_constructor]: TIMEOUT\n[event] IERC20::Transfer: TIMEOUT\n[event] IERC20::Approval: TIMEOUT\nIERC20::transfer: TIMEOUT\nIERC20::transferFrom: TIMEOUT\nIERC20::totalSupply: TIMEOUT\nIERC20::balanceOf: TIMEOUT\nIERC20::[implicit_constructor]: TIMEOUT\nSafeMath::mul: TIMEOUT\nInconclusive results.\nErrors were found by the verifier.\n\n"", ""Interaction: 2\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: OK\nERC20::approve: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:87:5: Postcondition '(_allowed[msg.sender][_spender] == _value && __verifier_old_uint(_allowed[msg.sender][_spender]) != _value) || (_allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]) && _spender == msg.sender)' might not hold at end of function.\nERC20::transferFrom: OK\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 4\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: OK\nERC20::approve: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:87:5: Postcondition '(_allowed[msg.sender][_spender] == _value && __verifier_old_uint(_allowed[msg.sender][_spender]) != _value) || (_allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]) && _spender == msg.sender)' might not hold at end of function.\nERC20::transferFrom: OK\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: TIMEOUT\n[event] IERC20::Approval: TIMEOUT\nIERC20::transfer: TIMEOUT\nIERC20::approve: TIMEOUT\nIERC20::transferFrom: TIMEOUT\nIERC20::totalSupply: TIMEOUT\nIERC20::balanceOf: TIMEOUT\nIERC20::[implicit_constructor]: TIMEOUT\nSafeMath::sub: TIMEOUT\nSafeMath::mod: TIMEOUT\nSafeMath::[implicit_constructor]: TIMEOUT\nInconclusive results.\nErrors were found by the verifier.\n\n"", ""Interaction: 6\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: OK\nERC20::approve: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:87:5: Postcondition '(_allowed[msg.sender][_spender] == _value && __verifier_old_uint(_allowed[msg.sender][_spender]) != _value) || (_allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]) && _spender == msg.sender)' might not hold at end of function.\nERC20::transferFrom: OK\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 8\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: OK\nERC20::approve: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:87:5: Postcondition '(_allowed[msg.sender][_spender] == _value && __verifier_old_uint(_allowed[msg.sender][_spender]) != _value) || (_allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]) && _spender == msg.sender)' might not hold at end of function.\nERC20::transferFrom: OK\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n""]"
7,25.978322505950928,0,True,"pragma solidity >=0.5.0;

contract ERC20 {

    mapping (address => uint) _balances;
    mapping (address => mapping (address => uint)) _allowed;
    uint public _totalSupply;

    /// @notice postcondition supply == _totalSupply
    function totalSupply() public view returns (uint256 supply);

    /// @notice postcondition ( _balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) - _value && msg.sender != _to ) || ( msg.sender == _to )
    /// @notice postcondition ( _balances[_to] == __verifier_old_uint(_balances[_to]) + _value && msg.sender != _to ) || ( msg.sender == _to )
    function transfer(address _to, uint256 _value) public returns (bool success);

    /// @notice postcondition ( _balances[_from] == __verifier_old_uint(_balances[_from]) - _value && _from != _to ) || (_from == _to)
    /// @notice postcondition ( _balances[_to] == __verifier_old_uint(_balances[_to]) + _value && _from != _to ) || (_from == _to)
    /// @notice postcondition _allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) - _value
    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);

    /// @notice postcondition (_allowed[msg.sender][_spender] == _value && success) || (_allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]) && !success)
    function approve(address _spender, uint256 _value) public returns (bool success);

    /// @notice postcondition _balances[_owner] == balance
    function balanceOf(address _owner) public view returns (uint256 balance);

    /// @notice postcondition remaining == _allowed[_owner][_spender]
    function allowance(address _owner, address _spender) public view returns (uint256 remaining);
}
",[]
8,344.9335434436798,10,False,,"[""Interaction: 1\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: TIMEOUT\nERC20::approve: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:87:5: Postcondition '(_allowed[msg.sender][_spender] == _value && _value != 0) || (_allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]) && _value == 0)' might not hold at end of function.\nERC20::transferFrom: OK\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nInconclusive results.\nErrors were found by the verifier.\n\n"", ""Interaction: 2\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: OK\nERC20::approve: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:87:5: Postcondition '(_allowed[msg.sender][_spender] == _value && _value != 0) || (_allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]) && _value == 0)' might not hold at end of function.\nERC20::transferFrom: OK\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 3\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: OK\nERC20::approve: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:87:5: Postcondition '(_allowed[msg.sender][_spender] == _value && _value != 0) || (_allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]) && _value == 0)' might not hold at end of function.\nERC20::transferFrom: OK\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 5\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: OK\nERC20::approve: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:87:5: Postcondition '(_allowed[msg.sender][_spender] == _value && _value != 0) || (_allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]) && _value == 0)' might not hold at end of function.\nERC20::transferFrom: OK\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: TIMEOUT\nSafeMath::add: TIMEOUT\nInconclusive results.\nErrors were found by the verifier.\n\n"", ""Interaction: 6\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: OK\nERC20::approve: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:87:5: Postcondition '(_allowed[msg.sender][_spender] == _value && _value != 0) || (_allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]) && _value == 0)' might not hold at end of function.\nERC20::transferFrom: OK\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 7\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: OK\nERC20::approve: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:87:5: Postcondition '(_allowed[msg.sender][_spender] == _value && _value != 0) || (_allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]) && _value == 0)' might not hold at end of function.\nERC20::transferFrom: OK\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 8\nERC20::totalSupply: OK\nERC20::balanceOf: OK\nERC20::allowance: OK\nERC20::transfer: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:71:5: Postcondition '_balances[_to] == __verifier_old_uint(_balances[_to]) + _value' might not hold at end of function.\nERC20::approve: OK\nERC20::transferFrom: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:104:5: Postcondition '_balances[_to] == __verifier_old_uint(_balances[_to]) + _value' might not hold at end of function.\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nErrors were found by the verifier.\n\n"", ""Interaction: 10\nERC20::totalSupply: OK\nERC20::balanceOf: TIMEOUT\nERC20::allowance: OK\nERC20::transfer: OK\nERC20::approve: ERROR\n - ./solc_verify_generator/ERC20/imp/ERC20_merge.sol:87:5: Postcondition '(_allowed[msg.sender][_spender] == _value && _value != 0) || (_allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]) && _value == 0)' might not hold at end of function.\nERC20::transferFrom: OK\nERC20::increaseAllowance: OK\nERC20::decreaseAllowance: OK\nERC20::[implicit_constructor]: OK\nIERC20::[implicit_constructor]: OK\nInconclusive results.\nErrors were found by the verifier.\n\n""]"
9,27.516796350479126,0,True,"pragma solidity >=0.5.0;

contract ERC20 {

    mapping (address => uint) _balances;
    mapping (address => mapping (address => uint)) _allowed;
    uint public _totalSupply;

    /// @notice postcondition supply == _totalSupply
    function totalSupply() public view returns (uint256 supply);

    /// @notice postcondition ( _balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) - _value && msg.sender != _to ) || ( msg.sender == _to )
    /// @notice postcondition ( _balances[_to] == __verifier_old_uint(_balances[_to]) + _value && msg.sender != _to ) || ( msg.sender == _to )
    function transfer(address _to, uint256 _value) public returns (bool success);

    /// @notice postcondition ( _balances[_from] == __verifier_old_uint(_balances[_from]) - _value && _from != _to ) || (_from == _to)
    /// @notice postcondition ( _balances[_to] == __verifier_old_uint(_balances[_to]) + _value && _from != _to ) || (_from == _to)
    /// @notice postcondition _allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) - _value
    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);

    /// @notice postcondition (_allowed[msg.sender][_spender] == _value && success) || (_allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]) && !success)
    function approve(address _spender, uint256 _value) public returns (bool success);

    /// @notice postcondition _balances[_owner] == balance
    function balanceOf(address _owner) public view returns (uint256 balance);

    /// @notice postcondition remaining == _allowed[_owner][_spender]
    function allowance(address _owner, address _spender) public view returns (uint256 remaining);
}
",[]
10,63.4625198841095,1,True,"pragma solidity >=0.5.0;

contract ERC20 {

    mapping (address => uint) _balances;
    mapping (address => mapping (address => uint)) _allowed;
    uint public _totalSupply;

    /// @notice postcondition supply == _totalSupply
    function totalSupply() public view returns (uint256 supply);

    /// @notice postcondition ( _balances[msg.sender] == __verifier_old_uint(_balances[msg.sender]) - _value && msg.sender != _to ) || ( msg.sender == _to )
    /// @notice postcondition ( _balances[_to] == __verifier_old_uint(_balances[_to]) + _value && msg.sender != _to ) || ( msg.sender == _to )
    function transfer(address _to, uint256 _value) public returns (bool success);

    /// @notice postcondition ( _balances[_from] == __verifier_old_uint(_balances[_from]) - _value && _from != _to ) || (_from == _to)
    /// @notice postcondition ( _balances[_to] == __verifier_old_uint(_balances[_to]) + _value && _from != _to ) || (_from == _to)
    /// @notice postcondition _allowed[_from][msg.sender] == __verifier_old_uint(_allowed[_from][msg.sender]) - _value
    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);

    /// @notice postcondition (_allowed[msg.sender][_spender] == _value && success) || (_allowed[msg.sender][_spender] == __verifier_old_uint(_allowed[msg.sender][_spender]) && !success)
    function approve(address _spender, uint256 _value) public returns (bool success);

    /// @notice postcondition _balances[_owner] == balance
    function balanceOf(address _owner) public view returns (uint256 balance);

    /// @notice postcondition remaining == _allowed[_owner][_spender]
    function allowance(address _owner, address _spender) public view returns (uint256 remaining);
}
",[]
