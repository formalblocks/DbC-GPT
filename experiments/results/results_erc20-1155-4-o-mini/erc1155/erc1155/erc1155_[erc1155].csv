run,time_taken,iterations,verified,annotated_contract,status
1,29.028276205062866,0,True,"pragma solidity >= 0.5.0;

contract ERC1155  {

    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);
    event TransferBatch(address indexed operator, address indexed from, address indexed to, uint256[] ids, uint256[] values);
    event ApprovalForAll(address indexed account, address indexed operator, bool approved);
    event URI(string value, uint256 indexed id);

    mapping (uint256 => mapping(address => uint256)) private _balances;
    mapping (address => mapping(address => bool)) private _operatorApprovals;
    string private _uri;

    /// @notice postcondition balance == _balances[_id][_owner] 
    function balanceOf(address _owner, uint256 _id) public view returns (uint256 balance);

    /// @notice postcondition batchBalances.length == _owners.length 
    /// @notice postcondition batchBalances.length == _ids.length
    /// @notice postcondition forall (uint x) !(0 <= x && x < batchBalances.length) || batchBalances[x] == _balances[_ids[x]][_owners[x]]
    function balanceOfBatch(address[] memory _owners, uint256[] memory _ids) public view returns (uint256[] memory batchBalances);

    /// @notice postcondition _operatorApprovals[msg.sender][_operator] == _approved 
    function setApprovalForAll(address _operator, bool _approved) public;

    /// @notice postcondition _operatorApprovals[_owner][_operator] == approved
    function isApprovedForAll(address _owner, address _operator) public view returns (bool approved);

    /// @notice postcondition _to != address(0) 
    /// @notice postcondition _operatorApprovals[_from][msg.sender] || _from == msg.sender
    /// @notice postcondition __verifier_old_uint(_balances[_id][_from]) >= _value    
    /// @notice postcondition _balances[_id][_from] == __verifier_old_uint(_balances[_id][_from]) - _value
    /// @notice postcondition _balances[_id][_to] == __verifier_old_uint(_balances[_id][_to]) + _value
    function safeTransferFrom(address _from, address _to, uint256 _id, uint256 _value, bytes memory _data) public;

    /// @notice postcondition forall (uint i) !(0 <= i && i < _ids.length && _from != _to) || (_balances[_ids[i]][_to] == __verifier_old_uint(_balances[_ids[i]][_to]) + _values[i])
    /// @notice postcondition forall (uint i) !(0 <= i && i < _ids.length && _from != _to) || (_balances[_ids[i]][_from] == __verifier_old_uint(_balances[_ids[i]][_from]) - _values[i])
    function safeBatchTransferFrom(address _from, address _to, uint256[] memory _ids, uint256[] memory _values, bytes memory _data) public;
}
",[]
2,357.53285241127014,10,False,,"[""Interaction: 3\nContext::[implicit_constructor]: OK\nERC1155::[constructor]: OK\nERC1155::uri: OK\nERC1155::balanceOf: OK\nERC1155::balanceOfBatch: OK\nERC1155::setApprovalForAll: OK\nERC1155::isApprovedForAll: OK\nERC1155::safeTransferFrom: OK\nERC1155::safeBatchTransferFrom: ERROR\n - ./solc_verify_generator/ERC1155/imp/ERC1155_merge.sol:179:5: Postcondition 'forall (uint i) !(0 <= i && i < _ids.length) || _balances[_ids[i]][_from] == __verifier_old_uint(_balances[_ids[i]][_from]) - _values[i]' might not hold at end of function.\n - ./solc_verify_generator/ERC1155/imp/ERC1155_merge.sol:179:5: Postcondition 'forall (uint i) !(0 <= i && i < _ids.length) || (_from == _to && _values[i] == 0)' might not hold at end of function.\nERC1155::[receive_ether_selfdestruct]: OK\nERC165::supportsInterface: OK\nERC165::[implicit_constructor]: OK\nIERC1155::[implicit_constructor]: OK\nIERC1155MetadataURI::[implicit_constructor]: OK\nIERC1155Receiver::[implicit_constructor]: OK\nIERC165::[implicit_constructor]: OK\nUse --show-warnings to see 20 warnings.\nErrors were found by the verifier.\n\n"", ""Interaction: 4\nContext::[implicit_constructor]: OK\nERC1155::[constructor]: OK\nERC1155::uri: OK\nERC1155::balanceOf: OK\nERC1155::balanceOfBatch: OK\nERC1155::setApprovalForAll: OK\nERC1155::isApprovedForAll: OK\nERC1155::safeTransferFrom: OK\nERC1155::safeBatchTransferFrom: ERROR\n - ./solc_verify_generator/ERC1155/imp/ERC1155_merge.sol:179:5: Postcondition 'forall (uint i) !(0 <= i && i < _ids.length) || _balances[_ids[i]][_from] == __verifier_old_uint(_balances[_ids[i]][_from]) - _values[i]' might not hold at end of function.\n - ./solc_verify_generator/ERC1155/imp/ERC1155_merge.sol:179:5: Postcondition 'forall (uint i) !(0 <= i && i < _ids.length) || (_from == _to && _values[i] == 0)' might not hold at end of function.\nERC1155::[receive_ether_selfdestruct]: OK\nERC165::supportsInterface: OK\nERC165::[implicit_constructor]: OK\nIERC1155::[implicit_constructor]: OK\nIERC1155MetadataURI::[implicit_constructor]: OK\nIERC1155Receiver::[implicit_constructor]: OK\nIERC165::[implicit_constructor]: OK\nUse --show-warnings to see 20 warnings.\nErrors were found by the verifier.\n\n"", ""Interaction: 5\nContext::[implicit_constructor]: OK\nERC1155::[constructor]: OK\nERC1155::uri: OK\nERC1155::balanceOf: OK\nERC1155::balanceOfBatch: OK\nERC1155::setApprovalForAll: OK\nERC1155::isApprovedForAll: OK\nERC1155::safeTransferFrom: OK\nERC1155::safeBatchTransferFrom: ERROR\n - ./solc_verify_generator/ERC1155/imp/ERC1155_merge.sol:179:5: Postcondition 'forall (uint i) !(0 <= i && i < _ids.length) || _balances[_ids[i]][_from] == __verifier_old_uint(_balances[_ids[i]][_from]) - _values[i]' might not hold at end of function.\n - ./solc_verify_generator/ERC1155/imp/ERC1155_merge.sol:179:5: Postcondition 'forall (uint i) !(0 <= i && i < _ids.length) || (_from == _to && _values[i] == 0)' might not hold at end of function.\nERC1155::[receive_ether_selfdestruct]: OK\nERC165::supportsInterface: OK\nERC165::[implicit_constructor]: OK\nIERC1155::[implicit_constructor]: OK\nIERC1155MetadataURI::[implicit_constructor]: OK\nIERC1155Receiver::[implicit_constructor]: OK\nIERC165::[implicit_constructor]: OK\nUse --show-warnings to see 20 warnings.\nErrors were found by the verifier.\n\n"", ""Interaction: 6\nContext::[implicit_constructor]: OK\nERC1155::[constructor]: OK\nERC1155::uri: OK\nERC1155::balanceOf: OK\nERC1155::balanceOfBatch: OK\nERC1155::setApprovalForAll: OK\nERC1155::isApprovedForAll: OK\nERC1155::safeTransferFrom: OK\nERC1155::safeBatchTransferFrom: ERROR\n - ./solc_verify_generator/ERC1155/imp/ERC1155_merge.sol:179:5: Postcondition 'forall (uint i) !(0 <= i && i < _ids.length) || (_balances[_ids[i]][_from] == __verifier_old_uint(_balances[_ids[i]][_from]) - _values[i] && _from != _to)' might not hold at end of function.\n - ./solc_verify_generator/ERC1155/imp/ERC1155_merge.sol:179:5: Postcondition 'forall (uint i) !(0 <= i && i < _ids.length) || (_balances[_ids[i]][_to] == __verifier_old_uint(_balances[_ids[i]][_to]) + _values[i] && _from != _to)' might not hold at end of function.\n - ./solc_verify_generator/ERC1155/imp/ERC1155_merge.sol:179:5: Postcondition 'forall (uint i) !(0 <= i && i < _ids.length) || (_from == _to && _values[i] == 0)' might not hold at end of function.\nERC1155::[receive_ether_selfdestruct]: OK\nERC165::supportsInterface: OK\nERC165::[implicit_constructor]: OK\nIERC1155::[implicit_constructor]: OK\nIERC1155MetadataURI::[implicit_constructor]: OK\nIERC1155Receiver::[implicit_constructor]: OK\nIERC165::[implicit_constructor]: OK\nUse --show-warnings to see 20 warnings.\nErrors were found by the verifier.\n\n"", ""Interaction: 7\nContext::[implicit_constructor]: OK\nERC1155::[constructor]: OK\nERC1155::uri: OK\nERC1155::balanceOf: OK\nERC1155::balanceOfBatch: OK\nERC1155::setApprovalForAll: OK\nERC1155::isApprovedForAll: OK\nERC1155::safeTransferFrom: OK\nERC1155::safeBatchTransferFrom: ERROR\n - ./solc_verify_generator/ERC1155/imp/ERC1155_merge.sol:179:5: Postcondition 'forall (uint i) !(0 <= i && i < _ids.length) || (_balances[_ids[i]][_from] == __verifier_old_uint(_balances[_ids[i]][_from]) - _values[i] && _from != _to)' might not hold at end of function.\n - ./solc_verify_generator/ERC1155/imp/ERC1155_merge.sol:179:5: Postcondition 'forall (uint i) !(0 <= i && i < _ids.length) || (_balances[_ids[i]][_to] == __verifier_old_uint(_balances[_ids[i]][_to]) + _values[i] && _from != _to)' might not hold at end of function.\n - ./solc_verify_generator/ERC1155/imp/ERC1155_merge.sol:179:5: Postcondition 'forall (uint i) !(0 <= i && i < _ids.length) || (_from == _to && _values[i] == 0)' might not hold at end of function.\nERC1155::[receive_ether_selfdestruct]: OK\nERC165::supportsInterface: OK\nERC165::[implicit_constructor]: OK\nIERC1155::[implicit_constructor]: OK\nIERC1155MetadataURI::[implicit_constructor]: OK\nIERC1155Receiver::[implicit_constructor]: OK\nIERC165::[implicit_constructor]: OK\nUse --show-warnings to see 20 warnings.\nErrors were found by the verifier.\n\n"", ""Interaction: 8\nContext::[implicit_constructor]: OK\nERC1155::[constructor]: OK\nERC1155::uri: OK\nERC1155::balanceOf: OK\nERC1155::balanceOfBatch: OK\nERC1155::setApprovalForAll: OK\nERC1155::isApprovedForAll: OK\nERC1155::safeTransferFrom: OK\nERC1155::safeBatchTransferFrom: ERROR\n - ./solc_verify_generator/ERC1155/imp/ERC1155_merge.sol:179:5: Postcondition 'forall (uint i) !(0 <= i && i < _ids.length) || (_balances[_ids[i]][_from] == __verifier_old_uint(_balances[_ids[i]][_from]) - _values[i] && _from != _to)' might not hold at end of function.\n - ./solc_verify_generator/ERC1155/imp/ERC1155_merge.sol:179:5: Postcondition 'forall (uint i) !(0 <= i && i < _ids.length) || (_balances[_ids[i]][_to] == __verifier_old_uint(_balances[_ids[i]][_to]) + _values[i] && _from != _to)' might not hold at end of function.\n - ./solc_verify_generator/ERC1155/imp/ERC1155_merge.sol:179:5: Postcondition 'forall (uint i) !(0 <= i && i < _ids.length) || (_from == _to && _values[i] == 0)' might not hold at end of function.\nERC1155::[receive_ether_selfdestruct]: OK\nERC165::supportsInterface: OK\nERC165::[implicit_constructor]: OK\nIERC1155::[implicit_constructor]: OK\nIERC1155MetadataURI::[implicit_constructor]: OK\nIERC1155Receiver::[implicit_constructor]: OK\nIERC165::[implicit_constructor]: OK\nUse --show-warnings to see 20 warnings.\nErrors were found by the verifier.\n\n"", ""Interaction: 9\nContext::[implicit_constructor]: OK\nERC1155::[constructor]: OK\nERC1155::uri: OK\nERC1155::balanceOf: OK\nERC1155::balanceOfBatch: OK\nERC1155::setApprovalForAll: OK\nERC1155::isApprovedForAll: OK\nERC1155::safeTransferFrom: OK\nERC1155::safeBatchTransferFrom: ERROR\n - ./solc_verify_generator/ERC1155/imp/ERC1155_merge.sol:179:5: Postcondition 'forall (uint i) !(0 <= i && i < _ids.length) || (_balances[_ids[i]][_from] == __verifier_old_uint(_balances[_ids[i]][_from]) - _values[i] && _from != _to)' might not hold at end of function.\n - ./solc_verify_generator/ERC1155/imp/ERC1155_merge.sol:179:5: Postcondition 'forall (uint i) !(0 <= i && i < _ids.length) || (_balances[_ids[i]][_to] == __verifier_old_uint(_balances[_ids[i]][_to]) + _values[i] && _from != _to)' might not hold at end of function.\n - ./solc_verify_generator/ERC1155/imp/ERC1155_merge.sol:179:5: Postcondition 'forall (uint i) !(0 <= i && i < _ids.length) || (_from == _to && _values[i] == 0)' might not hold at end of function.\nERC1155::[receive_ether_selfdestruct]: OK\nERC165::supportsInterface: OK\nERC165::[implicit_constructor]: OK\nIERC1155::[implicit_constructor]: OK\nIERC1155MetadataURI::[implicit_constructor]: OK\nIERC1155Receiver::[implicit_constructor]: OK\nIERC165::[implicit_constructor]: OK\nUse --show-warnings to see 20 warnings.\nErrors were found by the verifier.\n\n"", ""Interaction: 10\nContext::[implicit_constructor]: OK\nERC1155::[constructor]: OK\nERC1155::uri: OK\nERC1155::balanceOf: OK\nERC1155::balanceOfBatch: OK\nERC1155::setApprovalForAll: OK\nERC1155::isApprovedForAll: OK\nERC1155::safeTransferFrom: OK\nERC1155::safeBatchTransferFrom: ERROR\n - ./solc_verify_generator/ERC1155/imp/ERC1155_merge.sol:179:5: Postcondition 'forall (uint i) !(0 <= i && i < _ids.length) || (_balances[_ids[i]][_from] == __verifier_old_uint(_balances[_ids[i]][_from]) - _values[i] && _from != _to)' might not hold at end of function.\n - ./solc_verify_generator/ERC1155/imp/ERC1155_merge.sol:179:5: Postcondition 'forall (uint i) !(0 <= i && i < _ids.length) || (_balances[_ids[i]][_to] == __verifier_old_uint(_balances[_ids[i]][_to]) + _values[i] && _from != _to)' might not hold at end of function.\n - ./solc_verify_generator/ERC1155/imp/ERC1155_merge.sol:179:5: Postcondition 'forall (uint i) !(0 <= i && i < _ids.length) || (_from == _to && _values[i] == 0)' might not hold at end of function.\nERC1155::[receive_ether_selfdestruct]: OK\nERC165::supportsInterface: OK\nERC165::[implicit_constructor]: OK\nIERC1155::[implicit_constructor]: OK\nIERC1155MetadataURI::[implicit_constructor]: OK\nIERC1155Receiver::[implicit_constructor]: OK\nIERC165::[implicit_constructor]: OK\nUse --show-warnings to see 20 warnings.\nErrors were found by the verifier.\n\n""]"
3,23.550419569015503,0,True,"pragma solidity >= 0.5.0;

contract ERC1155  {
    /// @notice postcondition _balances[_id][_owner] == balance  
    function balanceOf(address _owner, uint256 _id) public view returns (uint256 balance);

    /// @notice postcondition batchBalances.length == _owners.length 
    /// @notice postcondition batchBalances.length == _ids.length
    /// @notice postcondition forall (uint x) !( 0 <= x &&  x < batchBalances.length ) || batchBalances[x] == _balances[_ids[x]][_owners[x]]
    function balanceOfBatch(address[] memory _owners, uint256[] memory _ids) public view returns (uint256[] memory batchBalances);

    /// @notice postcondition _operatorApprovals[msg.sender][_operator] == _approved 
    function setApprovalForAll(address _operator, bool _approved) public;

    /// @notice postcondition _operatorApprovals[_owner][_operator] == approved
    function isApprovedForAll(address _owner, address _operator) public view returns (bool approved);

    /// @notice postcondition _to != address(0) 
    /// @notice postcondition _operatorApprovals[_from][msg.sender] || _from == msg.sender
    /// @notice postcondition __verifier_old_uint(_balances[_id][_from]) >= _value    
    /// @notice postcondition _balances[_id][_from] == __verifier_old_uint(_balances[_id][_from]) - _value
    /// @notice postcondition _balances[_id][_to] == __verifier_old_uint(_balances[_id][_to]) + _value
    function safeTransferFrom(address _from, address _to, uint256 _id, uint256 _value, bytes memory _data) public;

    /// @notice postcondition forall (uint i) !(0 <= i && i < _ids.length && _from != _to) || (_balances[_ids[i]][_to] == __verifier_old_uint(_balances[_ids[i]][_to]) + _values[i])
    /// @notice postcondition forall (uint i) !(0 <= i && i < _ids.length && _from != _to) || (_balances[_ids[i]][_from] == __verifier_old_uint(_balances[_ids[i]][_from]) - _values[i])
    function safeBatchTransferFrom(address _from, address _to, uint256[] memory _ids, uint256[] memory _values, bytes memory _data) public;
}
",[]
4,30.879183769226074,0,True,"pragma solidity >= 0.5.0;

contract ERC1155  {

    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);
    event TransferBatch(address indexed operator, address indexed from, address indexed to, uint256[] ids, uint256[] values);
    event ApprovalForAll(address indexed account, address indexed operator, bool approved);
    event URI(string value, uint256 indexed id);

    mapping (uint256 => mapping(address => uint256)) private _balances;
    mapping (address => mapping(address => bool)) private _operatorApprovals;
    string private _uri;

    /// @notice postcondition balance == _balances[_id][_owner]
    function balanceOf(address _owner, uint256 _id) public view returns (uint256 balance);

    /// @notice postcondition batchBalances.length == _owners.length 
    /// @notice postcondition batchBalances.length == _ids.length
    /// @notice postcondition forall (uint x) !(0 <= x && x < batchBalances.length) || batchBalances[x] == _balances[_ids[x]][_owners[x]]
    function balanceOfBatch(address[] memory _owners, uint256[] memory _ids) public view returns (uint256[] memory batchBalances);

    /// @notice postcondition _operatorApprovals[msg.sender][_operator] == _approved
    function setApprovalForAll(address _operator, bool _approved) public;

    /// @notice postcondition _operatorApprovals[_owner][_operator] == approved
    function isApprovedForAll(address _owner, address _operator) public view returns (bool approved);

    /// @notice postcondition _to != address(0) 
    /// @notice postcondition _operatorApprovals[_from][msg.sender] || _from == msg.sender
    /// @notice postcondition __verifier_old_uint(_balances[_id][_from]) >= _value    
    /// @notice postcondition _balances[_id][_from] == __verifier_old_uint(_balances[_id][_from]) - _value
    /// @notice postcondition _balances[_id][_to] == __verifier_old_uint(_balances[_id][_to]) + _value
    function safeTransferFrom(address _from, address _to, uint256 _id, uint256 _value, bytes memory _data) public;

    /// @notice postcondition forall (uint i) !(0 <= i && i < _ids.length && _from != _to) || (_balances[_ids[i]][_to] == __verifier_old_uint(_balances[_ids[i]][_to]) + _values[i])
    /// @notice postcondition forall (uint i) !(0 <= i && i < _ids.length && _from != _to) || (_balances[_ids[i]][_from] == __verifier_old_uint(_balances[_ids[i]][_from]) - _values[i])
    function safeBatchTransferFrom(address _from, address _to, uint256[] memory _ids, uint256[] memory _values, bytes memory _data) public;
}
",[]
5,27.121922731399536,0,True,"pragma solidity >= 0.5.0;

contract ERC1155  {
    /// @notice postcondition balance == _balances[_id][_owner]
    function balanceOf(address _owner, uint256 _id) public view returns (uint256 balance);

    /// @notice postcondition batchBalances.length == _owners.length 
    /// @notice postcondition batchBalances.length == _ids.length
    /// @notice postcondition forall (uint x) !( 0 <= x &&  x < batchBalances.length ) || batchBalances[x] == _balances[_ids[x]][_owners[x]]
    function balanceOfBatch(address[] memory _owners, uint256[] memory _ids) public view returns (uint256[] memory batchBalances);

    /// @notice postcondition _operatorApprovals[msg.sender][_operator] == _approved
    function setApprovalForAll(address _operator, bool _approved) public;

    /// @notice postcondition approved == _operatorApprovals[_owner][_operator]
    function isApprovedForAll(address _owner, address _operator) public view returns (bool approved);

    /// @notice postcondition _to != address(0) 
    /// @notice postcondition _operatorApprovals[_from][msg.sender] || _from == msg.sender
    /// @notice postcondition __verifier_old_uint(_balances[_id][_from]) >= _value    
    /// @notice postcondition _balances[_id][_from] == __verifier_old_uint(_balances[_id][_from]) - _value
    /// @notice postcondition _balances[_id][_to] == __verifier_old_uint(_balances[_id][_to]) + _value
    function safeTransferFrom(address _from, address _to, uint256 _id, uint256 _value, bytes memory _data) public;

    /// @notice postcondition forall (uint i) !(0 <= i && i < _ids.length && _from != _to) || (_balances[_ids[i]][_to] == __verifier_old_uint(_balances[_ids[i]][_to]) + _values[i])
    /// @notice postcondition forall (uint i) !(0 <= i && i < _ids.length && _from != _to) || (_balances[_ids[i]][_from] == __verifier_old_uint(_balances[_ids[i]][_from]) - _values[i])
    function safeBatchTransferFrom(address _from, address _to, uint256[] memory _ids, uint256[] memory _values, bytes memory _data) public;
}
",[]
6,23.059160232543945,0,True,"pragma solidity >= 0.5.0;

contract ERC1155  {
    /// @notice postcondition _balances[_id][_owner] == balance  
    function balanceOf(address _owner, uint256 _id) public view returns (uint256 balance);

    /// @notice postcondition batchBalances.length == _owners.length 
    /// @notice postcondition batchBalances.length == _ids.length
    /// @notice postcondition forall (uint x) !( 0 <= x &&  x < batchBalances.length ) || batchBalances[x] == _balances[_ids[x]][_owners[x]]
    function balanceOfBatch(address[] memory _owners, uint256[] memory _ids) public view returns (uint256[] memory batchBalances);

    /// @notice postcondition _operatorApprovals[msg.sender][_operator] == _approved 
    function setApprovalForAll(address _operator, bool _approved) public;

    /// @notice postcondition _operatorApprovals[_owner][_operator] == approved
    function isApprovedForAll(address _owner, address _operator) public view returns (bool approved);

    /// @notice postcondition _to != address(0) 
    /// @notice postcondition _operatorApprovals[_from][msg.sender] || _from == msg.sender
    /// @notice postcondition __verifier_old_uint(_balances[_id][_from]) >= _value    
    /// @notice postcondition _balances[_id][_from] == __verifier_old_uint(_balances[_id][_from]) - _value
    /// @notice postcondition _balances[_id][_to] == __verifier_old_uint(_balances[_id][_to]) + _value
    function safeTransferFrom(address _from, address _to, uint256 _id, uint256 _value, bytes memory _data) public;

    /// @notice postcondition forall (uint i) !(0 <= i && i < _ids.length && _from != _to) || (_balances[_ids[i]][_to] == __verifier_old_uint(_balances[_ids[i]][_to]) + _values[i])
    /// @notice postcondition forall (uint i) !(0 <= i && i < _ids.length && _from != _to) || (_balances[_ids[i]][_from] == __verifier_old_uint(_balances[_ids[i]][_from]) - _values[i])
    function safeBatchTransferFrom(address _from, address _to, uint256[] memory _ids, uint256[] memory _values, bytes memory _data) public;
}
",[]
7,315.5435252189636,10,False,,"[""Interaction: 3\nContext::[implicit_constructor]: OK\nERC1155::[constructor]: OK\nERC1155::uri: OK\nERC1155::balanceOf: OK\nERC1155::balanceOfBatch: OK\nERC1155::setApprovalForAll: OK\nERC1155::isApprovedForAll: OK\nERC1155::safeTransferFrom: OK\nERC1155::safeBatchTransferFrom: ERROR\n - ./solc_verify_generator/ERC1155/imp/ERC1155_merge.sol:179:5: Postcondition 'forall (uint i) !(0 <= i && i < _ids.length) || _balances[_ids[i]][_from] == __verifier_old_uint(_balances[_ids[i]][_from]) - _values[i]' might not hold at end of function.\nERC1155::[receive_ether_selfdestruct]: OK\nERC165::supportsInterface: OK\nERC165::[implicit_constructor]: OK\nIERC1155::[implicit_constructor]: OK\nIERC1155MetadataURI::[implicit_constructor]: OK\nIERC1155Receiver::[implicit_constructor]: OK\nIERC165::[implicit_constructor]: OK\nUse --show-warnings to see 20 warnings.\nErrors were found by the verifier.\n\n"", ""Interaction: 4\nContext::[implicit_constructor]: OK\nERC1155::[constructor]: OK\nERC1155::uri: OK\nERC1155::balanceOf: OK\nERC1155::balanceOfBatch: OK\nERC1155::setApprovalForAll: OK\nERC1155::isApprovedForAll: OK\nERC1155::safeTransferFrom: OK\nERC1155::safeBatchTransferFrom: ERROR\n - ./solc_verify_generator/ERC1155/imp/ERC1155_merge.sol:179:5: Postcondition 'forall (uint i) !(0 <= i && i < _ids.length) || _balances[_ids[i]][_from] == __verifier_old_uint(_balances[_ids[i]][_from]) - _values[i]' might not hold at end of function.\nERC1155::[receive_ether_selfdestruct]: OK\nERC165::supportsInterface: OK\nERC165::[implicit_constructor]: OK\nIERC1155::[implicit_constructor]: OK\nIERC1155MetadataURI::[implicit_constructor]: OK\nIERC1155Receiver::[implicit_constructor]: OK\nIERC165::[implicit_constructor]: OK\nUse --show-warnings to see 20 warnings.\nErrors were found by the verifier.\n\n"", ""Interaction: 5\nContext::[implicit_constructor]: OK\nERC1155::[constructor]: OK\nERC1155::uri: OK\nERC1155::balanceOf: OK\nERC1155::balanceOfBatch: OK\nERC1155::setApprovalForAll: OK\nERC1155::isApprovedForAll: OK\nERC1155::safeTransferFrom: OK\nERC1155::safeBatchTransferFrom: ERROR\n - ./solc_verify_generator/ERC1155/imp/ERC1155_merge.sol:179:5: Postcondition 'forall (uint i) !(0 <= i && i < _ids.length) || _balances[_ids[i]][_from] == __verifier_old_uint(_balances[_ids[i]][_from]) - _values[i]' might not hold at end of function.\nERC1155::[receive_ether_selfdestruct]: OK\nERC165::supportsInterface: OK\nERC165::[implicit_constructor]: OK\nIERC1155::[implicit_constructor]: OK\nIERC1155MetadataURI::[implicit_constructor]: OK\nIERC1155Receiver::[implicit_constructor]: OK\nIERC165::[implicit_constructor]: OK\nUse --show-warnings to see 20 warnings.\nErrors were found by the verifier.\n\n"", ""Interaction: 6\nContext::[implicit_constructor]: OK\nERC1155::[constructor]: OK\nERC1155::uri: OK\nERC1155::balanceOf: OK\nERC1155::balanceOfBatch: OK\nERC1155::setApprovalForAll: OK\nERC1155::isApprovedForAll: OK\nERC1155::safeTransferFrom: OK\nERC1155::safeBatchTransferFrom: ERROR\n - ./solc_verify_generator/ERC1155/imp/ERC1155_merge.sol:179:5: Postcondition 'forall (uint i) !(0 <= i && i < _ids.length) || (_balances[_ids[i]][_from] == __verifier_old_uint(_balances[_ids[i]][_from]) - _values[i])' might not hold at end of function.\nERC1155::[receive_ether_selfdestruct]: OK\nERC165::supportsInterface: OK\nERC165::[implicit_constructor]: OK\nIERC1155::[implicit_constructor]: OK\nIERC1155MetadataURI::[implicit_constructor]: OK\nIERC1155Receiver::[implicit_constructor]: OK\nIERC165::[implicit_constructor]: OK\nUse --show-warnings to see 20 warnings.\nErrors were found by the verifier.\n\n"", ""Interaction: 7\nContext::[implicit_constructor]: OK\nERC1155::[constructor]: OK\nERC1155::uri: OK\nERC1155::balanceOf: OK\nERC1155::balanceOfBatch: OK\nERC1155::setApprovalForAll: OK\nERC1155::isApprovedForAll: OK\nERC1155::safeTransferFrom: OK\nERC1155::safeBatchTransferFrom: ERROR\n - ./solc_verify_generator/ERC1155/imp/ERC1155_merge.sol:179:5: Postcondition 'forall (uint i) !(0 <= i && i < _ids.length) || (_balances[_ids[i]][_from] == __verifier_old_uint(_balances[_ids[i]][_from]) - _values[i])' might not hold at end of function.\nERC1155::[receive_ether_selfdestruct]: OK\nERC165::supportsInterface: OK\nERC165::[implicit_constructor]: OK\nIERC1155::[implicit_constructor]: OK\nIERC1155MetadataURI::[implicit_constructor]: OK\nIERC1155Receiver::[implicit_constructor]: OK\nIERC165::[implicit_constructor]: OK\nUse --show-warnings to see 20 warnings.\nErrors were found by the verifier.\n\n"", ""Interaction: 8\nContext::[implicit_constructor]: OK\nERC1155::[constructor]: OK\nERC1155::uri: OK\nERC1155::balanceOf: OK\nERC1155::balanceOfBatch: OK\nERC1155::setApprovalForAll: OK\nERC1155::isApprovedForAll: OK\nERC1155::safeTransferFrom: OK\nERC1155::safeBatchTransferFrom: ERROR\n - ./solc_verify_generator/ERC1155/imp/ERC1155_merge.sol:179:5: Postcondition 'forall (uint i) !(0 <= i && i < _ids.length) || (_balances[_ids[i]][_from] == __verifier_old_uint(_balances[_ids[i]][_from]) - _values[i])' might not hold at end of function.\nERC1155::[receive_ether_selfdestruct]: OK\nERC165::supportsInterface: OK\nERC165::[implicit_constructor]: OK\nIERC1155::[implicit_constructor]: OK\nIERC1155MetadataURI::[implicit_constructor]: OK\nIERC1155Receiver::[implicit_constructor]: OK\nIERC165::[implicit_constructor]: OK\nUse --show-warnings to see 20 warnings.\nErrors were found by the verifier.\n\n"", ""Interaction: 9\nContext::[implicit_constructor]: OK\nERC1155::[constructor]: OK\nERC1155::uri: OK\nERC1155::balanceOf: OK\nERC1155::balanceOfBatch: OK\nERC1155::setApprovalForAll: OK\nERC1155::isApprovedForAll: OK\nERC1155::safeTransferFrom: OK\nERC1155::safeBatchTransferFrom: ERROR\n - ./solc_verify_generator/ERC1155/imp/ERC1155_merge.sol:179:5: Postcondition 'forall (uint i) !(0 <= i && i < _ids.length) || (_balances[_ids[i]][_from] == __verifier_old_uint(_balances[_ids[i]][_from]) - _values[i])' might not hold at end of function.\nERC1155::[receive_ether_selfdestruct]: OK\nERC165::supportsInterface: OK\nERC165::[implicit_constructor]: OK\nIERC1155::[implicit_constructor]: OK\nIERC1155MetadataURI::[implicit_constructor]: OK\nIERC1155Receiver::[implicit_constructor]: OK\nIERC165::[implicit_constructor]: OK\nUse --show-warnings to see 20 warnings.\nErrors were found by the verifier.\n\n"", ""Interaction: 10\nContext::[implicit_constructor]: OK\nERC1155::[constructor]: OK\nERC1155::uri: OK\nERC1155::balanceOf: OK\nERC1155::balanceOfBatch: OK\nERC1155::setApprovalForAll: OK\nERC1155::isApprovedForAll: OK\nERC1155::safeTransferFrom: OK\nERC1155::safeBatchTransferFrom: ERROR\n - ./solc_verify_generator/ERC1155/imp/ERC1155_merge.sol:179:5: Postcondition 'forall (uint i) !(0 <= i && i < _ids.length) || (_balances[_ids[i]][_from] == __verifier_old_uint(_balances[_ids[i]][_from]) - _values[i])' might not hold at end of function.\nERC1155::[receive_ether_selfdestruct]: OK\nERC165::supportsInterface: OK\nERC165::[implicit_constructor]: OK\nIERC1155::[implicit_constructor]: OK\nIERC1155MetadataURI::[implicit_constructor]: OK\nIERC1155Receiver::[implicit_constructor]: OK\nIERC165::[implicit_constructor]: OK\nUse --show-warnings to see 20 warnings.\nErrors were found by the verifier.\n\n""]"
8,27.076379537582397,0,True,"pragma solidity >= 0.5.0;

contract ERC1155  {

    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);
    event TransferBatch(address indexed operator, address indexed from, address indexed to, uint256[] ids, uint256[] values);
    event ApprovalForAll(address indexed account, address indexed operator, bool approved);
    event URI(string value, uint256 indexed id);

    mapping (uint256 => mapping(address => uint256)) private _balances;
    mapping (address => mapping(address => bool)) private _operatorApprovals;
    string private _uri;

    /// @notice postcondition balance == _balances[_id][_owner]
    function balanceOf(address _owner, uint256 _id) public view returns (uint256 balance);

    /// @notice postcondition batchBalances.length == _owners.length 
    /// @notice postcondition batchBalances.length == _ids.length
    /// @notice postcondition forall (uint x) !(0 <= x && x < batchBalances.length) || batchBalances[x] == _balances[_ids[x]][_owners[x]]
    function balanceOfBatch(address[] memory _owners, uint256[] memory _ids) public view returns (uint256[] memory batchBalances);

    /// @notice postcondition _operatorApprovals[msg.sender][_operator] == _approved
    function setApprovalForAll(address _operator, bool _approved) public;

    /// @notice postcondition approved == _operatorApprovals[_owner][_operator]
    function isApprovedForAll(address _owner, address _operator) public view returns (bool approved);

    /// @notice postcondition _to != address(0) 
    /// @notice postcondition _operatorApprovals[_from][msg.sender] || _from == msg.sender
    /// @notice postcondition __verifier_old_uint(_balances[_id][_from]) >= _value    
    /// @notice postcondition _balances[_id][_from] == __verifier_old_uint(_balances[_id][_from]) - _value
    /// @notice postcondition _balances[_id][_to] == __verifier_old_uint(_balances[_id][_to]) + _value
    function safeTransferFrom(address _from, address _to, uint256 _id, uint256 _value, bytes memory _data) public;

    /// @notice postcondition forall (uint i) !(0 <= i && i < _ids.length && _from != _to) || (_balances[_ids[i]][_to] == __verifier_old_uint(_balances[_ids[i]][_to]) + _values[i])
    /// @notice postcondition forall (uint i) !(0 <= i && i < _ids.length && _from != _to) || (_balances[_ids[i]][_from] == __verifier_old_uint(_balances[_ids[i]][_from]) - _values[i])
    function safeBatchTransferFrom(address _from, address _to, uint256[] memory _ids, uint256[] memory _values, bytes memory _data) public;
}
",[]
9,24.682832956314087,0,True,"pragma solidity >= 0.5.0;

contract ERC1155  {

    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);
    event TransferBatch(address indexed operator, address indexed from, address indexed to, uint256[] ids, uint256[] values);
    event ApprovalForAll(address indexed account, address indexed operator, bool approved);
    event URI(string value, uint256 indexed id);

    mapping (uint256 => mapping(address => uint256)) private _balances;
    mapping (address => mapping(address => bool)) private _operatorApprovals;
    string private _uri;

    /// @notice postcondition balance == _balances[_id][_owner]
    function balanceOf(address _owner, uint256 _id) public view returns (uint256 balance);

    /// @notice postcondition batchBalances.length == _owners.length 
    /// @notice postcondition forall (uint x) !( 0 <= x &&  x < batchBalances.length ) || batchBalances[x] == _balances[_ids[x]][_owners[x]]
    function balanceOfBatch(address[] memory _owners, uint256[] memory _ids) public view returns (uint256[] memory batchBalances);

    /// @notice postcondition _operatorApprovals[msg.sender][_operator] == _approved
    function setApprovalForAll(address _operator, bool _approved) public;

    /// @notice postcondition approved == _operatorApprovals[_owner][_operator]
    function isApprovedForAll(address _owner, address _operator) public view returns (bool approved);

    /// @notice postcondition _to != address(0) 
    /// @notice postcondition _operatorApprovals[_from][msg.sender] || _from == msg.sender
    /// @notice postcondition __verifier_old_uint(_balances[_id][_from]) >= _value    
    /// @notice postcondition _balances[_id][_from] == __verifier_old_uint(_balances[_id][_from]) - _value
    /// @notice postcondition _balances[_id][_to] == __verifier_old_uint(_balances[_id][_to]) + _value
    function safeTransferFrom(address _from, address _to, uint256 _id, uint256 _value, bytes memory _data) public;

    /// @notice postcondition forall (uint i) !(0 <= i && i < _ids.length && _from != _to) || (_balances[_ids[i]][_to] == __verifier_old_uint(_balances[_ids[i]][_to]) + _values[i])
    /// @notice postcondition forall (uint i) !(0 <= i && i < _ids.length && _from != _to) || (_balances[_ids[i]][_from] == __verifier_old_uint(_balances[_ids[i]][_from]) - _values[i])
    function safeBatchTransferFrom(address _from, address _to, uint256[] memory _ids, uint256[] memory _values, bytes memory _data) public;
}
",[]
10,20.815210103988647,0,True,"pragma solidity >= 0.5.0;

contract ERC1155  {
    /// @notice postcondition balance == _balances[_id][_owner]
    function balanceOf(address _owner, uint256 _id) public view returns (uint256 balance);

    /// @notice postcondition batchBalances.length == _owners.length 
    /// @notice postcondition batchBalances.length == _ids.length
    /// @notice postcondition forall (uint x) !( 0 <= x &&  x < batchBalances.length ) || batchBalances[x] == _balances[_ids[x]][_owners[x]]
    function balanceOfBatch(address[] memory _owners, uint256[] memory _ids) public view returns (uint256[] memory batchBalances);

    /// @notice postcondition _operatorApprovals[msg.sender][_operator] == _approved
    function setApprovalForAll(address _operator, bool _approved) public;

    /// @notice postcondition approved == _operatorApprovals[_owner][_operator]
    function isApprovedForAll(address _owner, address _operator) public view returns (bool approved);

    /// @notice postcondition _to != address(0) 
    /// @notice postcondition _operatorApprovals[_from][msg.sender] || _from == msg.sender
    /// @notice postcondition __verifier_old_uint(_balances[_id][_from]) >= _value    
    /// @notice postcondition _balances[_id][_from] == __verifier_old_uint(_balances[_id][_from]) - _value
    /// @notice postcondition _balances[_id][_to] == __verifier_old_uint(_balances[_id][_to]) + _value
    function safeTransferFrom(address _from, address _to, uint256 _id, uint256 _value, bytes memory _data) public;

    /// @notice postcondition forall (uint i) !(0 <= i && i < _ids.length && _from != _to) || (_balances[_ids[i]][_to] == __verifier_old_uint(_balances[_ids[i]][_to]) + _values[i])
    /// @notice postcondition forall (uint i) !(0 <= i && i < _ids.length && _from != _to) || (_balances[_ids[i]][_from] == __verifier_old_uint(_balances[_ids[i]][_from]) - _values[i])
    function safeBatchTransferFrom(address _from, address _to, uint256[] memory _ids, uint256[] memory _values, bytes memory _data) public;
}
",[]
